{
  "version": 3,
  "sources": ["../node_modules/kaboom/src/math.ts", "../node_modules/kaboom/src/utils.ts", "../node_modules/kaboom/src/gamepad.json", "../node_modules/kaboom/src/app.ts", "../node_modules/kaboom/src/easings.ts", "../node_modules/kaboom/src/timer.ts", "../node_modules/kaboom/src/kaboom.ts", "../src/objects/textbox.ts", "../src/game.ts", "../src/actions/narration.ts", "../src/plugins/layer.ts", "../src/actions/character.ts", "../src/actions/background.ts", "../src/actions/audio.ts", "../src/actions/textbox.ts", "../src/main.ts", "main.ts"],
  "sourcesContent": ["import {\n\tPoint,\n\tRNGValue,\n\tLerpValue,\n\tVec2Args,\n} from \"./types\"\n\nexport function deg2rad(deg: number): number {\n\treturn deg * Math.PI / 180\n}\n\nexport function rad2deg(rad: number): number {\n\treturn rad * 180 / Math.PI\n}\n\nexport function clamp(\n\tval: number,\n\tmin: number,\n\tmax: number,\n): number {\n\tif (min > max) {\n\t\treturn clamp(val, max, min)\n\t}\n\treturn Math.min(Math.max(val, min), max)\n}\n\nexport function lerp<V extends LerpValue>(\n\ta: V,\n\tb: V,\n\tt: number,\n): V {\n\tif (typeof a === \"number\" && typeof b === \"number\") {\n\t\treturn a + (b - a) * t as V\n\t} else if (a instanceof Vec2 && b instanceof Vec2) {\n\t\treturn a.lerp(b, t) as V\n\t} else if (a instanceof Color && b instanceof Color) {\n\t\treturn a.lerp(b, t) as V\n\t}\n\tthrow new Error(`Bad value for lerp(): ${a}, ${b}. Only number, Vec2 and Color is supported.`)\n}\n\nexport function map(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn l2 + (v - l1) / (h1 - l1) * (h2 - l2)\n}\n\nexport function mapc(\n\tv: number,\n\tl1: number,\n\th1: number,\n\tl2: number,\n\th2: number,\n): number {\n\treturn clamp(map(v, l1, h1, l2, h2), l2, h2)\n}\n\nexport class Vec2 {\n\tx: number = 0\n\ty: number = 0\n\tconstructor(x: number = 0, y: number = x) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t}\n\tstatic fromAngle(deg: number) {\n\t\tconst angle = deg2rad(deg)\n\t\treturn new Vec2(Math.cos(angle), Math.sin(angle))\n\t}\n\tstatic LEFT = new Vec2(-1, 0)\n\tstatic RIGHT = new Vec2(1, 0)\n\tstatic UP = new Vec2(0, -1)\n\tstatic DOWN = new Vec2(0, 1)\n\tclone(): Vec2 {\n\t\treturn new Vec2(this.x, this.y)\n\t}\n\tadd(...args: Vec2Args): Vec2 {\n\t\tconst p2 = vec2(...args)\n\t\treturn new Vec2(this.x + p2.x, this.y + p2.y)\n\t}\n\tsub(...args: Vec2Args): Vec2 {\n\t\tconst p2 = vec2(...args)\n\t\treturn new Vec2(this.x - p2.x, this.y - p2.y)\n\t}\n\tscale(...args: Vec2Args): Vec2 {\n\t\tconst s = vec2(...args)\n\t\treturn new Vec2(this.x * s.x, this.y * s.y)\n\t}\n\tdist(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn this.sub(p2).len()\n\t}\n\tsdist(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn this.sub(p2).slen()\n\t}\n\tlen(): number {\n\t\treturn Math.sqrt(this.dot(this))\n\t}\n\tslen(): number {\n\t\treturn this.dot(this)\n\t}\n\tunit(): Vec2 {\n\t\tconst len = this.len()\n\t\treturn len === 0 ? new Vec2(0) : this.scale(1 / len)\n\t}\n\tnormal(): Vec2 {\n\t\treturn new Vec2(this.y, -this.x)\n\t}\n\treflect(normal: Vec2) {\n\t\treturn this.sub(normal.scale(2 * this.dot(normal)))\n\t}\n\tproject(on: Vec2) {\n\t\treturn on.scale(on.dot(this) / on.len())\n\t}\n\treject(on: Vec2) {\n\t\treturn this.sub(this.project(on))\n\t}\n\tdot(p2: Vec2): number {\n\t\treturn this.x * p2.x + this.y * p2.y\n\t}\n\tcross(p2: Vec2): number {\n\t\treturn this.x * p2.y - this.y * p2.x\n\t}\n\tangle(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn rad2deg(Math.atan2(this.y - p2.y, this.x - p2.x))\n\t}\n\tangleBetween(...args: Vec2Args): number {\n\t\tconst p2 = vec2(...args)\n\t\treturn rad2deg(Math.atan2(this.cross(p2), this.dot(p2)))\n\t}\n\tlerp(dest: Vec2, t: number): Vec2 {\n\t\treturn new Vec2(lerp(this.x, dest.x, t), lerp(this.y, dest.y, t))\n\t}\n\tslerp(dest: Vec2, t: number): Vec2 {\n\t\tconst cos = this.dot(dest)\n\t\tconst sin = this.cross(dest)\n\t\tconst angle = Math.atan2(sin, cos)\n\t\treturn this\n\t\t\t.scale(Math.sin((1 - t) * angle))\n\t\t\t.add(dest.scale(Math.sin(t * angle)))\n\t\t\t.scale(1 / sin)\n\t}\n\tisZero(): boolean {\n\t\treturn this.x === 0 && this.y === 0\n\t}\n\ttoFixed(n: number): Vec2 {\n\t\treturn new Vec2(Number(this.x.toFixed(n)), Number(this.y.toFixed(n)))\n\t}\n\ttransform(m: Mat4): Vec2 {\n\t\treturn m.multVec2(this)\n\t}\n\teq(other: Vec2): boolean {\n\t\treturn this.x === other.x && this.y === other.y\n\t}\n\tbbox(): Rect {\n\t\treturn new Rect(this, 0, 0)\n\t}\n\ttoString(): string {\n\t\treturn `vec2(${this.x.toFixed(2)}, ${this.y.toFixed(2)})`\n\t}\n}\n\nexport function vec2(...args: Vec2Args): Vec2 {\n\tif (args.length === 1) {\n\t\tif (args[0] instanceof Vec2) {\n\t\t\treturn new Vec2(args[0].x, args[0].y)\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 2) {\n\t\t\treturn new Vec2(...args[0])\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Vec2(...args)\n}\n\nexport class Color {\n\n\tr: number = 255\n\tg: number = 255\n\tb: number = 255\n\n\tconstructor(r: number, g: number, b: number) {\n\t\tthis.r = clamp(r, 0, 255)\n\t\tthis.g = clamp(g, 0, 255)\n\t\tthis.b = clamp(b, 0, 255)\n\t}\n\n\tstatic fromArray(arr: number[]) {\n\t\treturn new Color(arr[0], arr[1], arr[2])\n\t}\n\n\tstatic fromHex(hex: string | number) {\n\t\tif (typeof hex === \"number\") {\n\t\t\treturn new Color(\n\t\t\t\t(hex >> 16) & 0xff,\n\t\t\t\t(hex >> 8) & 0xff,\n\t\t\t\t(hex >> 0) & 0xff,\n\t\t\t)\n\t\t} else if (typeof hex === \"string\") {\n\t\t\tconst result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n\t\t\treturn new Color(\n\t\t\t\tparseInt(result[1], 16),\n\t\t\t\tparseInt(result[2], 16),\n\t\t\t\tparseInt(result[3], 16),\n\t\t\t)\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid hex color format\")\n\t\t}\n\t}\n\n\tstatic fromHSL(h: number, s: number, l: number) {\n\n\t\tif (s == 0){\n\t\t\treturn new Color(255 * l, 255 * l, 255 * l)\n\t\t}\n\n\t\tconst hue2rgb = (p, q, t) => {\n\t\t\tif (t < 0) t += 1\n\t\t\tif (t > 1) t -= 1\n\t\t\tif (t < 1 / 6) return p + (q - p) * 6 * t\n\t\t\tif (t < 1 / 2) return q\n\t\t\tif (t < 2 / 3) return p + (q - p) * (2/3 - t) * 6\n\t\t\treturn p\n\t\t}\n\n\t\tconst q = l < 0.5 ? l * (1 + s) : l + s - l * s\n\t\tconst p = 2 * l - q\n\t\tconst r = hue2rgb(p, q, h + 1 / 3)\n\t\tconst g = hue2rgb(p, q, h)\n\t\tconst b = hue2rgb(p, q, h - 1 / 3)\n\n\t\treturn new Color(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255))\n\n\t}\n\n\tstatic RED = new Color(255, 0, 0)\n\tstatic GREEN = new Color(0, 255, 0)\n\tstatic BLUE = new Color(0, 0, 255)\n\tstatic YELLOW = new Color(255, 255, 0)\n\tstatic MAGENTA = new Color(255, 0, 255)\n\tstatic CYAN = new Color(0, 255, 255)\n\tstatic WHITE = new Color(255, 255, 255)\n\tstatic BLACK = new Color(0, 0, 0)\n\n\tclone(): Color {\n\t\treturn new Color(this.r, this.g, this.b)\n\t}\n\n\tlighten(a: number): Color {\n\t\treturn new Color(this.r + a, this.g + a, this.b + a)\n\t}\n\n\tdarken(a: number): Color {\n\t\treturn this.lighten(-a)\n\t}\n\n\tinvert(): Color {\n\t\treturn new Color(255 - this.r, 255 - this.g, 255 - this.b)\n\t}\n\n\tmult(other: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.r * other.r / 255,\n\t\t\tthis.g * other.g / 255,\n\t\t\tthis.b * other.b / 255,\n\t\t)\n\t}\n\n\tlerp(dest: Color, t: number): Color {\n\t\treturn new Color(\n\t\t\tlerp(this.r, dest.r, t),\n\t\t\tlerp(this.g, dest.g, t),\n\t\t\tlerp(this.b, dest.b, t),\n\t\t)\n\t}\n\n\teq(other: Color): boolean {\n\t\treturn this.r === other.r\n\t\t\t&& this.g === other.g\n\t\t\t&& this.b === other.b\n\n\t}\n\n\ttoString(): string {\n\t\treturn `rgb(${this.r}, ${this.g}, ${this.b})`\n\t}\n\n\ttoHex(): string {\n\t\treturn \"#\" + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16).slice(1)\n\t}\n\n}\n\nexport function rgb(...args): Color {\n\tif (args.length === 0) {\n\t\treturn new Color(255, 255, 255)\n\t} else if (args.length === 1) {\n\t\tif (args[0] instanceof Color) {\n\t\t\treturn args[0].clone()\n\t\t} else if (typeof args[0] === \"string\") {\n\t\t\treturn Color.fromHex(args[0])\n\t\t} else if (Array.isArray(args[0]) && args[0].length === 3) {\n\t\t\treturn Color.fromArray(args[0])\n\t\t}\n\t}\n\t// @ts-ignore\n\treturn new Color(...args)\n}\n\nexport const hsl2rgb = (h, s, l) => Color.fromHSL(h, s, l)\n\nexport class Quad {\n\tx: number = 0\n\ty: number = 0\n\tw: number = 1\n\th: number = 1\n\tconstructor(x: number, y: number, w: number, h: number) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t\tthis.w = w\n\t\tthis.h = h\n\t}\n\tscale(other: Quad): Quad {\n\t\treturn new Quad(\n\t\t\tthis.x + this.w * other.x,\n\t\t\tthis.y + this.h * other.y,\n\t\t\tthis.w * other.w,\n\t\t\tthis.h * other.h,\n\t\t)\n\t}\n\tpos() {\n\t\treturn new Vec2(this.x, this.y)\n\t}\n\tclone(): Quad {\n\t\treturn new Quad(this.x, this.y, this.w, this.h)\n\t}\n\teq(other: Quad): boolean {\n\t\treturn this.x === other.x\n\t\t\t&& this.y === other.y\n\t\t\t&& this.w === other.w\n\t\t\t&& this.h === other.h\n\t}\n\ttoString(): string {\n\t\treturn `quad(${this.x}, ${this.y}, ${this.w}, ${this.h})`\n\t}\n}\n\nexport function quad(x: number, y: number, w: number, h: number): Quad {\n\treturn new Quad(x, y, w, h)\n}\n\nexport class Mat4 {\n\n\tm: number[] = [\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1,\n\t]\n\n\tconstructor(m?: number[]) {\n\t\tif (m) {\n\t\t\tthis.m = m\n\t\t}\n\t}\n\n\tstatic translate(p: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\tp.x, p.y, 0, 1,\n\t\t])\n\t}\n\n\tstatic scale(s: Vec2): Mat4 {\n\t\treturn new Mat4([\n\t\t\ts.x, 0, 0, 0,\n\t\t\t0, s.y, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateX(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, -s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateY(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\tc, 0, s, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t-s, 0, c, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\tstatic rotateZ(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\treturn new Mat4([\n\t\t\tc, -s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t}\n\n\ttranslate(p: Vec2) {\n\t\tthis.m[12] += this.m[0] * p.x + this.m[4] * p.y\n\t\tthis.m[13] += this.m[1] * p.x + this.m[5] * p.y\n\t\tthis.m[14] += this.m[2] * p.x + this.m[6] * p.y\n\t\tthis.m[15] += this.m[3] * p.x + this.m[7] * p.y\n\t\treturn this\n\t}\n\n\tscale(p: Vec2) {\n\t\tthis.m[0] *= p.x\n\t\tthis.m[4] *= p.y\n\t\tthis.m[1] *= p.x\n\t\tthis.m[5] *= p.y\n\t\tthis.m[2] *= p.x\n\t\tthis.m[6] *= p.y\n\t\tthis.m[3] *= p.x\n\t\tthis.m[7] *= p.y\n\t\treturn this\n\t}\n\n\trotate(a: number): Mat4 {\n\t\ta = deg2rad(-a)\n\t\tconst c = Math.cos(a)\n\t\tconst s = Math.sin(a)\n\t\tconst m0 = this.m[0]\n\t\tconst m1 = this.m[1]\n\t\tconst m4 = this.m[4]\n\t\tconst m5 = this.m[5]\n\t\tthis.m[0] = m0 * c + m1 * s\n\t\tthis.m[1] = -m0 * s + m1 * c\n\t\tthis.m[4] = m4 * c + m5 * s\n\t\tthis.m[5] = -m4 * s + m5 * c\n\t\treturn this\n\t}\n\n\t// TODO: in-place variant\n\tmult(other: Mat4): Mat4 {\n\t\tconst out = []\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] =\n\t\t\t\t\tthis.m[0 * 4 + j] * other.m[i * 4 + 0] +\n\t\t\t\t\tthis.m[1 * 4 + j] * other.m[i * 4 + 1] +\n\t\t\t\t\tthis.m[2 * 4 + j] * other.m[i * 4 + 2] +\n\t\t\t\t\tthis.m[3 * 4 + j] * other.m[i * 4 + 3]\n\t\t\t}\n\t\t}\n\t\treturn new Mat4(out)\n\t}\n\n\tmultVec2(p: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tp.x * this.m[0] + p.y * this.m[4] + this.m[12],\n\t\t\tp.x * this.m[1] + p.y * this.m[5] + this.m[13],\n\t\t)\n\t}\n\n\tgetTranslation() {\n\t\treturn new Vec2(this.m[12], this.m[13])\n\t}\n\n\tgetScale() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst det = this.m[0] * this.m[5] - this.m[1] * this.m[4]\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn new Vec2(r, det / r)\n\t\t} else if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst det = this.m[0] * this.m[5] - this.m[1] * this.m[4]\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn new Vec2(det / s, s)\n\t\t} else {\n\t\t\treturn new Vec2(0, 0)\n\t\t}\n\t}\n\n\tgetRotation() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn rad2deg(this.m[1] > 0 ? Math.acos(this.m[0] / r) : -Math.acos(this.m[0] / r))\n\t\t} else if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn rad2deg(Math.PI / 2 - (this.m[5] > 0 ? Math.acos(-this.m[4] / s) : -Math.acos(this.m[4] / s)))\n\t\t} else {\n\t\t\treturn 0\n\t\t}\n\t}\n\n\tgetSkew() {\n\t\tif (this.m[0] != 0 || this.m[1] != 0) {\n\t\t\tconst r = Math.sqrt(this.m[0] * this.m[0] + this.m[1] * this.m[1])\n\t\t\treturn new Vec2(Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5]) / (r * r), 0)\n\t\t}\n\t\telse if (this.m[4] != 0 || this.m[5] != 0) {\n\t\t\tconst s = Math.sqrt(this.m[4] * this.m[4] + this.m[5] * this.m[5])\n\t\t\treturn new Vec2(0, Math.atan(this.m[0] * this.m[4] + this.m[1] * this.m[5]) / (s * s))\n\t\t}\n\t\telse {\n\t\t\treturn new Vec2(0, 0)\n\t\t}\n\t}\n\n\tinvert(): Mat4 {\n\n\t\tconst out = []\n\n\t\tconst f00 = this.m[10] * this.m[15] - this.m[14] * this.m[11]\n\t\tconst f01 = this.m[9] * this.m[15] - this.m[13] * this.m[11]\n\t\tconst f02 = this.m[9] * this.m[14] - this.m[13] * this.m[10]\n\t\tconst f03 = this.m[8] * this.m[15] - this.m[12] * this.m[11]\n\t\tconst f04 = this.m[8] * this.m[14] - this.m[12] * this.m[10]\n\t\tconst f05 = this.m[8] * this.m[13] - this.m[12] * this.m[9]\n\t\tconst f06 = this.m[6] * this.m[15] - this.m[14] * this.m[7]\n\t\tconst f07 = this.m[5] * this.m[15] - this.m[13] * this.m[7]\n\t\tconst f08 = this.m[5] * this.m[14] - this.m[13] * this.m[6]\n\t\tconst f09 = this.m[4] * this.m[15] - this.m[12] * this.m[7]\n\t\tconst f10 = this.m[4] * this.m[14] - this.m[12] * this.m[6]\n\t\tconst f11 = this.m[5] * this.m[15] - this.m[13] * this.m[7]\n\t\tconst f12 = this.m[4] * this.m[13] - this.m[12] * this.m[5]\n\t\tconst f13 = this.m[6] * this.m[11] - this.m[10] * this.m[7]\n\t\tconst f14 = this.m[5] * this.m[11] - this.m[9] * this.m[7]\n\t\tconst f15 = this.m[5] * this.m[10] - this.m[9] * this.m[6]\n\t\tconst f16 = this.m[4] * this.m[11] - this.m[8] * this.m[7]\n\t\tconst f17 = this.m[4] * this.m[10] - this.m[8] * this.m[6]\n\t\tconst f18 = this.m[4] * this.m[9] - this.m[8] * this.m[5]\n\n\t\tout[0] = this.m[5] * f00 - this.m[6] * f01 + this.m[7] * f02\n\t\tout[4] = -(this.m[4] * f00 - this.m[6] * f03 + this.m[7] * f04)\n\t\tout[8] = this.m[4] * f01 - this.m[5] * f03 + this.m[7] * f05\n\t\tout[12] = -(this.m[4] * f02 - this.m[5] * f04 + this.m[6] * f05)\n\n\t\tout[1] = -(this.m[1] * f00 - this.m[2] * f01 + this.m[3] * f02)\n\t\tout[5] = this.m[0] * f00 - this.m[2] * f03 + this.m[3] * f04\n\t\tout[9] = -(this.m[0] * f01 - this.m[1] * f03 + this.m[3] * f05)\n\t\tout[13] = this.m[0] * f02 - this.m[1] * f04 + this.m[2] * f05\n\n\t\tout[2] = this.m[1] * f06 - this.m[2] * f07 + this.m[3] * f08\n\t\tout[6] = -(this.m[0] * f06 - this.m[2] * f09 + this.m[3] * f10)\n\t\tout[10] = this.m[0] * f11 - this.m[1] * f09 + this.m[3] * f12\n\t\tout[14] = -(this.m[0] * f08 - this.m[1] * f10 + this.m[2] * f12)\n\n\t\tout[3] = -(this.m[1] * f13 - this.m[2] * f14 + this.m[3] * f15)\n\t\tout[7] = this.m[0] * f13 - this.m[2] * f16 + this.m[3] * f17\n\t\tout[11] = -(this.m[0] * f14 - this.m[1] * f16 + this.m[3] * f18)\n\t\tout[15] = this.m[0] * f15 - this.m[1] * f17 + this.m[2] * f18\n\n\t\tconst det =\n\t\t\tthis.m[0] * out[0] +\n\t\t\tthis.m[1] * out[4] +\n\t\t\tthis.m[2] * out[8] +\n\t\t\tthis.m[3] * out[12]\n\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tfor (let j = 0; j < 4; j++) {\n\t\t\t\tout[i * 4 + j] *= (1.0 / det)\n\t\t\t}\n\t\t}\n\n\t\treturn new Mat4(out)\n\n\t}\n\n\tclone(): Mat4 {\n\t\treturn new Mat4([...this.m])\n\t}\n\n\ttoString(): string {\n\t\treturn this.m.toString()\n\t}\n\n}\n\nexport function wave(lo: number, hi: number, t: number, f = Math.sin): number {\n\treturn lo + (f(t) + 1) / 2 * (hi - lo)\n}\n\n// basic ANSI C LCG\nconst A = 1103515245\nconst C = 12345\nconst M = 2147483648\n\nexport class RNG {\n\tseed: number\n\tconstructor(seed: number) {\n\t\tthis.seed = seed\n\t}\n\tgen(): number {\n\t\tthis.seed = (A * this.seed + C) % M\n\t\treturn this.seed / M\n\t}\n\tgenNumber(a: number, b: number): number {\n\t\treturn a + this.gen() * (b - a)\n\t}\n\tgenVec2(a: Vec2, b?: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tthis.genNumber(a.x, b.x),\n\t\t\tthis.genNumber(a.y, b.y),\n\t\t)\n\t}\n\tgenColor(a: Color, b: Color): Color {\n\t\treturn new Color(\n\t\t\tthis.genNumber(a.r, b.r),\n\t\t\tthis.genNumber(a.g, b.g),\n\t\t\tthis.genNumber(a.b, b.b),\n\t\t)\n\t}\n\tgenAny<T extends RNGValue>(...args: T[]): T {\n\t\tif (args.length === 0) {\n\t\t\treturn this.gen() as T\n\t\t} else if (args.length === 1) {\n\t\t\tif (typeof args[0] === \"number\") {\n\t\t\t\treturn this.genNumber(0, args[0]) as T\n\t\t\t} else if (args[0] instanceof Vec2) {\n\t\t\t\treturn this.genVec2(vec2(0, 0), args[0]) as T\n\t\t\t} else if (args[0] instanceof Color) {\n\t\t\t\treturn this.genColor(rgb(0, 0, 0), args[0]) as T\n\t\t\t}\n\t\t} else if (args.length === 2) {\n\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\treturn this.genNumber(args[0], args[1]) as T\n\t\t\t} else if (args[0] instanceof Vec2 && args[1] instanceof Vec2) {\n\t\t\t\treturn this.genVec2(args[0], args[1]) as T\n\t\t\t} else if (args[0] instanceof Color && args[1] instanceof Color) {\n\t\t\t\treturn this.genColor(args[0], args[1]) as T\n\t\t\t}\n\t\t}\n\t}\n}\n\n// TODO: let user pass seed\nconst defRNG = new RNG(Date.now())\n\nexport function randSeed(seed?: number): number {\n\tif (seed != null) {\n\t\tdefRNG.seed = seed\n\t}\n\treturn defRNG.seed\n}\n\nexport function rand(...args) {\n\t// @ts-ignore\n\treturn defRNG.genAny(...args)\n}\n\n// TODO: randi() to return 0 / 1?\nexport function randi(...args: number[]) {\n\treturn Math.floor(rand(...args))\n}\n\nexport function chance(p: number): boolean {\n\treturn rand() <= p\n}\n\nexport function choose<T>(list: T[]): T {\n\treturn list[randi(list.length)]\n}\n\n// TODO: better name\nexport function testRectRect2(r1: Rect, r2: Rect): boolean {\n\treturn r1.pos.x + r1.width >= r2.pos.x\n\t\t&& r1.pos.x <= r2.pos.x + r2.width\n\t\t&& r1.pos.y + r1.height >= r2.pos.y\n\t\t&& r1.pos.y <= r2.pos.y + r2.height\n}\n\nexport function testRectRect(r1: Rect, r2: Rect): boolean {\n\treturn r1.pos.x + r1.width > r2.pos.x\n\t\t&& r1.pos.x < r2.pos.x + r2.width\n\t\t&& r1.pos.y + r1.height > r2.pos.y\n\t\t&& r1.pos.y < r2.pos.y + r2.height\n}\n\n// TODO: better name\nexport function testLineLineT(l1: Line, l2: Line): number | null {\n\n\tif ((l1.p1.x === l1.p2.x && l1.p1.y === l1.p2.y) || (l2.p1.x === l2.p2.x && l2.p1.y === l2.p2.y)) {\n\t\treturn null\n\t}\n\n\tconst denom = ((l2.p2.y - l2.p1.y) * (l1.p2.x - l1.p1.x) - (l2.p2.x - l2.p1.x) * (l1.p2.y - l1.p1.y))\n\n\t// parallel\n\tif (denom === 0) {\n\t\treturn null\n\t}\n\n\tconst ua = ((l2.p2.x - l2.p1.x) * (l1.p1.y - l2.p1.y) - (l2.p2.y - l2.p1.y) * (l1.p1.x - l2.p1.x)) / denom\n\tconst ub = ((l1.p2.x - l1.p1.x) * (l1.p1.y - l2.p1.y) - (l1.p2.y - l1.p1.y) * (l1.p1.x - l2.p1.x)) / denom\n\n\t// is the intersection on the segments\n\tif (ua < 0 || ua > 1 || ub < 0 || ub > 1) {\n\t\treturn null\n\t}\n\n\treturn ua\n\n}\n\nexport function testLineLine(l1: Line, l2: Line): Vec2 | null {\n\tconst t = testLineLineT(l1, l2)\n\tif (!t) return null\n\treturn vec2(\n\t\tl1.p1.x + t * (l1.p2.x - l1.p1.x),\n\t\tl1.p1.y + t * (l1.p2.y - l1.p1.y),\n\t)\n}\n\nexport function testRectLine(r: Rect, l: Line): boolean {\n\tif (testRectPoint(r, l.p1) || testRectPoint(r, l.p2)) {\n\t\treturn true\n\t}\n\tconst pts = r.points()\n\treturn !!testLineLine(l, new Line(pts[0], pts[1]))\n\t\t|| !!testLineLine(l, new Line(pts[1], pts[2]))\n\t\t|| !!testLineLine(l, new Line(pts[2], pts[3]))\n\t\t|| !!testLineLine(l, new Line(pts[3], pts[0]))\n}\n\nexport function testRectPoint2(r: Rect, pt: Point): boolean {\n\treturn pt.x >= r.pos.x\n\t\t&& pt.x <= r.pos.x + r.width\n\t\t&& pt.y >= r.pos.y\n\t\t&& pt.y <= r.pos.y + r.height\n}\n\nexport function testRectPoint(r: Rect, pt: Point): boolean {\n\treturn pt.x > r.pos.x\n\t\t&& pt.x < r.pos.x + r.width\n\t\t&& pt.y > r.pos.y\n\t\t&& pt.y < r.pos.y + r.height\n}\n\nexport function testRectCircle(r: Rect, c: Circle): boolean {\n\tconst nx = Math.max(r.pos.x, Math.min(c.center.x, r.pos.x + r.width))\n\tconst ny = Math.max(r.pos.y, Math.min(c.center.y, r.pos.y + r.height))\n\tconst nearestPoint = vec2(nx, ny)\n\treturn nearestPoint.sdist(c.center) <= c.radius * c.radius\n}\n\nexport function testRectPolygon(r: Rect, p: Polygon): boolean {\n\treturn testPolygonPolygon(p, new Polygon(r.points()))\n}\n\nexport function testLinePoint(l: Line, pt: Vec2): boolean {\n\tconst v1 = pt.sub(l.p1)\n\tconst v2 = l.p2.sub(l.p1)\n\n\t// Check if sine is 0, in that case lines are parallel.\n\t// If not parallel, the point cannot lie on the line.\n\tif (Math.abs(v1.cross(v2)) > Number.EPSILON) {\n\t\treturn false\n\t}\n\n\t// Scalar projection of v1 on v2\n\tconst t = v1.dot(v2) / v2.dot(v2)\n\t// Since t is percentual distance of pt from line.p1 on the line,\n\t// it should be between 0% and 100%\n\treturn t >= 0 && t <= 1\n}\n\nexport function testLineCircle(l: Line, circle: Circle): boolean {\n\tconst v = l.p2.sub(l.p1)\n\tconst a = v.dot(v)\n\tconst centerToOrigin = l.p1.sub(circle.center)\n\tconst b = 2 * v.dot(centerToOrigin)\n\tconst c = centerToOrigin.dot(centerToOrigin) - circle.radius * circle.radius\n\t// Calculate the discriminant of ax^2 + bx + c\n\tconst dis = b * b - 4 * a * c\n\n\t// No root\n\tif ((a <= Number.EPSILON) || (dis < 0)) {\n\t\treturn false\n\t}\n\t// One possible root\n\telse if (dis == 0) {\n\t\tconst t = -b / (2 * a)\n\t\tif (t >= 0 && t <= 1) {\n\t\t\treturn true\n\t\t}\n\t}\n\t// Two possible roots\n\telse {\n\t\tconst t1 = (-b + Math.sqrt(dis)) / (2 * a)\n\t\tconst t2 = (-b - Math.sqrt(dis)) / (2 * a)\n\t\tif ((t1 >= 0 && t1 <= 1) || (t2 >= 0 && t2 <= 1)) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\t// Check if line is completely within the circle\n\t// We only need to check one point, since the line didn't cross the circle\n\treturn testCirclePoint(circle, l.p1)\n}\n\nexport function testLinePolygon(l: Line, p: Polygon): boolean {\n\n\t// test if line is inside\n\tif (testPolygonPoint(p, l.p1) || testPolygonPoint(p, l.p2)) {\n\t\treturn true\n\t}\n\n\t// test each line\n\tfor (let i = 0; i < p.pts.length; i++) {\n\t\tconst p1 = p.pts[i]\n\t\tconst p2 = p.pts[(i + 1) % p.pts.length]\n\t\tif (testLineLine(l, new Line(p1, p2))) {\n\t\t\treturn true\n\t\t}\n\t}\n\n\treturn false\n\n}\n\nexport function testCirclePoint(c: Circle, p: Point): boolean {\n\treturn c.center.sdist(p) < c.radius * c.radius\n}\n\nexport function testCircleCircle(c1: Circle, c2: Circle): boolean {\n\treturn c1.center.sdist(c2.center) < (c1.radius + c2.radius) * (c1.radius + c2.radius)\n}\n\nexport function testCirclePolygon(c: Circle, p: Polygon): boolean {\n\t// For each edge check for intersection\n\tlet prev = p.pts[p.pts.length - 1]\n\tfor (const cur of p.pts) {\n\t\tif (testLineCircle(new Line(prev, cur), c)) {\n\t\t\treturn true\n\t\t}\n\t\tprev = cur\n\t}\n\n\t// Check if the polygon is completely within the circle\n\t// We only need to check one point, since the polygon didn't cross the circle\n\tif (testCirclePoint(c, p.pts[0])) {\n\t\treturn true\n\t}\n\n\t// Check if the circle is completely within the polygon\n\treturn testPolygonPoint(p, c.center)\n}\n\nexport function testPolygonPolygon(p1: Polygon, p2: Polygon): boolean {\n\tfor (let i = 0; i < p1.pts.length; i++) {\n\t\tif (testLinePolygon(new Line(p1.pts[i], p1.pts[(i + 1) % p1.pts.length]), p2)) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\nexport function testPolygonPoint(poly: Polygon, pt: Point): boolean {\n\n\tlet c = false\n\tconst p = poly.pts\n\n\tfor (let i = 0, j = p.length - 1; i < p.length; j = i++) {\n\t\tif (\n\t\t\t((p[i].y > pt.y) != (p[j].y > pt.y))\n\t\t\t&& (pt.x < (p[j].x - p[i].x) * (pt.y - p[i].y) / (p[j].y - p[i].y) + p[i].x)\n\t\t) {\n\t\t\tc = !c\n\t\t}\n\t}\n\n\treturn c\n\n}\n\nexport function testPointPoint(p1: Point, p2: Point): boolean {\n\treturn p1.x === p2.x && p1.y === p2.y\n}\n\nexport class Line {\n\tp1: Vec2\n\tp2: Vec2\n\tconstructor(p1: Vec2, p2: Vec2) {\n\t\tthis.p1 = p1.clone()\n\t\tthis.p2 = p2.clone()\n\t}\n\ttransform(m: Mat4): Line {\n\t\treturn new Line(m.multVec2(this.p1), m.multVec2(this.p2))\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(this.p1, this.p2)\n\t}\n\tarea(): number {\n\t\treturn this.p1.dist(this.p2)\n\t}\n\tclone(): Line {\n\t\treturn new Line(this.p1, this.p2)\n\t}\n}\n\nexport class Rect {\n\tpos: Vec2\n\twidth: number\n\theight: number\n\tconstructor(pos: Vec2, width: number, height: number) {\n\t\tthis.pos = pos.clone()\n\t\tthis.width = width\n\t\tthis.height = height\n\t}\n\tstatic fromPoints(p1: Vec2, p2: Vec2): Rect {\n\t\treturn new Rect(p1.clone(), p2.x - p1.x, p2.y - p1.y)\n\t}\n\tcenter(): Vec2 {\n\t\treturn new Vec2(this.pos.x + this.width / 2, this.pos.y + this.height / 2)\n\t}\n\tpoints(): [Vec2, Vec2, Vec2, Vec2] {\n\t\treturn [\n\t\t\tthis.pos,\n\t\t\tthis.pos.add(this.width, 0),\n\t\t\tthis.pos.add(this.width, this.height),\n\t\t\tthis.pos.add(0, this.height),\n\t\t]\n\t}\n\ttransform(m: Mat4): Polygon {\n\t\treturn new Polygon(this.points().map((pt) => m.multVec2(pt)))\n\t}\n\tbbox(): Rect {\n\t\treturn this.clone()\n\t}\n\tarea(): number {\n\t\treturn this.width * this.height\n\t}\n\tclone(): Rect {\n\t\treturn new Rect(this.pos.clone(), this.width, this.height)\n\t}\n\tdistToPoint(p: Vec2): number {\n\t\treturn Math.sqrt(this.sdistToPoint(p))\n\t}\n\tsdistToPoint(p: Vec2): number {\n\t\tconst min = this.pos\n\t\tconst max = this.pos.add(this.width, this.height)\n\t\tconst dx = Math.max(min.x - p.x, 0, p.x - max.x)\n\t\tconst dy = Math.max(min.y - p.y, 0, p.y - max.y)\n\t\treturn dx * dx + dy * dy\n\t}\n}\n\nexport class Circle {\n\tcenter: Vec2\n\tradius: number\n\tconstructor(center: Vec2, radius: number) {\n\t\tthis.center = center.clone()\n\t\tthis.radius = radius\n\t}\n\ttransform(tr: Mat4): Ellipse {\n\t\treturn new Ellipse(this.center, this.radius, this.radius).transform(tr)\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(\n\t\t\tthis.center.sub(vec2(this.radius)),\n\t\t\tthis.center.add(vec2(this.radius)),\n\t\t)\n\t}\n\tarea(): number {\n\t\treturn this.radius * this.radius * Math.PI\n\t}\n\tclone(): Circle {\n\t\treturn new Circle(this.center, this.radius)\n\t}\n}\n\nexport class Ellipse {\n\tcenter: Vec2\n\tradiusX: number\n\tradiusY: number\n\tconstructor(center: Vec2, rx: number, ry: number) {\n\t\tthis.center = center.clone()\n\t\tthis.radiusX = rx\n\t\tthis.radiusY = ry\n\t}\n\ttransform(tr: Mat4): Ellipse {\n\t\treturn new Ellipse(\n\t\t\ttr.multVec2(this.center),\n\t\t\ttr.m[0] * this.radiusX,\n\t\t\ttr.m[5] * this.radiusY,\n\t\t)\n\t}\n\tbbox(): Rect {\n\t\treturn Rect.fromPoints(\n\t\t\tthis.center.sub(vec2(this.radiusX, this.radiusY)),\n\t\t\tthis.center.add(vec2(this.radiusX, this.radiusY)),\n\t\t)\n\t}\n\tarea(): number {\n\t\treturn this.radiusX * this.radiusY * Math.PI\n\t}\n\tclone(): Ellipse {\n\t\treturn new Ellipse(this.center, this.radiusX, this.radiusY)\n\t}\n}\n\nexport class Polygon {\n\tpts: Vec2[]\n\tconstructor(pts: Vec2[]) {\n\t\tif (pts.length < 3) {\n\t\t\tthrow new Error(\"Polygons should have at least 3 vertices\")\n\t\t}\n\t\tthis.pts = pts\n\t}\n\ttransform(m: Mat4): Polygon {\n\t\treturn new Polygon(this.pts.map((pt) => m.multVec2(pt)))\n\t}\n\tbbox(): Rect {\n\t\tconst p1 = vec2(Number.MAX_VALUE)\n\t\tconst p2 = vec2(-Number.MAX_VALUE)\n\t\tfor (const pt of this.pts) {\n\t\t\tp1.x = Math.min(p1.x, pt.x)\n\t\t\tp2.x = Math.max(p2.x, pt.x)\n\t\t\tp1.y = Math.min(p1.y, pt.y)\n\t\t\tp2.y = Math.max(p2.y, pt.y)\n\t\t}\n\t\treturn Rect.fromPoints(p1, p2)\n\t}\n\tarea(): number {\n\t\tlet total = 0\n\t\tconst l = this.pts.length\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tconst p1 = this.pts[i]\n\t\t\tconst p2 = this.pts[(i + 1) % l]\n\t\t\ttotal += (p1.x * p2.y * 0.5)\n\t\t\ttotal -= (p2.x * p1.y * 0.5)\n\t\t}\n\t\treturn Math.abs(total)\n\t}\n\tclone(): Polygon {\n\t\treturn new Polygon(this.pts.map((pt) => pt.clone()))\n\t}\n}\n\nexport function sat(p1: Polygon, p2: Polygon): Vec2 | null {\n\tlet overlap = Number.MAX_VALUE\n\tlet displacement = vec2(0)\n\tfor (const poly of [p1, p2]) {\n\t\tfor (let i = 0; i < poly.pts.length; i++) {\n\t\t\tconst a = poly.pts[i]\n\t\t\tconst b = poly.pts[(i + 1) % poly.pts.length]\n\t\t\tconst axisProj = b.sub(a).normal().unit()\n\t\t\tlet min1 = Number.MAX_VALUE\n\t\t\tlet max1 = -Number.MAX_VALUE\n\t\t\tfor (let j = 0; j < p1.pts.length; j++) {\n\t\t\t\tconst q = p1.pts[j].dot(axisProj)\n\t\t\t\tmin1 = Math.min(min1, q)\n\t\t\t\tmax1 = Math.max(max1, q)\n\t\t\t}\n\t\t\tlet min2 = Number.MAX_VALUE\n\t\t\tlet max2 = -Number.MAX_VALUE\n\t\t\tfor (let j = 0; j < p2.pts.length; j++) {\n\t\t\t\tconst q = p2.pts[j].dot(axisProj)\n\t\t\t\tmin2 = Math.min(min2, q)\n\t\t\t\tmax2 = Math.max(max2, q)\n\t\t\t}\n\t\t\tconst o = Math.min(max1, max2) - Math.max(min1, min2)\n\t\t\tif (o < 0) {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\tif (o < Math.abs(overlap)) {\n\t\t\t\tconst o1 = max2 - min1\n\t\t\t\tconst o2 = min2 - max1\n\t\t\t\toverlap = Math.abs(o1) < Math.abs(o2) ? o1 : o2\n\t\t\t\tdisplacement = axisProj.scale(overlap)\n\t\t\t}\n\t\t}\n\t}\n\treturn displacement\n}\n", "export class IDList<T> extends Map<number, T> {\n\tprivate lastID: number\n\tconstructor(...args) {\n\t\tsuper(...args)\n\t\tthis.lastID = 0\n\t}\n\tpush(v: T): number {\n\t\tconst id = this.lastID\n\t\tthis.set(id, v)\n\t\tthis.lastID++\n\t\treturn id\n\t}\n\tpushd(v: T): () => void {\n\t\tconst id = this.push(v)\n\t\treturn () => this.delete(id)\n\t}\n}\n\nexport class EventController {\n\tpaused: boolean = false\n\treadonly cancel: () => void\n\tconstructor(cancel: () => void) {\n\t\tthis.cancel = cancel\n\t}\n\tstatic join(events: EventController[]): EventController {\n\t\tconst ev = new EventController(() => events.forEach((e) => e.cancel()))\n\t\tObject.defineProperty(ev, \"paused\", {\n\t\t\tget: () => events[0].paused,\n\t\t\tset: (p: boolean) => events.forEach((e) => e.paused = p),\n\t\t})\n\t\tev.paused = false\n\t\treturn ev\n\t}\n}\n\nexport class Event<Args extends any[] = any[]> {\n\tprivate handlers: IDList<(...args: Args) => void> = new IDList()\n\tadd(action: (...args: Args) => void): EventController {\n\t\tconst cancel = this.handlers.pushd((...args: Args) => {\n\t\t\tif (ev.paused) return\n\t\t\taction(...args)\n\t\t})\n\t\tconst ev = new EventController(cancel)\n\t\treturn ev\n\t}\n\taddOnce(action: (...args) => void): EventController {\n\t\tconst ev = this.add((...args) => {\n\t\t\tev.cancel()\n\t\t\taction(...args)\n\t\t})\n\t\treturn ev\n\t}\n\tnext(): Promise<Args> {\n\t\treturn new Promise((res) => this.addOnce(res))\n\t}\n\ttrigger(...args: Args) {\n\t\tthis.handlers.forEach((action) => action(...args))\n\t}\n\tnumListeners(): number {\n\t\treturn this.handlers.size\n\t}\n}\n\n// TODO: only accept one argument?\nexport class EventHandler<EventMap extends Record<string, any[]>> {\n\tprivate handlers: Partial<{\n\t\t[Name in keyof EventMap]: Event<EventMap[Name]>\n\t}> = {}\n\ton<Name extends keyof EventMap>(\n\t\tname: Name,\n\t\taction: (...args: EventMap[Name]) => void,\n\t): EventController {\n\t\tif (!this.handlers[name]) {\n\t\t\tthis.handlers[name] = new Event<EventMap[Name]>()\n\t\t}\n\t\treturn this.handlers[name].add(action)\n\t}\n\tonOnce<Name extends keyof EventMap>(\n\t\tname: Name,\n\t\taction: (...args: EventMap[Name]) => void,\n\t): EventController {\n\t\tconst ev = this.on(name, (...args) => {\n\t\t\tev.cancel()\n\t\t\taction(...args)\n\t\t})\n\t\treturn ev\n\t}\n\tnext<Name extends keyof EventMap>(name: Name): Promise<unknown> {\n\t\treturn new Promise((res) => {\n\t\t\t// TODO: can only pass 1 val to resolve()\n\t\t\tthis.onOnce(name, (...args: EventMap[Name]) => res(args[0]))\n\t\t})\n\t}\n\ttrigger<Name extends keyof EventMap>(name: Name, ...args: EventMap[Name]) {\n\t\tif (this.handlers[name]) {\n\t\t\tthis.handlers[name].trigger(...args)\n\t\t}\n\t}\n\tremove<Name extends keyof EventMap>(name: Name) {\n\t\tdelete this.handlers[name]\n\t}\n\tclear() {\n\t\tthis.handlers = {}\n\t}\n\tnumListeners<Name extends keyof EventMap>(name: Name): number {\n\t\treturn this.handlers[name]?.numListeners() ?? 0\n\t}\n}\n\nexport function deepEq(o1: any, o2: any): boolean {\n\tconst t1 = typeof o1\n\tconst t2 = typeof o2\n\tif (t1 !== t2) {\n\t\treturn false\n\t}\n\tif (t1 === \"object\" && t2 === \"object\" && o1 !== null && o2 !== null) {\n\t\tconst k1 = Object.keys(o1)\n\t\tconst k2 = Object.keys(o2)\n\t\tif (k1.length !== k2.length) {\n\t\t\treturn false\n\t\t}\n\t\tfor (const k of k1) {\n\t\t\tconst v1 = o1[k]\n\t\t\tconst v2 = o2[k]\n\t\t\tif (!(typeof v1 === \"function\" && typeof v2 === \"function\")) {\n\t\t\t\tif (!deepEq(v1, v2)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\treturn o1 === o2\n}\n\nexport function base64ToArrayBuffer(base64: string): ArrayBuffer {\n\tconst binstr = window.atob(base64)\n\tconst len = binstr.length\n\tconst bytes = new Uint8Array(len)\n\tfor (let i = 0; i < len; i++) {\n\t\tbytes[i] = binstr.charCodeAt(i)\n\t}\n\treturn bytes.buffer\n}\n\nexport function dataURLToArrayBuffer(url: string): ArrayBuffer {\n\treturn base64ToArrayBuffer(url.split(\",\")[1])\n}\n\nexport function download(filename: string, url: string) {\n\tconst a = document.createElement(\"a\")\n\ta.href = url\n\ta.download = filename\n\ta.click()\n}\n\nexport function downloadText(filename: string, text: string) {\n\tdownload(filename, \"data:text/plain;charset=utf-8,\" + text)\n}\n\nexport function downloadJSON(filename: string, data: any) {\n\tdownloadText(filename, JSON.stringify(data))\n}\n\nexport function downloadBlob(filename: string, blob: Blob) {\n\tconst url = URL.createObjectURL(blob)\n\tdownload(filename, url)\n\tURL.revokeObjectURL(url)\n}\n\nexport const isDataURL = (str: string) => str.match(/^data:\\w+\\/\\w+;base64,.+/)\nexport const getExt = (p: string) => p.split(\".\").pop()\n\nexport const uid = (() => {\n\tlet id = 0\n\treturn () => id++\n})()\n\nconst warned = new Set()\n\nexport function warn(msg: string) {\n\tif (!warned.has(msg)) {\n\t\twarned.add(msg)\n\t\tconsole.warn(msg)\n\t}\n}\n\nexport function deprecateMsg(oldName: string, newName: string) {\n\twarn(`${oldName} is deprecated. Use ${newName} instead.`)\n}\n\nexport function deprecate(oldName: string, newName: string, newFunc: (...args) => any) {\n\treturn (...args) => {\n\t\tdeprecateMsg(oldName, newName)\n\t\treturn newFunc(...args)\n\t}\n}\n\nexport function benchmark(task: () => void, times: number = 1) {\n\tconst t1 = performance.now()\n\tfor (let i = 0; i < times; i++) {\n\t\ttask()\n\t}\n\tconst t2 = performance.now()\n\treturn t2 - t1\n}\n\nexport function comparePerf(t1: () => void, t2: () => void, times: number = 1) {\n\treturn benchmark(t2, times) / benchmark(t1, times)\n}\n\nexport class BinaryHeap<T> {\n\t_items: T[]\n\t_compareFn: (a: T, b: T) => boolean\n\n\t/**\n\t * Creates a binary heap with the given compare function\n\t * Not passing a compare function will give a min heap\n\t */\n\tconstructor(compareFn = (a: T, b: T) => a < b) {\n\t\tthis._compareFn = compareFn\n\t\tthis._items = []\n\t}\n\n\t/**\n\t * Insert an item into the binary heap\n\t */\n\tinsert(item: T) {\n\t\tthis._items.push(item)\n\t\tthis.moveUp(this._items.length - 1)\n\t}\n\n\t/**\n\t * Remove the smallest item from the binary heap in case of a min heap\n\t * or the greatest item from the binary heap in case of a max heap\n\t */\n\tremove() {\n\t\tif (this._items.length === 0)\n\t\t\treturn null\n\t\tconst item = this._items[0]\n\t\tconst lastItem = this._items.pop()\n\t\tif (this._items.length !== 0) {\n\t\t\tthis._items[0] = lastItem as T\n\t\t\tthis.moveDown(0)\n\t\t}\n\t\treturn item\n\t}\n\n\t/**\n\t * Remove all items\n\t */\n\tclear() {\n\t\tthis._items.splice(0, this._items.length)\n\t}\n\n\tmoveUp(pos: number) {\n\t\twhile (pos > 0) {\n\t\t\tconst parent = Math.floor((pos - 1) / 2)\n\t\t\tif (!this._compareFn(this._items[pos], this._items[parent]))\n\t\t\t\tif (this._items[pos] >= this._items[parent])\n\t\t\t\t\tbreak\n\t\t\tthis.swap(pos, parent)\n\t\t\tpos = parent\n\t\t}\n\t}\n\n\tmoveDown(pos: number) {\n\t\twhile (pos < Math.floor(this._items.length / 2)) {\n\t\t\tlet child = 2 * pos + 1\n\t\t\tif (child < this._items.length - 1 && !this._compareFn(this._items[child], this._items[child + 1]))\n\t\t\t\t++child\n\t\t\tif (this._compareFn(this._items[pos], this._items[child]))\n\t\t\t\tbreak\n\t\t\tthis.swap(pos, child)\n\t\t\tpos = child\n\t\t}\n\t}\n\n\tswap(index1: number, index2: number) {\n\t\t[this._items[index1], this._items[index2]] = [this._items[index2], this._items[index1]]\n\t}\n\n\t/**\n\t * Returns the amount of items\n\t */\n\tget length() {\n\t\treturn this._items.length\n\t}\n}\n", "{\n\t\"Joy-Con L+R (STANDARD GAMEPAD Vendor: 057e Product: 200e)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\",\n\t\t\t\"17\": \"capture\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t},\n\t\"Joy-Con (L) (STANDARD GAMEPAD Vendor: 057e Product: 2006)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"9\": \"select\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"16\": \"start\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 }\n\t\t}\n\t},\n\t\"Joy-Con (R) (STANDARD GAMEPAD Vendor: 057e Product: 2007)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"16\": \"select\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 }\n\t\t}\n\t},\n\t\"Pro Controller (STANDARD GAMEPAD Vendor: 057e Product: 2009)\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\",\n\t\t\t\"17\": \"capture\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t},\n\t\"default\": {\n\t\t\"buttons\": {\n\t\t\t\"0\": \"south\",\n\t\t\t\"1\": \"east\",\n\t\t\t\"2\": \"west\",\n\t\t\t\"3\": \"north\",\n\t\t\t\"4\": \"lshoulder\",\n\t\t\t\"5\": \"rshoulder\",\n\t\t\t\"6\": \"ltrigger\",\n\t\t\t\"7\": \"rtrigger\",\n\t\t\t\"8\": \"select\",\n\t\t\t\"9\": \"start\",\n\t\t\t\"10\": \"lstick\",\n\t\t\t\"11\": \"rstick\",\n\t\t\t\"12\": \"dpad-up\",\n\t\t\t\"13\": \"dpad-down\",\n\t\t\t\"14\": \"dpad-left\",\n\t\t\t\"15\": \"dpad-right\",\n\t\t\t\"16\": \"home\"\n\t\t},\n\t\t\"sticks\": {\n\t\t\t\"left\": { \"x\": 0, \"y\": 1 },\n\t\t\t\"right\": { \"x\": 2, \"y\": 3 }\n\t\t}\n\t}\n}\n", "// everything related to canvas, game loop and input\n\nimport type {\n\tKaboomCtx,\n\tCursor,\n\tKey,\n\tMouseButton,\n\tGamepadButton,\n\tGamepadStick,\n\tGamepadDef,\n\tKGamePad,\n} from \"./types\"\n\nimport {\n\tVec2,\n} from \"./math\"\n\nimport {\n\tEventHandler,\n\tEventController,\n} from \"./utils\"\n\nimport GAMEPAD_MAP from \"./gamepad.json\"\n\nexport class ButtonState<T = string> {\n\tpressed: Set<T> = new Set([])\n\tpressedRepeat: Set<T> = new Set([])\n\treleased: Set<T> = new Set([])\n\tdown: Set<T> = new Set([])\n\tupdate() {\n\t\tthis.pressed.clear()\n\t\tthis.released.clear()\n\t\tthis.pressedRepeat.clear()\n\t}\n\tpress(btn: T) {\n\t\tthis.pressed.add(btn)\n\t\tthis.pressedRepeat.add(btn)\n\t\tthis.down.add(btn)\n\t}\n\tpressRepeat(btn: T) {\n\t\tthis.pressedRepeat.add(btn)\n\t}\n\trelease(btn: T) {\n\t\tthis.down.delete(btn)\n\t\tthis.pressed.delete(btn)\n\t\tthis.released.add(btn)\n\t}\n}\n\nclass GamepadState {\n\tbuttonState: ButtonState<GamepadButton> = new ButtonState()\n\tstickState: Map<GamepadStick, Vec2> = new Map()\n}\n\nclass FPSCounter {\n\tprivate dts: number[] = []\n\tprivate timer: number = 0\n\tfps: number = 0\n\ttick(dt: number) {\n\t\tthis.dts.push(dt)\n\t\tthis.timer += dt\n\t\tif (this.timer >= 1) {\n\t\t\tthis.timer = 0\n\t\t\tthis.fps = Math.round(1 / (this.dts.reduce((a, b) => a + b) / this.dts.length))\n\t\t\tthis.dts = []\n\t\t}\n\t}\n}\n\nexport default (opt: {\n\tcanvas: HTMLCanvasElement,\n\ttouchToMouse?: boolean,\n\tgamepads?: Record<string, GamepadDef>,\n\tpixelDensity?: number,\n\tmaxFPS?: number,\n}) => {\n\n\tif (!opt.canvas) {\n\t\tthrow new Error(\"Please provide a canvas\")\n\t}\n\n\tconst state = {\n\t\tcanvas: opt.canvas,\n\t\tloopID: null as null | number,\n\t\tstopped: false,\n\t\tdt: 0,\n\t\ttime: 0,\n\t\trealTime: 0,\n\t\tfpsCounter: new FPSCounter(),\n\t\ttimeScale: 1,\n\t\tskipTime: false,\n\t\tnumFrames: 0,\n\t\tpaused: false,\n\t\tmousePos: new Vec2(0),\n\t\tmouseDeltaPos: new Vec2(0),\n\t\tkeyState: new ButtonState<Key>(),\n\t\tmouseState: new ButtonState<MouseButton>(),\n\t\tmergedGamepadState: new GamepadState(),\n\t\tgamepadStates: new Map<number, GamepadState>(),\n\t\tgamepads: [] as KGamePad[],\n\t\tcharInputted: [],\n\t\tisMouseMoved: false,\n\t\tlastWidth: opt.canvas.offsetWidth,\n\t\tlastHeight: opt.canvas.offsetHeight,\n\t\tevents: new EventHandler<{\n\t\t\tmouseMove: [],\n\t\t\tmouseDown: [MouseButton],\n\t\t\tmousePress: [MouseButton],\n\t\t\tmouseRelease: [MouseButton],\n\t\t\tcharInput: [string],\n\t\t\tkeyPress: [Key],\n\t\t\tkeyDown: [Key],\n\t\t\tkeyPressRepeat: [Key],\n\t\t\tkeyRelease: [Key],\n\t\t\ttouchStart: [Vec2, Touch],\n\t\t\ttouchMove: [Vec2, Touch],\n\t\t\ttouchEnd: [Vec2, Touch],\n\t\t\tgamepadButtonDown: [string],\n\t\t\tgamepadButtonPress: [string],\n\t\t\tgamepadButtonRelease: [string],\n\t\t\tgamepadStick: [string, Vec2],\n\t\t\tgamepadConnect: [KGamePad],\n\t\t\tgamepadDisconnect: [KGamePad],\n\t\t\tscroll: [Vec2],\n\t\t\tresize: [],\n\t\t\tinput: [],\n\t\t}>(),\n\t}\n\n\tfunction canvas() {\n\t\treturn state.canvas\n\t}\n\n\tfunction dt() {\n\t\treturn state.dt * state.timeScale\n\t}\n\n\tfunction time() {\n\t\treturn state.time\n\t}\n\n\tfunction fps() {\n\t\treturn state.fpsCounter.fps\n\t}\n\n\tfunction numFrames() {\n\t\treturn state.numFrames\n\t}\n\n\tfunction screenshot(): string {\n\t\treturn state.canvas.toDataURL()\n\t}\n\n\tfunction setCursor(c: Cursor): void {\n\t\tstate.canvas.style.cursor = c\n\t}\n\n\tfunction getCursor(): Cursor {\n\t\treturn state.canvas.style.cursor\n\t}\n\n\tfunction setCursorLocked(b: boolean): void {\n\t\tif (b) {\n\t\t\ttry {\n\t\t\t\tconst res = state.canvas.requestPointerLock() as unknown as Promise<void>\n\t\t\t\tif (res.catch) {\n\t\t\t\t\tres.catch((e) => console.error(e))\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e)\n\t\t\t}\n\t\t} else {\n\t\t\tdocument.exitPointerLock()\n\t\t}\n\t}\n\n\tfunction isCursorLocked(): boolean {\n\t\treturn !!document.pointerLockElement\n\t}\n\n\t// wrappers around full screen functions to work across browsers\n\tfunction enterFullscreen(el: HTMLElement) {\n\t\tif (el.requestFullscreen) el.requestFullscreen()\n\t\t// @ts-ignore\n\t\telse if (el.webkitRequestFullscreen) el.webkitRequestFullscreen()\n\t}\n\n\tfunction exitFullscreen() {\n\t\tif (document.exitFullscreen) document.exitFullscreen()\n\t\t// @ts-ignore\n\t\telse if (document.webkitExitFullScreen) document.webkitExitFullScreen()\n\t}\n\n\tfunction getFullscreenElement(): Element | void {\n\t\treturn document.fullscreenElement\n\t\t\t// @ts-ignore\n\t\t\t|| document.webkitFullscreenElement\n\t}\n\n\tfunction setFullscreen(f: boolean = true) {\n\t\tif (f) {\n\t\t\tenterFullscreen(state.canvas)\n\t\t} else {\n\t\t\texitFullscreen()\n\t\t}\n\t}\n\n\tfunction isFullscreen(): boolean {\n\t\treturn Boolean(getFullscreenElement())\n\t}\n\n\tfunction quit() {\n\t\tstate.stopped = true\n\t\tfor (const name in canvasEvents) {\n\t\t\tstate.canvas.removeEventListener(name, canvasEvents[name])\n\t\t}\n\t\tfor (const name in docEvents) {\n\t\t\tdocument.removeEventListener(name, docEvents[name])\n\t\t}\n\t\tfor (const name in winEvents) {\n\t\t\twindow.removeEventListener(name, winEvents[name])\n\t\t}\n\t\tresizeObserver.disconnect()\n\t}\n\n\tfunction run(action: () => void) {\n\n\t\tif (state.loopID !== null) {\n\t\t\tcancelAnimationFrame(state.loopID)\n\t\t}\n\n\t\tlet accumulatedDt = 0\n\n\t\tconst frame = (t: number) => {\n\n\t\t\tif (state.stopped) return\n\n\t\t\t// TODO: paused should still process input\n\t\t\t// TODO: allow background actions?\n\t\t\tif (state.paused || document.visibilityState !== \"visible\") {\n\t\t\t\tstate.loopID = requestAnimationFrame(frame)\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst loopTime = t / 1000\n\t\t\tconst realDt = loopTime - state.realTime\n\t\t\tconst desiredDt = opt.maxFPS ? 1 / opt.maxFPS : 0\n\n\t\t\tstate.realTime = loopTime\n\t\t\taccumulatedDt += realDt\n\n\t\t\tif (accumulatedDt > desiredDt) {\n\t\t\t\tif (!state.skipTime) {\n\t\t\t\t\tstate.dt = accumulatedDt\n\t\t\t\t\tstate.time += dt()\n\t\t\t\t\tstate.fpsCounter.tick(state.dt)\n\t\t\t\t}\n\t\t\t\taccumulatedDt = 0\n\t\t\t\tstate.skipTime = false\n\t\t\t\tstate.numFrames++\n\t\t\t\tprocessInput()\n\t\t\t\taction()\n\t\t\t\tresetInput()\n\t\t\t}\n\n\t\t\tstate.loopID = requestAnimationFrame(frame)\n\n\t\t}\n\n\t\tframe(0)\n\n\t}\n\n\tfunction isTouchscreen() {\n\t\treturn (\"ontouchstart\" in window) || navigator.maxTouchPoints > 0\n\t}\n\n\tfunction mousePos(): Vec2 {\n\t\treturn state.mousePos.clone()\n\t}\n\n\tfunction mouseDeltaPos(): Vec2 {\n\t\treturn state.mouseDeltaPos.clone()\n\t}\n\n\tfunction isMousePressed(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.pressed.has(m)\n\t}\n\n\tfunction isMouseDown(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.down.has(m)\n\t}\n\n\tfunction isMouseReleased(m: MouseButton = \"left\"): boolean {\n\t\treturn state.mouseState.released.has(m)\n\t}\n\n\tfunction isMouseMoved(): boolean {\n\t\treturn state.isMouseMoved\n\t}\n\n\tfunction isKeyPressed(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.pressed.size > 0\n\t\t\t: state.keyState.pressed.has(k)\n\t}\n\n\tfunction isKeyPressedRepeat(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.pressedRepeat.size > 0\n\t\t\t: state.keyState.pressedRepeat.has(k)\n\t}\n\n\tfunction isKeyDown(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.down.size > 0\n\t\t\t: state.keyState.down.has(k)\n\t}\n\n\tfunction isKeyReleased(k?: Key): boolean {\n\t\treturn k === undefined\n\t\t\t? state.keyState.released.size > 0\n\t\t\t: state.keyState.released.has(k)\n\t}\n\n\tfunction isGamepadButtonPressed(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.pressed.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.pressed.has(btn)\n\t}\n\n\tfunction isGamepadButtonDown(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.down.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.down.has(btn)\n\t}\n\n\tfunction isGamepadButtonReleased(btn?: GamepadButton): boolean {\n\t\treturn btn === undefined\n\t\t\t? state.mergedGamepadState.buttonState.released.size > 0\n\t\t\t: state.mergedGamepadState.buttonState.released.has(btn)\n\t}\n\n\tfunction onResize(action: () => void): EventController {\n\t\treturn state.events.on(\"resize\", action)\n\t}\n\n\t// input callbacks\n\tconst onKeyDown = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyDown\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyDown\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyDown\"]\n\n\tconst onKeyPress = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyPress\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyPress\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyPress\"]\n\n\tconst onKeyPressRepeat = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyPressRepeat\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyPressRepeat\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyPressRepeat\"]\n\n\tconst onKeyRelease = ((key, action) => {\n\t\tif (typeof key === \"function\") {\n\t\t\treturn state.events.on(\"keyRelease\", key)\n\t\t} else if (typeof key === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"keyRelease\", (k) => k === key && action(key))\n\t\t}\n\t}) as KaboomCtx[\"onKeyRelease\"]\n\n\tfunction onMouseDown(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mouseDown\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mouseDown\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMousePress(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mousePress\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mousePress\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMouseRelease(\n\t\tmouse: MouseButton | ((m: MouseButton) => void),\n\t\taction?: (m: MouseButton) => void,\n\t): EventController {\n\t\tif (typeof mouse === \"function\") {\n\t\t\treturn state.events.on(\"mouseRelease\", (m) => mouse(m))\n\t\t} else {\n\t\t\treturn state.events.on(\"mouseRelease\", (m) => m === mouse && action(m))\n\t\t}\n\t}\n\n\tfunction onMouseMove(f: (pos: Vec2, dpos: Vec2) => void): EventController {\n\t\treturn state.events.on(\"mouseMove\", () => f(mousePos(), mouseDeltaPos()))\n\t}\n\n\tfunction onCharInput(action: (ch: string) => void): EventController {\n\t\treturn state.events.on(\"charInput\", action)\n\t}\n\n\tfunction onTouchStart(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchStart\", f)\n\t}\n\n\tfunction onTouchMove(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchMove\", f)\n\t}\n\n\tfunction onTouchEnd(f: (pos: Vec2, t: Touch) => void): EventController {\n\t\treturn state.events.on(\"touchEnd\", f)\n\t}\n\n\tfunction onScroll(action: (delta: Vec2) => void): EventController {\n\t\treturn state.events.on(\"scroll\", action)\n\t}\n\n\tfunction onGamepadButtonDown(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonDown\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonDown\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadButtonPress(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonPress\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonPress\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadButtonRelease(btn: GamepadButton | ((btn: GamepadButton) => void), action?: (btn: GamepadButton) => void): EventController {\n\t\tif (typeof btn === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonRelease\", btn)\n\t\t} else if (typeof btn === \"string\" && typeof action === \"function\") {\n\t\t\treturn state.events.on(\"gamepadButtonRelease\", (b) => b === btn && action(btn))\n\t\t}\n\t}\n\n\tfunction onGamepadStick(stick: GamepadStick, action: (value: Vec2) => void): EventController {\n\t\treturn state.events.on(\"gamepadStick\", ((a: string, v: Vec2) => a === stick && action(v)))\n\t}\n\n\tfunction onGamepadConnect(action: (gamepad: KGamePad) => void) {\n\t\tstate.events.on(\"gamepadConnect\", action)\n\t}\n\n\tfunction onGamepadDisconnect(action: (gamepad: KGamePad) => void) {\n\t\tstate.events.on(\"gamepadDisconnect\", action)\n\t}\n\n\tfunction getGamepadStick(stick: GamepadStick): Vec2 {\n\t\treturn state.mergedGamepadState.stickState.get(stick) || new Vec2(0)\n\t}\n\n\tfunction charInputted(): string[] {\n\t\treturn [...state.charInputted]\n\t}\n\n\tfunction getGamepads(): KGamePad[] {\n\t\treturn [...state.gamepads]\n\t}\n\n\tfunction processInput() {\n\t\tstate.events.trigger(\"input\")\n\t\tstate.keyState.down.forEach((k) => state.events.trigger(\"keyDown\", k))\n\t\tstate.mouseState.down.forEach((k) => state.events.trigger(\"mouseDown\", k))\n\t\tprocessGamepad()\n\t}\n\n\tfunction resetInput() {\n\t\tstate.keyState.update()\n\t\tstate.mouseState.update()\n\t\tstate.mergedGamepadState.buttonState.update()\n\t\tstate.mergedGamepadState.stickState.forEach((v, k) => {\n\t\t\tstate.mergedGamepadState.stickState.set(k, new Vec2(0))\n\t\t})\n\t\tstate.charInputted = []\n\t\tstate.isMouseMoved = false\n\n\t\tstate.gamepadStates.forEach((s) => {\n\t\t\ts.buttonState.update()\n\t\t\ts.stickState.forEach((v, k) => {\n\t\t\t\ts.stickState.set(k, new Vec2(0))\n\t\t\t})\n\t\t})\n\t}\n\n\tfunction registerGamepad(browserGamepad: Gamepad) {\n\n\t\tconst gamepad = {\n\t\t\tindex: browserGamepad.index,\n\t\t\tisPressed: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.pressed.has(btn)\n\t\t\t},\n\t\t\tisDown: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.down.has(btn)\n\t\t\t},\n\t\t\tisReleased: (btn: GamepadButton) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).buttonState.released.has(btn)\n\t\t\t},\n\t\t\tgetStick: (stick: GamepadStick) => {\n\t\t\t\treturn state.gamepadStates.get(browserGamepad.index).stickState.get(stick)\n\t\t\t},\n\t\t}\n\n\t\tstate.gamepads.push(gamepad)\n\n\t\tstate.gamepadStates.set(browserGamepad.index, {\n\t\t\tbuttonState: new ButtonState(),\n\t\t\tstickState: new Map([\n\t\t\t\t[\"left\", new Vec2(0)],\n\t\t\t\t[\"right\", new Vec2(0)],\n\t\t\t]),\n\t\t})\n\n\t\treturn gamepad\n\n\t}\n\n\tfunction removeGamepad(gamepad: Gamepad) {\n\t\tstate.gamepads = state.gamepads.filter((g) => g.index !== gamepad.index)\n\t\tstate.gamepadStates.delete(gamepad.index)\n\t}\n\n\tfunction processGamepad() {\n\n\t\tfor (const browserGamepad of navigator.getGamepads()) {\n\t\t\tif (browserGamepad && !state.gamepadStates.has(browserGamepad.index)) {\n\t\t\t\tregisterGamepad(browserGamepad)\n\t\t\t}\n\t\t}\n\n\t\tfor (const gamepad of state.gamepads) {\n\n\t\t\tconst browserGamepad = navigator.getGamepads()[gamepad.index]\n\t\t\tconst customMap = opt.gamepads ?? {}\n\t\t\tconst map = customMap[browserGamepad.id] ?? GAMEPAD_MAP[browserGamepad.id] ?? GAMEPAD_MAP[\"default\"]\n\t\t\tconst gamepadState = state.gamepadStates.get(gamepad.index)\n\n\t\t\tfor (let i = 0; i < browserGamepad.buttons.length; i++) {\n\t\t\t\tif (browserGamepad.buttons[i].pressed) {\n\t\t\t\t\tif (!gamepadState.buttonState.down.has(map.buttons[i])) {\n\t\t\t\t\t\tstate.mergedGamepadState.buttonState.press(map.buttons[i])\n\t\t\t\t\t\tgamepadState.buttonState.press(map.buttons[i])\n\t\t\t\t\t\tstate.events.trigger(\"gamepadButtonPress\", map.buttons[i])\n\t\t\t\t\t}\n\t\t\t\t\tstate.events.trigger(\"gamepadButtonDown\", map.buttons[i])\n\t\t\t\t} else {\n\t\t\t\t\tif (gamepadState.buttonState.down.has(map.buttons[i])) {\n\t\t\t\t\t\tstate.mergedGamepadState.buttonState.release(map.buttons[i])\n\t\t\t\t\t\tgamepadState.buttonState.release(map.buttons[i])\n\t\t\t\t\t\tstate.events.trigger(\"gamepadButtonRelease\", map.buttons[i])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const stickName in map.sticks) {\n\t\t\t\tconst stick = map.sticks[stickName]\n\t\t\t\tconst value = new Vec2(\n\t\t\t\t\tbrowserGamepad.axes[stick.x],\n\t\t\t\t\tbrowserGamepad.axes[stick.y],\n\t\t\t\t)\n\t\t\t\tgamepadState.stickState.set(stickName as GamepadStick, value)\n\t\t\t\tstate.mergedGamepadState.stickState.set(stickName as GamepadStick, value)\n\t\t\t\tstate.events.trigger(\"gamepadStick\", stickName, value)\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttype EventList<M> = {\n\t\t[event in keyof M]?: (event: M[event]) => void\n\t}\n\n\tconst canvasEvents: EventList<HTMLElementEventMap> = {}\n\tconst docEvents: EventList<DocumentEventMap> = {}\n\tconst winEvents: EventList<WindowEventMap> = {}\n\n\tcanvasEvents.mousemove = (e) => {\n\t\tconst mousePos = new Vec2(e.offsetX, e.offsetY)\n\t\tconst mouseDeltaPos = new Vec2(e.movementX, e.movementY)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.isMouseMoved = true\n\t\t\tstate.mousePos = mousePos\n\t\t\tstate.mouseDeltaPos = mouseDeltaPos\n\t\t\tstate.events.trigger(\"mouseMove\")\n\t\t})\n\t}\n\n\tconst MOUSE_BUTTONS: MouseButton[] = [\n\t\t\"left\",\n\t\t\"middle\",\n\t\t\"right\",\n\t\t\"back\",\n\t\t\"forward\",\n\t]\n\n\tcanvasEvents.mousedown = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst m = MOUSE_BUTTONS[e.button]\n\t\t\tif (!m) return\n\t\t\tstate.mouseState.press(m)\n\t\t\tstate.events.trigger(\"mousePress\", m)\n\t\t})\n\t}\n\n\tcanvasEvents.mouseup = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst m = MOUSE_BUTTONS[e.button]\n\t\t\tif (!m) return\n\t\t\tstate.mouseState.release(m)\n\t\t\tstate.events.trigger(\"mouseRelease\", m)\n\t\t})\n\t}\n\n\tconst PREVENT_DEFAULT_KEYS = new Set([\n\t\t\" \",\n\t\t\"ArrowLeft\",\n\t\t\"ArrowRight\",\n\t\t\"ArrowUp\",\n\t\t\"ArrowDown\",\n\t\t\"Tab\",\n\t])\n\n\t// translate these key names to a simpler version\n\tconst KEY_ALIAS = {\n\t\t\"ArrowLeft\": \"left\",\n\t\t\"ArrowRight\": \"right\",\n\t\t\"ArrowUp\": \"up\",\n\t\t\"ArrowDown\": \"down\",\n\t\t\" \": \"space\",\n\t}\n\n\tcanvasEvents.keydown = (e) => {\n\t\tif (PREVENT_DEFAULT_KEYS.has(e.key)) {\n\t\t\te.preventDefault()\n\t\t}\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase()\n\t\t\tif (k.length === 1) {\n\t\t\t\tstate.events.trigger(\"charInput\", k)\n\t\t\t\tstate.charInputted.push(k)\n\t\t\t} else if (k === \"space\") {\n\t\t\t\tstate.events.trigger(\"charInput\", \" \")\n\t\t\t\tstate.charInputted.push(\" \")\n\t\t\t}\n\t\t\tif (e.repeat) {\n\t\t\t\tstate.keyState.pressRepeat(k)\n\t\t\t\tstate.events.trigger(\"keyPressRepeat\", k)\n\t\t\t} else {\n\t\t\t\tstate.keyState.press(k)\n\t\t\t\tstate.events.trigger(\"keyPressRepeat\", k)\n\t\t\t\tstate.events.trigger(\"keyPress\", k)\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.keyup = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst k = KEY_ALIAS[e.key] || e.key.toLowerCase()\n\t\t\tstate.keyState.release(k)\n\t\t\tstate.events.trigger(\"keyRelease\", k)\n\t\t})\n\t}\n\n\tcanvasEvents.touchstart = (e) => {\n\t\t// disable long tap context menu\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\n\t\t\t\t\t\"touchStart\",\n\t\t\t\t\tnew Vec2(t.clientX, t.clientY),\n\t\t\t\t\tt,\n\t\t\t\t)\n\t\t\t})\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(touches[0].clientX, touches[0].clientY)\n\t\t\t\tstate.mouseState.press(\"left\")\n\t\t\t\tstate.events.trigger(\"mousePress\", \"left\")\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.touchmove = (e) => {\n\t\t// disable scrolling\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\"touchMove\", new Vec2(t.clientX, t.clientY), t)\n\t\t\t})\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(touches[0].clientX, touches[0].clientY)\n\t\t\t\tstate.events.trigger(\"mouseMove\")\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.touchend = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\"touchEnd\", new Vec2(t.clientX, t.clientY), t)\n\t\t\t})\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(touches[0].clientX, touches[0].clientY)\n\t\t\t\tstate.mouseState.release(\"left\")\n\t\t\t\tstate.events.trigger(\"mouseRelease\", \"left\")\n\t\t\t}\n\t\t})\n\t}\n\n\tcanvasEvents.touchcancel = (e) => {\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tconst touches = [...e.changedTouches]\n\t\t\ttouches.forEach((t) => {\n\t\t\t\tstate.events.trigger(\"touchEnd\", new Vec2(t.clientX, t.clientY), t)\n\t\t\t})\n\t\t\tif (opt.touchToMouse !== false) {\n\t\t\t\tstate.mousePos = new Vec2(touches[0].clientX, touches[0].clientY)\n\t\t\t\tstate.mouseState.release(\"left\")\n\t\t\t\tstate.events.trigger(\"mouseRelease\", \"left\")\n\t\t\t}\n\t\t})\n\t}\n\n\t// TODO: option to not prevent default?\n\tcanvasEvents.wheel = (e) => {\n\t\te.preventDefault()\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"scroll\", new Vec2(e.deltaX, e.deltaY))\n\t\t})\n\t}\n\n\tcanvasEvents.contextmenu = (e) => e.preventDefault()\n\n\tdocEvents.visibilitychange = () => {\n\t\tif (document.visibilityState === \"visible\") {\n\t\t\t// prevent a surge of dt when switch back after the tab being hidden for a while\n\t\t\tstate.skipTime = true\n\t\t}\n\t}\n\n\twinEvents.gamepadconnected = (e) => {\n\t\tconst kbGamepad = registerGamepad(e.gamepad)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"gamepadConnect\", kbGamepad)\n\t\t})\n\t}\n\n\twinEvents.gamepaddisconnected = (e) => {\n\t\tconst kbGamepad = getGamepads().filter((g) => g.index === e.gamepad.index)[0]\n\t\tremoveGamepad(e.gamepad)\n\t\tstate.events.onOnce(\"input\", () => {\n\t\t\tstate.events.trigger(\"gamepadDisconnect\", kbGamepad)\n\t\t})\n\t}\n\n\tfor (const name in canvasEvents) {\n\t\tstate.canvas.addEventListener(name, canvasEvents[name])\n\t}\n\n\tfor (const name in docEvents) {\n\t\tdocument.addEventListener(name, docEvents[name])\n\t}\n\n\tfor (const name in winEvents) {\n\t\twindow.addEventListener(name, winEvents[name])\n\t}\n\n\tconst resizeObserver = new ResizeObserver((entries) => {\n\t\tfor (const entry of entries) {\n\t\t\tif (entry.target !== state.canvas) continue\n\t\t\tif (\n\t\t\t\tstate.lastWidth === state.canvas.offsetWidth\n\t\t\t\t&& state.lastHeight === state.canvas.offsetHeight\n\t\t\t) return\n\t\t\tstate.lastWidth = state.canvas.offsetWidth\n\t\t\tstate.lastHeight = state.canvas.offsetHeight\n\t\t\tstate.events.onOnce(\"input\", () => {\n\t\t\t\tstate.events.trigger(\"resize\")\n\t\t\t})\n\t\t}\n\t})\n\n\tresizeObserver.observe(state.canvas)\n\n\treturn {\n\t\tdt,\n\t\ttime,\n\t\trun,\n\t\tcanvas,\n\t\tfps,\n\t\tnumFrames,\n\t\tquit,\n\t\tsetFullscreen,\n\t\tisFullscreen,\n\t\tsetCursor,\n\t\tscreenshot,\n\t\tgetGamepads,\n\t\tgetCursor,\n\t\tsetCursorLocked,\n\t\tisCursorLocked,\n\t\tisTouchscreen,\n\t\tmousePos,\n\t\tmouseDeltaPos,\n\t\tisKeyDown,\n\t\tisKeyPressed,\n\t\tisKeyPressedRepeat,\n\t\tisKeyReleased,\n\t\tisMouseDown,\n\t\tisMousePressed,\n\t\tisMouseReleased,\n\t\tisMouseMoved,\n\t\tisGamepadButtonPressed,\n\t\tisGamepadButtonDown,\n\t\tisGamepadButtonReleased,\n\t\tgetGamepadStick,\n\t\tcharInputted,\n\t\tonResize,\n\t\tonKeyDown,\n\t\tonKeyPress,\n\t\tonKeyPressRepeat,\n\t\tonKeyRelease,\n\t\tonMouseDown,\n\t\tonMousePress,\n\t\tonMouseRelease,\n\t\tonMouseMove,\n\t\tonCharInput,\n\t\tonTouchStart,\n\t\tonTouchMove,\n\t\tonTouchEnd,\n\t\tonScroll,\n\t\tonGamepadButtonDown,\n\t\tonGamepadButtonPress,\n\t\tonGamepadButtonRelease,\n\t\tonGamepadStick,\n\t\tonGamepadConnect,\n\t\tonGamepadDisconnect,\n\t\tevents: state.events,\n\t\tget paused() {\n\t\t\treturn state.paused\n\t\t},\n\t\tset paused(p: boolean) {\n\t\t\tstate.paused = p\n\t\t},\n\t}\n\n}\n", "// https://easings.net/\nconst c1 = 1.70158\nconst c2 = c1 * 1.525\nconst c3 = c1 + 1\nconst c4 = (2 * Math.PI) / 3\nconst c5 = (2 * Math.PI) / 4.5\n\nconst easings = {\n\tlinear: (x) => x,\n\teaseInSine: (x) => 1 - Math.cos((x * Math.PI) / 2),\n\teaseOutSine: (x) => Math.sin((x * Math.PI) / 2),\n\teaseInOutSine: (x) => -(Math.cos(Math.PI * x) - 1) / 2,\n\teaseInQuad: (x) => x * x,\n\teaseOutQuad: (x) => 1 - (1 - x) * (1 - x),\n\teaseInOutQuad: (x) => x < 0.5 ? 2 * x * x : 1 - Math.pow(-2 * x + 2, 2) / 2,\n\teaseInCubic: (x) => x * x * x,\n\teaseOutCubic: (x) => 1 - Math.pow(1 - x, 3),\n\teaseInOutCubic: (x) => x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2,\n\teaseInQuart: (x) => x * x * x * x,\n\teaseOutQuart: (x) => 1 - Math.pow(1 - x, 4),\n\teaseInOutQuart: (x) => x < 0.5 ? 8 * x * x * x * x : 1 - Math.pow(-2 * x + 2, 4) / 2,\n\teaseInQuint: (x) => x * x * x * x * x,\n\teaseOutQuint: (x) => 1 - Math.pow(1 - x, 5),\n\teaseInOutQuint: (x) => x < 0.5 ? 16 * x * x * x * x * x : 1 - Math.pow(-2 * x + 2, 5) / 2,\n\teaseInExpo: (x) => x === 0 ? 0 : Math.pow(2, 10 * x - 10),\n\teaseOutExpo: (x) => x === 1 ? 1 : 1 - Math.pow(2, -10 * x),\n\teaseInOutExpo: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: x < 0.5\n\t\t\t\t\t? Math.pow(2, 20 * x - 10) / 2\n\t\t\t\t\t: (2 - Math.pow(2, -20 * x + 10)) / 2\n\t},\n\teaseInCirc: (x) => 1 - Math.sqrt(1 - Math.pow(x, 2)),\n\teaseOutCirc: (x) => Math.sqrt(1 - Math.pow(x - 1, 2)),\n\teaseInOutCirc: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (1 - Math.sqrt(1 - Math.pow(2 * x, 2))) / 2\n\t\t\t: (Math.sqrt(1 - Math.pow(-2 * x + 2, 2)) + 1) / 2\n\t},\n\teaseInBack: (x) => c3 * x * x * x - c1 * x * x,\n\teaseOutBack: (x) => 1 + c3 * Math.pow(x - 1, 3) + c1 * Math.pow(x - 1, 2),\n\teaseInOutBack: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (Math.pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n\t\t\t: (Math.pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2\n\t},\n\teaseInElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: -Math.pow(2, 10 * x - 10) * Math.sin((x * 10 - 10.75) * c4)\n\t},\n\teaseOutElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: Math.pow(2, -10 * x) * Math.sin((x * 10 - 0.75) * c4) + 1\n\t},\n\teaseInOutElastic: (x) => {\n\t\treturn x === 0\n\t\t\t? 0\n\t\t\t: x === 1\n\t\t\t\t? 1\n\t\t\t\t: x < 0.5\n\t\t\t\t\t? -(Math.pow(2, 20 * x - 10) * Math.sin((20 * x - 11.125) * c5)) / 2\n\t\t\t\t\t: (Math.pow(2, -20 * x + 10) * Math.sin((20 * x - 11.125) * c5)) / 2 + 1\n\t},\n\teaseInBounce: (x) => 1 - easings.easeOutBounce(1 - x),\n\teaseOutBounce: (x) => {\n\t\tconst n1 = 7.5625\n\t\tconst d1 = 2.75\n\t\tif (x < 1 / d1) {\n\t\t\treturn n1 * x * x\n\t\t} else if (x < 2 / d1) {\n\t\t\treturn n1 * (x -= 1.5 / d1) * x + 0.75\n\t\t} else if (x < 2.5 / d1) {\n\t\t\treturn n1 * (x -= 2.25 / d1) * x + 0.9375\n\t\t} else {\n\t\t\treturn n1 * (x -= 2.625 / d1) * x + 0.984375\n\t\t}\n\t},\n\teaseInOutBounce: (x) => {\n\t\treturn x < 0.5\n\t\t\t? (1 - easings.easeOutBounce(1 - 2 * x)) / 2\n\t\t\t: (1 + easings.easeOutBounce(2 * x - 1)) / 2\n\t},\n}\n\nexport default easings\n", "export default class Timer {\n\n\ttime: number\n\taction: () => void\n\tfinished: boolean = false\n\tpaused: boolean = false\n\n\tconstructor(time: number, action: () => void) {\n\t\tthis.time = time\n\t\tthis.action = action\n\t}\n\n\ttick(dt: number): boolean {\n\t\tif (this.finished || this.paused) return false\n\t\tthis.time -= dt\n\t\tif (this.time <= 0) {\n\t\t\tthis.action()\n\t\t\tthis.finished = true\n\t\t\tthis.time = 0\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\treset(time) {\n\t\tthis.time = time\n\t\tthis.finished = false\n\t}\n\n}\n", "const VERSION = \"3000.0.12\"\n\nimport initApp from \"./app\"\n\nimport {\n\tsat,\n\tvec2,\n\tRect,\n\tPolygon,\n\tLine,\n\tCircle,\n\tColor,\n\tVec2,\n\tMat4,\n\tQuad,\n\tRNG,\n\tquad,\n\trgb,\n\thsl2rgb,\n\trand,\n\trandi,\n\trandSeed,\n\tchance,\n\tchoose,\n\tclamp,\n\tlerp,\n\tmap,\n\tmapc,\n\twave,\n\ttestLinePoint,\n\ttestLineLine,\n\ttestLineCircle,\n\ttestRectRect,\n\ttestRectLine,\n\ttestRectPoint,\n\ttestPolygonPoint,\n\ttestCirclePolygon,\n\tdeg2rad,\n\trad2deg,\n} from \"./math\"\n\nimport easings from \"./easings\"\n\nimport {\n\tIDList,\n\tEvent,\n\tEventHandler,\n\tdownload,\n\tdownloadText,\n\tdownloadJSON,\n\tdownloadBlob,\n\tuid,\n\tisDataURL,\n\tgetExt,\n\tdeepEq,\n\tdataURLToArrayBuffer,\n\tEventController,\n\t// eslint-disable-next-line\n\twarn,\n\t// eslint-disable-next-line\n\tbenchmark,\n\t// eslint-disable-next-line\n\tcomparePerf,\n\tBinaryHeap,\n} from \"./utils\"\n\nimport type {\n\tGfxShader,\n\tGfxFont,\n\tRenderProps,\n\tCharTransform,\n\tTextureOpt,\n\tFormattedText,\n\tFormattedChar,\n\tDrawRectOpt,\n\tDrawLineOpt,\n\tDrawLinesOpt,\n\tDrawTriangleOpt,\n\tDrawPolygonOpt,\n\tDrawCircleOpt,\n\tDrawEllipseOpt,\n\tDrawUVQuadOpt,\n\tVertex,\n\tBitmapFontData,\n\tShaderData,\n\tLoadSpriteSrc,\n\tLoadSpriteOpt,\n\tLoadSoundOpt,\n\tSpriteAtlasData,\n\tLoadBitmapFontOpt,\n\tKaboomCtx,\n\tKaboomOpt,\n\tAudioPlay,\n\tAudioPlayOpt,\n\tDrawSpriteOpt,\n\tDrawTextOpt,\n\tTextAlign,\n\tGameObj,\n\tSceneName,\n\tSceneDef,\n\tCompList,\n\tComp,\n\tTag,\n\tKey,\n\tMouseButton,\n\tPosComp,\n\tScaleComp,\n\tRotateComp,\n\tColorComp,\n\tOpacityComp,\n\tAnchor,\n\tAnchorComp,\n\tZComp,\n\tFollowComp,\n\tMoveComp,\n\tOffScreenCompOpt,\n\tOffScreenComp,\n\tAreaCompOpt,\n\tAreaComp,\n\tSpriteComp,\n\tSpriteCompOpt,\n\tSpriteAnimPlayOpt,\n\tSpriteAnims,\n\tTextComp,\n\tTextCompOpt,\n\tRectComp,\n\tRectCompOpt,\n\tUVQuadComp,\n\tCircleComp,\n\tOutlineComp,\n\tTimerComp,\n\tBodyComp,\n\tBodyCompOpt,\n\tUniform,\n\tShaderComp,\n\tFixedComp,\n\tStayComp,\n\tHealthComp,\n\tLifespanComp,\n\tLifespanCompOpt,\n\tStateComp,\n\tDebug,\n\tKaboomPlugin,\n\tMergeObj,\n\tLevelComp,\n\tEdge,\n\tTileComp,\n\tTileCompOpt,\n\tLevelOpt,\n\tRecording,\n\tBoomOpt,\n\tPeditFile,\n\tShape,\n\tDoubleJumpComp,\n\tTimerController,\n\tTweenController,\n\tLoadFontOpt,\n\tAgentComp,\n\tAgentCompOpt,\n\tPathFindOpt,\n\tGetOpt,\n\tVec2Args,\n\tNineSlice,\n\tLerpValue,\n\tTexFilter,\n} from \"./types\"\n\nimport Timer from \"./timer\"\n\n// @ts-ignore\nimport beanSpriteSrc from \"./assets/bean.png\"\n// @ts-ignore\nimport burpSoundSrc from \"./assets/burp.mp3\"\n// @ts-ignore\nimport kaSpriteSrc from \"./assets/ka.png\"\n// @ts-ignore\nimport boomSpriteSrc from \"./assets/boom.png\"\n\ntype EventList<M> = {\n\t[event in keyof M]?: (event: M[event]) => void\n}\n\ninterface SpriteCurAnim {\n\tname: string,\n\ttimer: number,\n\tloop: boolean,\n\tspeed: number,\n\tpingpong: boolean,\n\tonEnd: () => void,\n}\n\n// some default charsets for loading bitmap fonts\nconst ASCII_CHARS = \" !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\"\n\nconst DEF_ANCHOR = \"topleft\"\nconst BG_GRID_SIZE = 64\n\nconst DEF_FONT = \"monospace\"\nconst DBG_FONT = \"monospace\"\nconst DEF_TEXT_SIZE = 36\nconst DEF_TEXT_CACHE_SIZE = 64\nconst MAX_TEXT_CACHE_SIZE = 256\nconst FONT_ATLAS_WIDTH = 2048\nconst FONT_ATLAS_HEIGHT = 2048\nconst SPRITE_ATLAS_WIDTH = 2048\nconst SPRITE_ATLAS_HEIGHT = 2048\n// 0.1 pixel padding to texture coordinates to prevent artifact\nconst UV_PAD = 0.1\nconst DEF_HASH_GRID_SIZE = 64\nconst DEF_FONT_FILTER = \"nearest\"\n\nconst LOG_MAX = 1\n\nconst VERTEX_FORMAT = [\n\t{ name: \"a_pos\", size: 2 },\n\t{ name: \"a_uv\", size: 2 },\n\t{ name: \"a_color\", size: 4 },\n]\n\nconst STRIDE = VERTEX_FORMAT.reduce((sum, f) => sum + f.size, 0)\n\nconst MAX_BATCHED_QUAD = 2048\nconst MAX_BATCHED_VERTS = MAX_BATCHED_QUAD * 4 * STRIDE\nconst MAX_BATCHED_INDICES = MAX_BATCHED_QUAD * 6\n\n// vertex shader template, replace {{user}} with user vertex shader code\nconst VERT_TEMPLATE = `\nattribute vec2 a_pos;\nattribute vec2 a_uv;\nattribute vec4 a_color;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nvec4 def_vert() {\n\treturn vec4(a_pos, 0.0, 1.0);\n}\n\n{{user}}\n\nvoid main() {\n\tvec4 pos = vert(a_pos, a_uv, a_color);\n\tv_pos = a_pos;\n\tv_uv = a_uv;\n\tv_color = a_color;\n\tgl_Position = pos;\n}\n`\n\n// fragment shader template, replace {{user}} with user fragment shader code\nconst FRAG_TEMPLATE = `\nprecision mediump float;\n\nvarying vec2 v_pos;\nvarying vec2 v_uv;\nvarying vec4 v_color;\n\nuniform sampler2D u_tex;\n\nvec4 def_frag() {\n\treturn v_color * texture2D(u_tex, v_uv);\n}\n\n{{user}}\n\nvoid main() {\n\tgl_FragColor = frag(v_pos, v_uv, v_color, u_tex);\n\tif (gl_FragColor.a == 0.0) {\n\t\tdiscard;\n\t}\n}\n`\n\n// default {{user}} vertex shader code\nconst DEF_VERT = `\nvec4 vert(vec2 pos, vec2 uv, vec4 color) {\n\treturn def_vert();\n}\n`\n\n// default {{user}} fragment shader code\nconst DEF_FRAG = `\nvec4 frag(vec2 pos, vec2 uv, vec4 color, sampler2D tex) {\n\treturn def_frag();\n}\n`\n\nconst COMP_DESC = new Set([\n\t\"id\",\n\t\"require\",\n])\n\nconst COMP_EVENTS = new Set([\n\t\"add\",\n\t\"update\",\n\t\"draw\",\n\t\"destroy\",\n\t\"inspect\",\n\t\"drawInspect\",\n])\n\n// convert anchor string to a vec2 offset\nfunction anchorPt(orig: Anchor | Vec2): Vec2 {\n\tswitch (orig) {\n\t\tcase \"topleft\": return new Vec2(-1, -1)\n\t\tcase \"top\": return new Vec2(0, -1)\n\t\tcase \"topright\": return new Vec2(1, -1)\n\t\tcase \"left\": return new Vec2(-1, 0)\n\t\tcase \"center\": return new Vec2(0, 0)\n\t\tcase \"right\": return new Vec2(1, 0)\n\t\tcase \"botleft\": return new Vec2(-1, 1)\n\t\tcase \"bot\": return new Vec2(0, 1)\n\t\tcase \"botright\": return new Vec2(1, 1)\n\t\tdefault: return orig\n\t}\n}\n\nfunction alignPt(align: TextAlign): number {\n\tswitch (align) {\n\t\tcase \"left\": return 0\n\t\tcase \"center\": return 0.5\n\t\tcase \"right\": return 1\n\t\tdefault: return 0\n\t}\n}\n\nfunction createEmptyAudioBuffer(ctx: AudioContext) {\n\treturn ctx.createBuffer(1, 1, 44100)\n}\n\n// only exports one kaboom() which contains all the state\nexport default (gopt: KaboomOpt = {}): KaboomCtx => {\n\n\tconst root = gopt.root ?? document.body\n\n\t// if root is not defined (which falls back to <body>) we assume user is using kaboom on a clean page, and modify <body> to better fit a full screen canvas\n\tif (root === document.body) {\n\t\tdocument.body.style[\"width\"] = \"100%\"\n\t\tdocument.body.style[\"height\"] = \"100%\"\n\t\tdocument.body.style[\"margin\"] = \"0px\"\n\t\tdocument.documentElement.style[\"width\"] = \"100%\"\n\t\tdocument.documentElement.style[\"height\"] = \"100%\"\n\t}\n\n\t// create a <canvas> if user didn't provide one\n\tconst canvas = gopt.canvas ?? (() => {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\troot.appendChild(canvas)\n\t\treturn canvas\n\t})()\n\n\t// global pixel scale\n\tconst gscale = gopt.scale ?? 1\n\tconst fixedSize = gopt.width && gopt.height && !gopt.stretch && !gopt.letterbox\n\n\t// adjust canvas size according to user size / viewport settings\n\tif (fixedSize) {\n\t\tcanvas.width = gopt.width * gscale\n\t\tcanvas.height = gopt.height * gscale\n\t} else {\n\t\tcanvas.width = canvas.parentElement.offsetWidth\n\t\tcanvas.height = canvas.parentElement.offsetHeight\n\t}\n\n\tconst cw = canvas.width\n\tconst ch = canvas.height\n\tconst pixelDensity = gopt.pixelDensity || window.devicePixelRatio\n\n\tcanvas.width *= pixelDensity\n\tcanvas.height *= pixelDensity\n\n\t// canvas css styles\n\tconst styles = [\n\t\t\"outline: none\",\n\t\t\"cursor: default\",\n\t]\n\n\tif (fixedSize) {\n\t\tstyles.push(`width: ${cw}px`)\n\t\tstyles.push(`height: ${ch}px`)\n\t} else {\n\t\tstyles.push(\"width: 100%\")\n\t\tstyles.push(\"height: 100%\")\n\t}\n\n\tif (gopt.crisp) {\n\t\t// chrome only supports pixelated and firefox only supports crisp-edges\n\t\tstyles.push(\"image-rendering: pixelated\")\n\t\tstyles.push(\"image-rendering: crisp-edges\")\n\t}\n\n\tcanvas.style.cssText = styles.join(\";\")\n\t// make canvas focusable\n\tcanvas.tabIndex = 0\n\n\tconst fontCacheCanvas = document.createElement(\"canvas\")\n\tfontCacheCanvas.width = MAX_TEXT_CACHE_SIZE\n\tfontCacheCanvas.height = MAX_TEXT_CACHE_SIZE\n\tconst fontCacheCtx = fontCacheCanvas.getContext(\"2d\", {\n\t\twillReadFrequently: true,\n\t})\n\n\tconst app = initApp({\n\t\tcanvas: canvas,\n\t\ttouchToMouse: gopt.touchToMouse,\n\t\tgamepads: gopt.gamepads,\n\t\tpixelDensity: gopt.pixelDensity,\n\t\tmaxFPS: gopt.maxFPS,\n\t})\n\n\tconst gc: Array<() => void> = []\n\n\tconst gl = app.canvas()\n\t\t.getContext(\"webgl\", {\n\t\t\tantialias: true,\n\t\t\tdepth: true,\n\t\t\tstencil: true,\n\t\t\talpha: true,\n\t\t\tpreserveDrawingBuffer: true,\n\t\t})\n\n\tclass Texture {\n\n\t\tsrc: null | TexImageSource = null\n\t\tglTex: WebGLTexture\n\t\twidth: number\n\t\theight: number\n\n\t\tconstructor(w: number, h: number, opt: TextureOpt = {}) {\n\n\t\t\tthis.glTex = gl.createTexture()\n\t\t\tgc.push(() => this.free())\n\t\t\tthis.bind()\n\n\t\t\tif (w && h) {\n\t\t\t\tgl.texImage2D(\n\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t0, gl.RGBA,\n\t\t\t\t\tw,\n\t\t\t\t\th,\n\t\t\t\t\t0,\n\t\t\t\t\tgl.RGBA,\n\t\t\t\t\tgl.UNSIGNED_BYTE,\n\t\t\t\t\tnull,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tthis.width = w\n\t\t\tthis.height = h\n\n\t\t\tconst filter = (() => {\n\t\t\t\tswitch (opt.filter ?? gopt.texFilter) {\n\t\t\t\t\tcase \"linear\": return gl.LINEAR\n\t\t\t\t\tcase \"nearest\": return gl.NEAREST\n\t\t\t\t\tdefault: return gl.NEAREST\n\t\t\t\t}\n\t\t\t})()\n\n\t\t\tconst wrap = (() => {\n\t\t\t\tswitch (opt.wrap) {\n\t\t\t\t\tcase \"repeat\": return gl.REPEAT\n\t\t\t\t\tcase \"clampToEdge\": return gl.CLAMP_TO_EDGE\n\t\t\t\t\tdefault: return gl.CLAMP_TO_EDGE\n\t\t\t\t}\n\t\t\t})()\n\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, wrap)\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, wrap)\n\t\t\tthis.unbind()\n\n\t\t}\n\n\t\tstatic fromImage(img: TexImageSource, opt: TextureOpt = {}): Texture {\n\t\t\tconst tex = new Texture(0, 0, opt)\n\t\t\ttex.bind()\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img)\n\t\t\ttex.width = img.width\n\t\t\ttex.height = img.height\n\t\t\ttex.unbind()\n\t\t\ttex.src = img\n\t\t\treturn tex\n\t\t}\n\n\t\tupdate(img: TexImageSource, x = 0, y = 0) {\n\t\t\tthis.bind()\n\t\t\tgl.texSubImage2D(gl.TEXTURE_2D, 0, x, y, gl.RGBA, gl.UNSIGNED_BYTE, img)\n\t\t\tthis.unbind()\n\t\t}\n\n\t\tbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.glTex)\n\t\t}\n\n\t\tunbind() {\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, null)\n\t\t}\n\n\t\tfree() {\n\t\t\tgl.deleteTexture(this.glTex)\n\t\t}\n\n\t}\n\n\tclass TexPacker {\n\t\tprivate tex: Texture\n\t\tprivate canvas: HTMLCanvasElement\n\t\tprivate ctx: CanvasRenderingContext2D\n\t\tprivate x: number = 0\n\t\tprivate y: number = 0\n\t\tprivate curHeight: number = 0\n\t\tconstructor(w: number, h: number) {\n\t\t\tthis.canvas = document.createElement(\"canvas\")\n\t\t\tthis.canvas.width = w\n\t\t\tthis.canvas.height = h\n\t\t\tthis.tex = Texture.fromImage(this.canvas)\n\t\t\tthis.ctx = this.canvas.getContext(\"2d\")\n\t\t}\n\t\tadd(img: TexImageSource): [Texture, Quad] {\n\t\t\tif (img.width > this.canvas.width || img.height > this.canvas.height) {\n\t\t\t\tthrow new Error(`Texture size (${img.width} x ${img.height}) exceeds limit (${this.canvas.width} x ${this.canvas.height})`)\n\t\t\t}\n\t\t\tif (this.x + img.width > this.canvas.width) {\n\t\t\t\tthis.x = 0\n\t\t\t\tthis.y += this.curHeight\n\t\t\t\tthis.curHeight = 0\n\t\t\t}\n\t\t\tif (this.y + img.height > this.canvas.height) {\n\t\t\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\t\t\t\tthis.tex = Texture.fromImage(this.canvas)\n\t\t\t\tthis.x = 0\n\t\t\t\tthis.y = 0\n\t\t\t\tthis.curHeight = 0\n\t\t\t}\n\t\t\tconst pos = new Vec2(this.x, this.y)\n\t\t\tthis.x += img.width\n\t\t\tif (img.height > this.curHeight) {\n\t\t\t\tthis.curHeight = img.height\n\t\t\t}\n\t\t\tif (img instanceof ImageData) {\n\t\t\t\tthis.ctx.putImageData(img, pos.x, pos.y)\n\t\t\t} else {\n\t\t\t\tthis.ctx.drawImage(img, pos.x, pos.y)\n\t\t\t}\n\t\t\tthis.tex.update(this.canvas)\n\t\t\treturn [this.tex, new Quad(\n\t\t\t\tpos.x / this.canvas.width,\n\t\t\t\tpos.y / this.canvas.height,\n\t\t\t\timg.width / this.canvas.width,\n\t\t\t\timg.height / this.canvas.height,\n\t\t\t)]\n\t\t}\n\t}\n\n\tclass FrameBuffer {\n\n\t\ttex: Texture\n\t\tglFrameBuffer: WebGLFramebuffer\n\t\tglRenderBuffer: WebGLRenderbuffer\n\n\t\tconstructor(w: number, h: number, opt: TextureOpt = {}) {\n\t\t\tthis.tex = new Texture(w, h, opt)\n\t\t\tthis.glFrameBuffer = gl.createFramebuffer()\n\t\t\tthis.glRenderBuffer = gl.createRenderbuffer()\n\t\t\tgc.push(() => this.free())\n\t\t\tthis.bind()\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_STENCIL, w, h)\n\t\t\tgl.framebufferTexture2D(\n\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\tgl.COLOR_ATTACHMENT0,\n\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\tthis.tex.glTex,\n\t\t\t\t0,\n\t\t\t)\n\t\t\tgl.framebufferRenderbuffer(\n\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\tgl.DEPTH_STENCIL_ATTACHMENT,\n\t\t\t\tgl.RENDERBUFFER,\n\t\t\t\tthis.glRenderBuffer,\n\t\t\t)\n\t\t\tthis.unbind()\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.tex.width\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.tex.height\n\t\t}\n\n\t\tbind() {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.glFrameBuffer)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, this.glRenderBuffer)\n\t\t}\n\n\t\tunbind() {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null)\n\t\t}\n\n\t\tfree() {\n\t\t\tgl.deleteFramebuffer(this.glFrameBuffer)\n\t\t\tgl.deleteRenderbuffer(this.glRenderBuffer)\n\t\t\tthis.tex.free()\n\t\t}\n\n\t}\n\n\tconst gfx = (() => {\n\n\t\tconst defShader = makeShader(DEF_VERT, DEF_FRAG)\n\n\t\t// a 1x1 white texture to draw raw shapes like rectangles and polygons\n\t\t// we use a texture for those so we can use only 1 pipeline for drawing sprites + shapes\n\t\tconst emptyTex = Texture.fromImage(\n\t\t\tnew ImageData(new Uint8ClampedArray([ 255, 255, 255, 255 ]), 1, 1),\n\t\t)\n\n\t\tconst frameBuffer = (gopt.width && gopt.height)\n\t\t\t? new FrameBuffer(gopt.width * pixelDensity, gopt.height * pixelDensity)\n\t\t\t: new FrameBuffer(gl.drawingBufferWidth, gl.drawingBufferHeight)\n\n\t\tlet bgColor: null | Color = null\n\t\tlet bgAlpha = 1\n\n\t\tif (gopt.background) {\n\t\t\tbgColor = Color.fromArray(gopt.background)\n\t\t\tbgAlpha = gopt.background[3] ?? 1\n\t\t\tgl.clearColor(\n\t\t\t\tbgColor.r / 255,\n\t\t\t\tbgColor.g / 255,\n\t\t\t\tbgColor.b / 255,\n\t\t\t\tbgAlpha,\n\t\t\t)\n\t\t}\n\n\t\tgl.enable(gl.BLEND)\n\t\tgl.enable(gl.SCISSOR_TEST)\n\t\tgl.blendFuncSeparate(\n\t\t\tgl.SRC_ALPHA,\n\t\t\tgl.ONE_MINUS_SRC_ALPHA,\n\t\t\tgl.ONE,\n\t\t\tgl.ONE_MINUS_SRC_ALPHA,\n\t\t)\n\n\t\t// we only use one vertex and index buffer that batches all draw calls\n\t\tconst vbuf = gl.createBuffer()\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, vbuf)\n\t\tgl.bufferData(gl.ARRAY_BUFFER, MAX_BATCHED_VERTS * 4, gl.DYNAMIC_DRAW)\n\n\t\tVERTEX_FORMAT.reduce((offset, f, i) => {\n\t\t\tgl.vertexAttribPointer(i, f.size, gl.FLOAT, false, STRIDE * 4, offset)\n\t\t\tgl.enableVertexAttribArray(i)\n\t\t\treturn offset + f.size * 4\n\t\t}, 0)\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\n\t\tconst ibuf = gl.createBuffer()\n\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, ibuf)\n\t\tgl.bufferData(gl.ELEMENT_ARRAY_BUFFER, MAX_BATCHED_INDICES * 4, gl.DYNAMIC_DRAW)\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\n\t\t// a checkerboard texture used for the default background\n\t\tconst bgTex = Texture.fromImage(\n\t\t\tnew ImageData(new Uint8ClampedArray([\n\t\t\t\t128, 128, 128, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t190, 190, 190, 255,\n\t\t\t\t128, 128, 128, 255,\n\t\t\t]), 2, 2), {\n\t\t\t\twrap: \"repeat\",\n\t\t\t\tfilter: \"nearest\",\n\t\t\t},\n\t\t)\n\n\t\treturn {\n\n\t\t\t// keep track of how many draw calls we're doing this frame\n\t\t\tdrawCalls: 0,\n\t\t\t// how many draw calls we're doing last frame, this is the number we give to users\n\t\t\tlastDrawCalls: 0,\n\n\t\t\t// gfx states\n\t\t\tdefShader: defShader,\n\t\t\tcurShader: defShader,\n\t\t\tframeBuffer: frameBuffer,\n\t\t\tpostShader: null,\n\t\t\tpostShaderUniform: null,\n\t\t\tdefTex: emptyTex,\n\t\t\tcurTex: emptyTex,\n\t\t\tcurUniform: {},\n\t\t\tvbuf: vbuf,\n\t\t\tibuf: ibuf,\n\n\t\t\t// local vertex / index buffer queue\n\t\t\tvqueue: [],\n\t\t\tiqueue: [],\n\n\t\t\ttransform: new Mat4(),\n\t\t\ttransformStack: [],\n\n\t\t\tbgTex: bgTex,\n\t\t\tbgColor: bgColor,\n\t\t\tbgAlpha: bgAlpha,\n\n\t\t\twidth: gopt.width ?? gl.drawingBufferWidth / pixelDensity / gscale,\n\t\t\theight: gopt.height ?? gl.drawingBufferHeight / pixelDensity / gscale,\n\n\t\t\tviewport: {\n\t\t\t\tx: 0,\n\t\t\t\ty: 0,\n\t\t\t\twidth: gl.drawingBufferWidth,\n\t\t\t\theight: gl.drawingBufferHeight,\n\t\t\t},\n\n\t\t}\n\n\t})()\n\n\tclass SpriteData {\n\n\t\ttex: Texture\n\t\tframes: Quad[] = [ new Quad(0, 0, 1, 1) ]\n\t\tanims: SpriteAnims = {}\n\t\tslice9: NineSlice | null = null\n\n\t\tconstructor(\n\t\t\ttex: Texture,\n\t\t\tframes?: Quad[],\n\t\t\tanims: SpriteAnims = {},\n\t\t\tslice9: NineSlice = null,\n\t\t) {\n\t\t\tthis.tex = tex\n\t\t\tif (frames) this.frames = frames\n\t\t\tthis.anims = anims\n\t\t\tthis.slice9 = slice9\n\t\t}\n\n\t\tstatic from(src: LoadSpriteSrc, opt: LoadSpriteOpt = {}): Promise<SpriteData> {\n\t\t\treturn typeof src === \"string\"\n\t\t\t\t? SpriteData.fromURL(src, opt)\n\t\t\t\t: Promise.resolve(SpriteData.fromImage(src, opt))\n\t\t}\n\n\t\tstatic fromImage(data: TexImageSource, opt: LoadSpriteOpt = {}): SpriteData {\n\t\t\tconst [tex, quad] = assets.packer.add(data)\n\t\t\tconst frames = opt.frames ? opt.frames.map((f) => new Quad(\n\t\t\t\tquad.x + f.x * quad.w,\n\t\t\t\tquad.y + f.y * quad.h,\n\t\t\t\tf.w * quad.w,\n\t\t\t\tf.h * quad.h,\n\t\t\t)) : slice(opt.sliceX || 1, opt.sliceY || 1, quad.x, quad.y, quad.w, quad.h)\n\t\t\treturn new SpriteData(tex, frames, opt.anims, opt.slice9)\n\t\t}\n\n\t\tstatic fromURL(url: string, opt: LoadSpriteOpt = {}): Promise<SpriteData> {\n\t\t\treturn loadImg(url).then((img) => SpriteData.fromImage(img, opt))\n\t\t}\n\n\t}\n\n\tclass SoundData {\n\n\t\tbuf: AudioBuffer\n\n\t\tconstructor(buf: AudioBuffer) {\n\t\t\tthis.buf = buf\n\t\t}\n\n\t\tstatic fromArrayBuffer(buf: ArrayBuffer): Promise<SoundData> {\n\t\t\treturn new Promise((resolve, reject) =>\n\t\t\t\taudio.ctx.decodeAudioData(buf, resolve, reject),\n\t\t\t).then((buf: AudioBuffer) => new SoundData(buf))\n\t\t}\n\n\t\tstatic fromURL(url: string): Promise<SoundData> {\n\t\t\tif (isDataURL(url)) {\n\t\t\t\treturn SoundData.fromArrayBuffer(dataURLToArrayBuffer(url))\n\t\t\t} else {\n\t\t\t\treturn fetchArrayBuffer(url).then((buf) => SoundData.fromArrayBuffer(buf))\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst audio = (() => {\n\n\t\t// TODO: handle when audio context is unavailable\n\t\tconst ctx = new (\n\t\t\twindow.AudioContext || (window as any).webkitAudioContext\n\t\t)() as AudioContext\n\t\tconst masterNode = ctx.createGain()\n\t\tmasterNode.connect(ctx.destination)\n\n\t\t// by default browsers can only load audio async, we don't deal with that and just start with an empty audio buffer\n\t\tconst burpSnd = new SoundData(createEmptyAudioBuffer(ctx))\n\n\t\t// load that burp sound\n\t\tctx.decodeAudioData(burpSoundSrc.buffer.slice(0)).then((buf) => {\n\t\t\tburpSnd.buf = buf\n\t\t}).catch((err) => {\n\t\t\tconsole.error(\"Failed to load burp: \", err)\n\t\t})\n\n\t\treturn {\n\t\t\tctx,\n\t\t\tmasterNode,\n\t\t\tburpSnd,\n\t\t}\n\n\t})()\n\n\tclass Asset<D> {\n\t\tloaded: boolean = false\n\t\tdata: D | null = null\n\t\terror: Error | null = null\n\t\tprivate onLoadEvents: Event<[D]> = new Event()\n\t\tprivate onErrorEvents: Event<[Error]> = new Event()\n\t\tprivate onFinishEvents: Event<[]> = new Event()\n\t\tconstructor(loader: Promise<D>) {\n\t\t\tloader.then((data) => {\n\t\t\t\tthis.data = data\n\t\t\t\tthis.onLoadEvents.trigger(data)\n\t\t\t}).catch((err) => {\n\t\t\t\tthis.error = err\n\t\t\t\tif (this.onErrorEvents.numListeners() > 0) {\n\t\t\t\t\tthis.onErrorEvents.trigger(err)\n\t\t\t\t} else {\n\t\t\t\t\tthrow err\n\t\t\t\t}\n\t\t\t}).finally(() => {\n\t\t\t\tthis.onFinishEvents.trigger()\n\t\t\t\tthis.loaded = true\n\t\t\t})\n\t\t}\n\t\tstatic loaded<D>(data: D): Asset<D> {\n\t\t\tconst asset = new Asset(Promise.resolve(data)) as Asset<D>\n\t\t\tasset.data = data\n\t\t\tasset.loaded = true\n\t\t\treturn asset\n\t\t}\n\t\tonLoad(action: (data: D) => void) {\n\t\t\tif (this.loaded && this.data) {\n\t\t\t\taction(this.data)\n\t\t\t} else {\n\t\t\t\tthis.onLoadEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tonError(action: (err: Error) => void) {\n\t\t\tif (this.loaded && this.error) {\n\t\t\t\taction(this.error)\n\t\t\t} else {\n\t\t\t\tthis.onErrorEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tonFinish(action: () => void) {\n\t\t\tif (this.loaded) {\n\t\t\t\taction()\n\t\t\t} else {\n\t\t\t\tthis.onFinishEvents.add(action)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\t\tthen(action: (data: D) => void): Asset<D> {\n\t\t\treturn this.onLoad(action)\n\t\t}\n\t\tcatch(action: (err: Error) => void): Asset<D> {\n\t\t\treturn this.onError(action)\n\t\t}\n\t\tfinally(action: () => void): Asset<D> {\n\t\t\treturn this.onFinish(action)\n\t\t}\n\t}\n\n\tclass AssetBucket<D> {\n\t\tassets: Map<string, Asset<D>> = new Map()\n\t\tlastUID: number = 0\n\t\tadd(name: string | null, loader: Promise<D>): Asset<D> {\n\t\t\t// if user don't provide a name we use a generated one\n\t\t\tconst id = name ?? (this.lastUID++ + \"\")\n\t\t\tconst asset = new Asset(loader)\n\t\t\tthis.assets.set(id, asset)\n\t\t\treturn asset\n\t\t}\n\t\taddLoaded(name: string | null, data: D): Asset<D> {\n\t\t\tconst id = name ?? (this.lastUID++ + \"\")\n\t\t\tconst asset = Asset.loaded(data)\n\t\t\tthis.assets.set(id, asset)\n\t\t\treturn asset\n\t\t}\n\t\tget(handle: string): Asset<D> | void {\n\t\t\treturn this.assets.get(handle)\n\t\t}\n\t\tprogress(): number {\n\t\t\tif (this.assets.size === 0) {\n\t\t\t\treturn 1\n\t\t\t}\n\t\t\tlet loaded = 0\n\t\t\tthis.assets.forEach((asset) => {\n\t\t\t\tif (asset.loaded) {\n\t\t\t\t\tloaded++\n\t\t\t\t}\n\t\t\t})\n\t\t\treturn loaded / this.assets.size\n\t\t}\n\t}\n\n\tconst assets = {\n\t\t// prefix for when loading from a url\n\t\turlPrefix: \"\",\n\t\t// asset holders\n\t\tsprites: new AssetBucket<SpriteData>(),\n\t\tfonts: new AssetBucket<FontData>(),\n\t\tbitmapFonts: new AssetBucket<BitmapFontData>(),\n\t\tsounds: new AssetBucket<SoundData>(),\n\t\tshaders: new AssetBucket<ShaderData>(),\n\t\tcustom: new AssetBucket<any>(),\n\t\tpacker: new TexPacker(SPRITE_ATLAS_WIDTH, SPRITE_ATLAS_HEIGHT),\n\t\t// if we finished initially loading all assets\n\t\tloaded: false,\n\t}\n\n\tconst game = {\n\n\t\t// general events\n\t\tevents: new EventHandler<{\n\t\t\tmouseMove: [],\n\t\t\tmouseDown: [MouseButton],\n\t\t\tmousePress: [MouseButton],\n\t\t\tmouseRelease: [MouseButton],\n\t\t\tcharInput: [string],\n\t\t\tkeyPress: [Key],\n\t\t\tkeyDown: [Key],\n\t\t\tkeyPressRepeat: [Key],\n\t\t\tkeyRelease: [Key],\n\t\t\ttouchStart: [Vec2, Touch],\n\t\t\ttouchMove: [Vec2, Touch],\n\t\t\ttouchEnd: [Vec2, Touch],\n\t\t\tgamepadButtonDown: [string],\n\t\t\tgamepadButtonPress: [string],\n\t\t\tgamepadButtonRelease: [string],\n\t\t\tgamepadStick: [string, Vec2],\n\t\t\tgamepadConnect: [Gamepad],\n\t\t\tgamepadDisconnect: [Gamepad],\n\t\t\tscroll: [Vec2],\n\t\t\tadd: [GameObj],\n\t\t\tdestroy: [GameObj],\n\t\t\tload: [],\n\t\t\tloading: [number],\n\t\t\terror: [Error],\n\t\t\tinput: [],\n\t\t\tframeEnd: [],\n\t\t\tresize: [],\n\t\t\tsceneLeave: [string],\n\t\t}>(),\n\n\t\t// object events\n\t\tobjEvents: new EventHandler(),\n\n\t\t// root game object\n\t\troot: make([]),\n\n\t\t// misc\n\t\tgravity: 0,\n\t\tscenes: {},\n\n\t\t// on screen log\n\t\tlogs: [],\n\n\t\t// camera\n\t\tcam: {\n\t\t\tpos: null,\n\t\t\tscale: new Vec2(1),\n\t\t\tangle: 0,\n\t\t\tshake: 0,\n\t\t\ttransform: new Mat4(),\n\t\t},\n\n\t}\n\n\t// TODO: accept Asset<T>?\n\t// wrap individual loaders with global loader counter, for stuff like progress bar\n\tfunction load<T>(prom: Promise<T>): Asset<T> {\n\t\treturn assets.custom.add(null, prom)\n\t}\n\n\t// get current load progress\n\tfunction loadProgress(): number {\n\t\tconst buckets = [\n\t\t\tassets.sprites,\n\t\t\tassets.sounds,\n\t\t\tassets.shaders,\n\t\t\tassets.fonts,\n\t\t\tassets.bitmapFonts,\n\t\t\tassets.custom,\n\t\t]\n\t\treturn buckets.reduce((n, bucket) => n + bucket.progress(), 0) / buckets.length\n\t}\n\n\t// global load path prefix\n\tfunction loadRoot(path?: string): string {\n\t\tif (path !== undefined) {\n\t\t\tassets.urlPrefix = path\n\t\t}\n\t\treturn assets.urlPrefix\n\t}\n\n\t// wrapper around fetch() that applies urlPrefix and basic error handling\n\tfunction fetchURL(path: string) {\n\t\tconst url = assets.urlPrefix + path\n\t\treturn fetch(url)\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.ok) throw new Error(`Failed to fetch ${url}`)\n\t\t\t\treturn res\n\t\t\t})\n\t}\n\n\tfunction fetchJSON(path: string) {\n\t\treturn fetchURL(path).then((res) => res.json())\n\t}\n\n\tfunction fetchText(path: string) {\n\t\treturn fetchURL(path).then((res) => res.text())\n\t}\n\n\tfunction fetchArrayBuffer(path: string) {\n\t\treturn fetchURL(path).then((res) => res.arrayBuffer())\n\t}\n\n\t// wrapper around image loader to get a Promise\n\tfunction loadImg(src: string): Promise<HTMLImageElement> {\n\t\tconst img = new Image()\n\t\timg.crossOrigin = \"anonymous\"\n\t\timg.src = isDataURL(src) ? src : assets.urlPrefix + src\n\t\treturn new Promise<HTMLImageElement>((resolve, reject) => {\n\t\t\timg.onload = () => resolve(img)\n\t\t\timg.onerror = () => reject(new Error(`Failed to load image from \"${src}\"`))\n\t\t})\n\t}\n\n\tfunction loadJSON(name, url) {\n\t\treturn assets.custom.add(name, fetchJSON(url))\n\t}\n\n\tclass FontData {\n\t\tfontface: FontFace\n\t\toutline: number\n\t\tfilter: TexFilter\n\t\tconstructor(face: FontFace, opt: LoadFontOpt = {}) {\n\t\t\tthis.fontface = face\n\t\t\tthis.outline = opt.outline ?? 0\n\t\t\tthis.filter = opt.filter ?? DEF_FONT_FILTER\n\t\t}\n\t}\n\n\t// TODO: pass in null src to store opt for default fonts like \"monospace\"\n\tfunction loadFont(\n\t\tname: string,\n\t\tsrc: string | ArrayBuffer,\n\t\topt: LoadFontOpt = {},\n\t): Asset<FontData> {\n\t\tconst font = new FontFace(name, typeof src === \"string\" ? `url(${src})` : src)\n\t\tdocument.fonts.add(font)\n\t\treturn assets.fonts.add(name, font.load().catch((err) => {\n\t\t\tthrow new Error(`Failed to load font from \"${src}\": ${err}`)\n\t\t}).then((face) => new FontData(face, opt)))\n\t}\n\n\t// TODO: support outline\n\t// TODO: support LoadSpriteSrc\n\tfunction loadBitmapFont(\n\t\tname: string | null,\n\t\tsrc: string,\n\t\tgw: number,\n\t\tgh: number,\n\t\topt: LoadBitmapFontOpt = {},\n\t): Asset<BitmapFontData> {\n\t\treturn assets.bitmapFonts.add(name, loadImg(src)\n\t\t\t.then((img) => {\n\t\t\t\treturn makeFont(\n\t\t\t\t\tTexture.fromImage(img, opt),\n\t\t\t\t\tgw,\n\t\t\t\t\tgh,\n\t\t\t\t\topt.chars ?? ASCII_CHARS,\n\t\t\t\t)\n\t\t\t}),\n\t\t)\n\t}\n\n\t// get an array of frames based on configuration on how to slice the image\n\tfunction slice(x = 1, y = 1, dx = 0, dy = 0, w = 1, h = 1): Quad[] {\n\t\tconst frames = []\n\t\tconst qw = w / x\n\t\tconst qh = h / y\n\t\tfor (let j = 0; j < y; j++) {\n\t\t\tfor (let i = 0; i < x; i++) {\n\t\t\t\tframes.push(new Quad(\n\t\t\t\t\tdx + i * qw,\n\t\t\t\t\tdy + j * qh,\n\t\t\t\t\tqw,\n\t\t\t\t\tqh,\n\t\t\t\t))\n\t\t\t}\n\t\t}\n\t\treturn frames\n\t}\n\n\t// TODO: load synchronously if passed TexImageSource\n\tfunction loadSpriteAtlas(\n\t\tsrc: LoadSpriteSrc,\n\t\tdata: SpriteAtlasData | string,\n\t): Asset<Record<string, SpriteData>> {\n\t\tif (typeof data === \"string\") {\n\t\t\treturn load(new Promise((res, rej) => {\n\t\t\t\tfetchJSON(data).then((json) => {\n\t\t\t\t\tloadSpriteAtlas(src, json).then(res).catch(rej)\n\t\t\t\t})\n\t\t\t}))\n\t\t}\n\t\treturn load(SpriteData.from(src).then((atlas) => {\n\t\t\tconst map = {}\n\t\t\tfor (const name in data) {\n\t\t\t\tconst info = data[name]\n\t\t\t\tconst quad = atlas.frames[0]\n\t\t\t\tconst w = SPRITE_ATLAS_WIDTH * quad.w\n\t\t\t\tconst h = SPRITE_ATLAS_HEIGHT * quad.h\n\t\t\t\tconst frames = info.frames ? info.frames.map((f) => new Quad(\n\t\t\t\t\tquad.x + (info.x + f.x) / w * quad.w,\n\t\t\t\t\tquad.y + (info.y + f.y) / h * quad.h,\n\t\t\t\t\tf.w / w * quad.w,\n\t\t\t\t\tf.h / h * quad.h,\n\t\t\t\t)) : slice(\n\t\t\t\t\tinfo.sliceX || 1,\n\t\t\t\t\tinfo.sliceY || 1,\n\t\t\t\t\tquad.x + info.x / w * quad.w,\n\t\t\t\t\tquad.y + info.y / h * quad.h,\n\t\t\t\t\tinfo.width / w * quad.w,\n\t\t\t\t\tinfo.height / h * quad.h,\n\t\t\t\t)\n\t\t\t\tconst spr = new SpriteData(atlas.tex, frames, info.anims)\n\t\t\t\tassets.sprites.addLoaded(name, spr)\n\t\t\t\tmap[name] = spr\n\t\t\t}\n\t\t\treturn map\n\t\t}))\n\t}\n\n\tfunction createSpriteSheet(\n\t\timages: TexImageSource[],\n\t\topt: LoadSpriteOpt = {},\n\t): SpriteData {\n\t\tconst canvas = document.createElement(\"canvas\")\n\t\tconst width = images[0].width\n\t\tconst height = images[0].height\n\t\tcanvas.width = width * images.length\n\t\tcanvas.height = height\n\t\tconst ctx = canvas.getContext(\"2d\")\n\t\timages.forEach((img, i) => {\n\t\t\tif (img instanceof ImageData) {\n\t\t\t\tctx.putImageData(img, i * width, 0)\n\t\t\t} else {\n\t\t\t\tctx.drawImage(img, i * width, 0)\n\t\t\t}\n\t\t})\n\t\tconst merged = ctx.getImageData(0, 0, images.length * width, height)\n\t\treturn SpriteData.fromImage(merged, {\n\t\t\t...opt,\n\t\t\tsliceX: images.length,\n\t\t\tsliceY: 1,\n\t\t})\n\t}\n\n\t// load a sprite to asset manager\n\tfunction loadSprite(\n\t\tname: string | null,\n\t\tsrc: LoadSpriteSrc | LoadSpriteSrc[],\n\t\topt: LoadSpriteOpt = {\n\t\t\tsliceX: 1,\n\t\t\tsliceY: 1,\n\t\t\tanims: {},\n\t\t},\n\t): Asset<SpriteData> {\n\t\tif (Array.isArray(src)) {\n\t\t\tif (src.some((s) => typeof s === \"string\")) {\n\t\t\t\treturn assets.sprites.add(\n\t\t\t\t\tname,\n\t\t\t\t\tPromise.all(src.map((s) => {\n\t\t\t\t\t\treturn typeof s === \"string\" ? loadImg(s) : Promise.resolve(s)\n\t\t\t\t\t})).then((images) => createSpriteSheet(images, opt)),\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\treturn assets.sprites.addLoaded(name, createSpriteSheet(src as TexImageSource[], opt))\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof src === \"string\") {\n\t\t\t\treturn assets.sprites.add(name, SpriteData.from(src, opt))\n\t\t\t} else {\n\t\t\t\treturn assets.sprites.addLoaded(name, SpriteData.fromImage(src, opt))\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction loadPedit(name: string | null, src: string | PeditFile): Asset<SpriteData> {\n\n\t\t// eslint-disable-next-line\n\t\treturn assets.sprites.add(name, new Promise(async (resolve) => {\n\n\t\t\tconst data = typeof src === \"string\" ? await fetchJSON(src) : src\n\t\t\tconst images = await Promise.all(data.frames.map(loadImg))\n\t\t\tconst canvas = document.createElement(\"canvas\")\n\t\t\tcanvas.width = data.width\n\t\t\tcanvas.height = data.height * data.frames.length\n\n\t\t\tconst ctx = canvas.getContext(\"2d\")\n\n\t\t\timages.forEach((img: HTMLImageElement, i) => {\n\t\t\t\tctx.drawImage(img, 0, i * data.height)\n\t\t\t})\n\n\t\t\tconst spr = await loadSprite(null, canvas, {\n\t\t\t\tsliceY: data.frames.length,\n\t\t\t\tanims: data.anims,\n\t\t\t})\n\n\t\t\tresolve(spr)\n\n\t\t}))\n\n\t}\n\n\tfunction loadAseprite(\n\t\tname: string | null,\n\t\timgSrc: LoadSpriteSrc,\n\t\tjsonSrc: string,\n\t): Asset<SpriteData> {\n\t\tif (typeof imgSrc === \"string\" && !jsonSrc) {\n\t\t\tjsonSrc = imgSrc.replace(new RegExp(`${getExt(imgSrc)}$`), \"json\")\n\t\t}\n\t\tconst resolveJSON = typeof jsonSrc === \"string\"\n\t\t\t? fetchJSON(jsonSrc)\n\t\t\t: Promise.resolve(jsonSrc)\n\t\treturn assets.sprites.add(name, resolveJSON.then((data) => {\n\t\t\tconst size = data.meta.size\n\t\t\tconst frames = data.frames.map((f: any) => {\n\t\t\t\treturn new Quad(\n\t\t\t\t\tf.frame.x / size.w,\n\t\t\t\t\tf.frame.y / size.h,\n\t\t\t\t\tf.frame.w / size.w,\n\t\t\t\t\tf.frame.h / size.h,\n\t\t\t\t)\n\t\t\t})\n\t\t\tconst anims = {}\n\t\t\tfor (const anim of data.meta.frameTags) {\n\t\t\t\tif (anim.from === anim.to) {\n\t\t\t\t\tanims[anim.name] = anim.from\n\t\t\t\t} else {\n\t\t\t\t\tanims[anim.name] = {\n\t\t\t\t\t\tfrom: anim.from,\n\t\t\t\t\t\tto: anim.to,\n\t\t\t\t\t\tspeed: 10,\n\t\t\t\t\t\tloop: true,\n\t\t\t\t\t\tpingpong: anim.direction === \"pingpong\",\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn SpriteData.from(imgSrc, {\n\t\t\t\tframes: frames,\n\t\t\t\tanims: anims,\n\t\t\t})\n\t\t}))\n\t}\n\n\tfunction loadShader(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t) {\n\t\treturn assets.shaders.addLoaded(name, makeShader(vert, frag))\n\t}\n\n\tfunction loadShaderURL(\n\t\tname: string | null,\n\t\tvert?: string,\n\t\tfrag?: string,\n\t): Asset<ShaderData> {\n\t\tconst resolveUrl = (url?: string) =>\n\t\t\turl\n\t\t\t\t? fetchText(url)\n\t\t\t\t: Promise.resolve(null)\n\t\tconst load = Promise.all([resolveUrl(vert), resolveUrl(frag)])\n\t\t\t.then(([vcode, fcode]: [string | null, string | null]) => {\n\t\t\t\treturn makeShader(vcode, fcode)\n\t\t\t})\n\t\treturn assets.shaders.add(name, load)\n\t}\n\n\t// TODO: allow stream big audio\n\t// load a sound to asset manager\n\tfunction loadSound(\n\t\tname: string | null,\n\t\tsrc: string | ArrayBuffer,\n\t\topts: LoadSoundOpt = {},\n\t): Asset<SoundData> {\n\t\treturn assets.sounds.add(\n\t\t\tname,\n\t\t\ttypeof src === \"string\"\n\t\t\t\t? SoundData.fromURL(src)\n\t\t\t\t: SoundData.fromArrayBuffer(src),\n\t\t)\n\t}\n\n\tfunction loadBean(name: string = \"bean\"): Asset<SpriteData> {\n\t\treturn loadSprite(name, beanSpriteSrc)\n\t}\n\n\tfunction getSprite(handle: string): Asset<SpriteData> | void {\n\t\treturn assets.sprites.get(handle)\n\t}\n\n\tfunction getSound(handle: string): Asset<SoundData> | void {\n\t\treturn assets.sounds.get(handle)\n\t}\n\n\tfunction getFont(handle: string): Asset<FontData> | void {\n\t\treturn assets.fonts.get(handle)\n\t}\n\n\tfunction getBitmapFont(handle: string): Asset<BitmapFontData> | void {\n\t\treturn assets.bitmapFonts.get(handle)\n\t}\n\n\tfunction getShader(handle: string): Asset<ShaderData> | void {\n\t\treturn assets.shaders.get(handle)\n\t}\n\n\tfunction getAsset(handle: string): Asset<any> | void {\n\t\treturn assets.custom.get(handle)\n\t}\n\n\tfunction resolveSprite(\n\t\tsrc: DrawSpriteOpt[\"sprite\"],\n\t): Asset<SpriteData> | null {\n\t\tif (typeof src === \"string\") {\n\t\t\tconst spr = getSprite(src)\n\t\t\tif (spr) {\n\t\t\t\t// if it's already loaded or being loading, return it\n\t\t\t\treturn spr\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\t// if there's any other ongoing loading task we return empty and don't error yet\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\t// if all other assets are loaded and we still haven't found this sprite, throw\n\t\t\t\tthrow new Error(`Sprite not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof SpriteData) {\n\t\t\treturn Asset.loaded(src)\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src\n\t\t} else {\n\t\t\tthrow new Error(`Invalid sprite: ${src}`)\n\t\t}\n\t}\n\n\tfunction resolveSound(\n\t\tsrc: Parameters<typeof play>[0],\n\t): Asset<SoundData> | null {\n\t\tif (typeof src === \"string\") {\n\t\t\tconst snd = getSound(src)\n\t\t\tif (snd) {\n\t\t\t\treturn snd\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Sound not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof SoundData) {\n\t\t\treturn Asset.loaded(src)\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src\n\t\t} else {\n\t\t\tthrow new Error(`Invalid sound: ${src}`)\n\t\t}\n\t}\n\n\tfunction resolveShader(\n\t\tsrc: RenderProps[\"shader\"],\n\t): ShaderData | Asset<ShaderData> | null {\n\t\tif (!src) {\n\t\t\treturn gfx.defShader\n\t\t}\n\t\tif (typeof src === \"string\") {\n\t\t\tconst shader = getShader(src)\n\t\t\tif (shader) {\n\t\t\t\treturn shader.data ?? shader\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Shader not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src.data ? src.data : src\n\t\t}\n\t\t// TODO: check type\n\t\t// @ts-ignore\n\t\treturn src\n\t}\n\n\tfunction resolveFont(\n\t\tsrc: DrawTextOpt[\"font\"],\n\t):\n\t\t| FontData\n\t\t| Asset<FontData>\n\t\t| BitmapFontData\n\t\t| Asset<BitmapFontData>\n\t\t| string\n\t\t| void\n\t{\n\t\tif (!src) {\n\t\t\treturn resolveFont(gopt.font ?? DEF_FONT)\n\t\t}\n\t\tif (typeof src === \"string\") {\n\t\t\tconst bfont = getBitmapFont(src)\n\t\t\tconst font = getFont(src)\n\t\t\tif (bfont) {\n\t\t\t\treturn bfont.data ?? bfont\n\t\t\t} else if (font) {\n\t\t\t\treturn font.data ?? font\n\t\t\t} else if (document.fonts.check(`${DEF_TEXT_CACHE_SIZE}px ${src}`)) {\n\t\t\t\treturn src\n\t\t\t} else if (loadProgress() < 1) {\n\t\t\t\treturn null\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Font not found: ${src}`)\n\t\t\t}\n\t\t} else if (src instanceof Asset) {\n\t\t\treturn src.data ? src.data : src\n\t\t}\n\t\t// TODO: check type\n\t\t// @ts-ignore\n\t\treturn src\n\t}\n\n\t// get / set master volume\n\tfunction volume(v?: number): number {\n\t\tif (v !== undefined) {\n\t\t\taudio.masterNode.gain.value = v\n\t\t}\n\t\treturn audio.masterNode.gain.value\n\t}\n\n\t// TODO: time() not correct when looped over or ended\n\t// TODO: onEnd() not working\n\t// plays a sound, returns a control handle\n\tfunction play(\n\t\tsrc: string | SoundData | Asset<SoundData>,\n\t\topt: AudioPlayOpt = {},\n\t): AudioPlay {\n\n\t\tconst ctx = audio.ctx\n\t\tlet paused = opt.paused ?? false\n\t\tlet srcNode = ctx.createBufferSource()\n\t\tconst onEndEvents = new Event()\n\t\tconst gainNode = ctx.createGain()\n\t\tconst pos = opt.seek ?? 0\n\t\tlet startTime = 0\n\t\tlet stopTime = 0\n\t\tlet started = false\n\n\t\tsrcNode.loop = Boolean(opt.loop)\n\t\tsrcNode.detune.value = opt.detune ?? 0\n\t\tsrcNode.playbackRate.value = opt.speed ?? 1\n\t\tsrcNode.connect(gainNode)\n\t\tsrcNode.onended = () => {\n\t\t\tif (getTime() >= srcNode.buffer?.duration ?? Number.POSITIVE_INFINITY) {\n\t\t\t\tonEndEvents.trigger()\n\t\t\t}\n\t\t}\n\t\tgainNode.connect(audio.masterNode)\n\t\tgainNode.gain.value = opt.volume ?? 1\n\n\t\tconst start = (data: SoundData) => {\n\t\t\tsrcNode.buffer = data.buf\n\t\t\tif (!paused) {\n\t\t\t\tstartTime = ctx.currentTime\n\t\t\t\tsrcNode.start(0, pos)\n\t\t\t\tstarted = true\n\t\t\t}\n\t\t}\n\n\t\tconst snd = resolveSound(src)\n\n\t\tif (snd instanceof Asset) {\n\t\t\tsnd.onLoad(start)\n\t\t}\n\n\t\tconst getTime = () => {\n\t\t\tif (!srcNode.buffer) return 0\n\t\t\tconst t = paused\n\t\t\t\t? stopTime - startTime\n\t\t\t\t: ctx.currentTime - startTime\n\t\t\tconst d = srcNode.buffer.duration\n\t\t\treturn srcNode.loop ? t % d : Math.min(t, d)\n\t\t}\n\n\t\tconst cloneNode = (oldNode: AudioBufferSourceNode) => {\n\t\t\tconst newNode = ctx.createBufferSource()\n\t\t\tnewNode.buffer = oldNode.buffer\n\t\t\tnewNode.loop = oldNode.loop\n\t\t\tnewNode.playbackRate.value = oldNode.playbackRate.value\n\t\t\tnewNode.detune.value = oldNode.detune.value\n\t\t\tnewNode.onended = oldNode.onended\n\t\t\tnewNode.connect(gainNode)\n\t\t\treturn newNode\n\t\t}\n\n\t\treturn {\n\n\t\t\tset paused(p: boolean) {\n\t\t\t\tif (paused === p) return\n\t\t\t\tpaused = p\n\t\t\t\tif (p) {\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsrcNode.stop()\n\t\t\t\t\t\tstarted = false\n\t\t\t\t\t}\n\t\t\t\t\tstopTime = ctx.currentTime\n\t\t\t\t} else {\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tconst pos = stopTime - startTime\n\t\t\t\t\tsrcNode.start(0, pos)\n\t\t\t\t\tstarted = true\n\t\t\t\t\tstartTime = ctx.currentTime - pos\n\t\t\t\t\tstopTime = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tget paused() {\n\t\t\t\treturn paused\n\t\t\t},\n\n\t\t\tplay(time: number = 0) {\n\t\t\t\tthis.seek(time)\n\t\t\t\tthis.paused = false\n\t\t\t},\n\n\t\t\tseek(time: number) {\n\t\t\t\tif (!srcNode.buffer?.duration) return\n\t\t\t\tif (time > srcNode.buffer.duration) return\n\t\t\t\tif (paused) {\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tstartTime = stopTime - time\n\t\t\t\t} else {\n\t\t\t\t\tsrcNode.stop()\n\t\t\t\t\tsrcNode = cloneNode(srcNode)\n\t\t\t\t\tstartTime = ctx.currentTime - time\n\t\t\t\t\tsrcNode.start(0, time)\n\t\t\t\t\tstarted = true\n\t\t\t\t\tstopTime = 0\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// TODO: affect time()\n\t\t\tset speed(val: number) {\n\t\t\t\tsrcNode.playbackRate.value = val\n\t\t\t},\n\n\t\t\tget speed() {\n\t\t\t\treturn srcNode.playbackRate.value\n\t\t\t},\n\n\t\t\tset detune(val: number) {\n\t\t\t\tsrcNode.detune.value = val\n\t\t\t},\n\n\t\t\tget detune() {\n\t\t\t\treturn srcNode.detune.value\n\t\t\t},\n\n\t\t\tset volume(val: number) {\n\t\t\t\tgainNode.gain.value = Math.max(val, 0)\n\t\t\t},\n\n\t\t\tget volume() {\n\t\t\t\treturn gainNode.gain.value\n\t\t\t},\n\n\t\t\tset loop(l: boolean) {\n\t\t\t\tsrcNode.loop = l\n\t\t\t},\n\n\t\t\tget loop() {\n\t\t\t\treturn srcNode.loop\n\t\t\t},\n\n\t\t\tduration(): number {\n\t\t\t\treturn srcNode.buffer?.duration ?? 0\n\t\t\t},\n\n\t\t\ttime(): number {\n\t\t\t\treturn getTime() % this.duration()\n\t\t\t},\n\n\t\t\tonEnd(action: () => void) {\n\t\t\t\treturn onEndEvents.add(action)\n\t\t\t},\n\n\t\t\tthen(action: () => void) {\n\t\t\t\treturn this.onEnd(action)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\t// core kaboom logic\n\tfunction burp(opt?: AudioPlayOpt): AudioPlay {\n\t\treturn play(audio.burpSnd, opt)\n\t}\n\n\ttype DrawTextureOpt = RenderProps & {\n\t\ttex: Texture,\n\t\twidth?: number,\n\t\theight?: number,\n\t\ttiled?: boolean,\n\t\tflipX?: boolean,\n\t\tflipY?: boolean,\n\t\tquad?: Quad,\n\t\tanchor?: Anchor | Vec2,\n\t}\n\n\tfunction makeShader(\n\t\tvertSrc: string | null = DEF_VERT,\n\t\tfragSrc: string | null = DEF_FRAG,\n\t): GfxShader {\n\n\t\tconst vcode = VERT_TEMPLATE.replace(\"{{user}}\", vertSrc ?? DEF_VERT)\n\t\tconst fcode = FRAG_TEMPLATE.replace(\"{{user}}\", fragSrc ?? DEF_FRAG)\n\t\tconst vertShader = gl.createShader(gl.VERTEX_SHADER)\n\t\tconst fragShader = gl.createShader(gl.FRAGMENT_SHADER)\n\n\t\tgl.shaderSource(vertShader, vcode)\n\t\tgl.shaderSource(fragShader, fcode)\n\t\tgl.compileShader(vertShader)\n\t\tgl.compileShader(fragShader)\n\n\t\tconst prog = gl.createProgram()\n\n\t\tgc.push(() => gl.deleteProgram(prog))\n\t\tgl.attachShader(prog, vertShader)\n\t\tgl.attachShader(prog, fragShader)\n\n\t\tgl.bindAttribLocation(prog, 0, \"a_pos\")\n\t\tgl.bindAttribLocation(prog, 1, \"a_uv\")\n\t\tgl.bindAttribLocation(prog, 2, \"a_color\")\n\n\t\tgl.linkProgram(prog)\n\n\t\tif (!gl.getProgramParameter(prog, gl.LINK_STATUS)) {\n\n\t\t\tconst formatShaderError = (msg: string) => {\n\t\t\t\tconst FMT = /^ERROR:\\s0:(?<line>\\d+):\\s(?<msg>.+)/\n\t\t\t\tconst match = msg.match(FMT)\n\t\t\t\treturn {\n\t\t\t\t\tline: Number(match.groups.line),\n\t\t\t\t\t// seem to be a \\n\\0 at the end of error messages, causing unwanted line break\n\t\t\t\t\tmsg: match.groups.msg.replace(/\\n\\0$/, \"\"),\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst vertError = gl.getShaderInfoLog(vertShader)\n\t\t\tconst fragError = gl.getShaderInfoLog(fragShader)\n\t\t\tlet msg = \"\"\n\n\t\t\tif (vertError) {\n\t\t\t\tconst err = formatShaderError(vertError)\n\t\t\t\tmsg += `Vertex shader line ${err.line - 14}: ${err.msg}`\n\t\t\t}\n\n\t\t\tif (fragError) {\n\t\t\t\tconst err = formatShaderError(fragError)\n\t\t\t\tmsg += `Fragment shader line ${err.line - 14}: ${err.msg}`\n\t\t\t}\n\n\t\t\tthrow new Error(msg)\n\n\t\t}\n\n\t\tgl.deleteShader(vertShader)\n\t\tgl.deleteShader(fragShader)\n\n\t\treturn {\n\n\t\t\tbind() {\n\t\t\t\tgl.useProgram(prog)\n\t\t\t},\n\n\t\t\tunbind() {\n\t\t\t\tgl.useProgram(null)\n\t\t\t},\n\n\t\t\tfree() {\n\t\t\t\tgl.deleteProgram(prog)\n\t\t\t},\n\n\t\t\t// TODO: support vec3 and vec4\n\t\t\tsend(uniform: Uniform) {\n\t\t\t\tfor (const name in uniform) {\n\t\t\t\t\tconst val = uniform[name]\n\t\t\t\t\tconst loc = gl.getUniformLocation(prog, name)\n\t\t\t\t\tif (typeof val === \"number\") {\n\t\t\t\t\t\tgl.uniform1f(loc, val)\n\t\t\t\t\t} else if (val instanceof Mat4) {\n\t\t\t\t\t\tgl.uniformMatrix4fv(loc, false, new Float32Array(val.m))\n\t\t\t\t\t} else if (val instanceof Color) {\n\t\t\t\t\t\t// TODO: opacity?\n\t\t\t\t\t\tgl.uniform3f(loc, val.r, val.g, val.b)\n\t\t\t\t\t} else if (val instanceof Vec2) {\n\t\t\t\t\t\tgl.uniform2f(loc, val.x, val.y)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction makeFont(\n\t\ttex: Texture,\n\t\tgw: number,\n\t\tgh: number,\n\t\tchars: string,\n\t): GfxFont {\n\n\t\tconst cols = tex.width / gw\n\t\tconst map: Record<string, Quad> = {}\n\t\tconst charMap = chars.split(\"\").entries()\n\n\t\tfor (const [i, ch] of charMap) {\n\t\t\tmap[ch] = new Quad(\n\t\t\t\t(i % cols) * gw,\n\t\t\t\tMath.floor(i / cols) * gh,\n\t\t\t\tgw,\n\t\t\t\tgh,\n\t\t\t)\n\t\t}\n\n\t\treturn {\n\t\t\ttex: tex,\n\t\t\tmap: map,\n\t\t\tsize: gh,\n\t\t}\n\n\t}\n\n\t// TODO: expose\n\tfunction drawRaw(\n\t\tverts: Vertex[],\n\t\tindices: number[],\n\t\tfixed: boolean,\n\t\ttex: Texture = gfx.defTex,\n\t\tshaderSrc: RenderProps[\"shader\"] = gfx.defShader,\n\t\tuniform: Uniform = {},\n\t) {\n\n\t\tconst shader = resolveShader(shaderSrc)\n\n\t\tif (!shader || shader instanceof Asset) {\n\t\t\treturn\n\t\t}\n\n\t\t// flush on texture / shader change and overflow\n\t\tif (\n\t\t\ttex !== gfx.curTex\n\t\t\t|| shader !== gfx.curShader\n\t\t\t|| !deepEq(gfx.curUniform, uniform)\n\t\t\t|| gfx.vqueue.length + verts.length * STRIDE > MAX_BATCHED_VERTS\n\t\t\t|| gfx.iqueue.length + indices.length > MAX_BATCHED_INDICES\n\t\t) {\n\t\t\tflush()\n\t\t}\n\n\t\tconst transform = fixed ? gfx.transform : game.cam.transform.mult(gfx.transform)\n\n\t\tfor (const v of verts) {\n\t\t\t// normalized world space coordinate [-1.0 ~ 1.0]\n\t\t\tconst pt = screen2ndc(transform.multVec2(v.pos))\n\t\t\tgfx.vqueue.push(\n\t\t\t\tpt.x, pt.y,\n\t\t\t\tv.uv.x, v.uv.y,\n\t\t\t\tv.color.r / 255, v.color.g / 255, v.color.b / 255, v.opacity,\n\t\t\t)\n\t\t}\n\n\t\tfor (const i of indices) {\n\t\t\tgfx.iqueue.push(i + gfx.vqueue.length / STRIDE - verts.length)\n\t\t}\n\n\t\tgfx.curTex = tex\n\t\tgfx.curShader = shader\n\t\tgfx.curUniform = uniform\n\n\t}\n\n\t// draw all batched shapes\n\tfunction flush() {\n\n\t\tif (\n\t\t\t!gfx.curTex\n\t\t\t|| !gfx.curShader\n\t\t\t|| gfx.vqueue.length === 0\n\t\t\t|| gfx.iqueue.length === 0\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, gfx.vbuf)\n\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, new Float32Array(gfx.vqueue))\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, gfx.ibuf)\n\t\tgl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, new Uint16Array(gfx.iqueue))\n\t\tgfx.curShader.bind()\n\t\tgfx.curShader.send(gfx.curUniform)\n\t\tgfx.curTex.bind()\n\t\tgl.drawElements(gl.TRIANGLES, gfx.iqueue.length, gl.UNSIGNED_SHORT, 0)\n\t\tgfx.curTex.unbind()\n\t\tgfx.curShader.unbind()\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\n\t\tgfx.vqueue.length = 0\n\t\tgfx.iqueue.length = 0\n\n\t\tgfx.drawCalls++\n\n\t}\n\n\t// start a rendering frame, reset some states\n\tfunction frameStart() {\n\n\t\t// clear backbuffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\t\tgfx.frameBuffer.bind()\n\t\tgl.viewport(0, 0, gfx.frameBuffer.width, gfx.frameBuffer.height)\n\t\t// clear framebuffer\n\t\tgl.clear(gl.COLOR_BUFFER_BIT)\n\n\t\tif (!gfx.bgColor) {\n\t\t\tdrawUnscaled(() => {\n\t\t\t\tdrawUVQuad({\n\t\t\t\t\twidth: width(),\n\t\t\t\t\theight: height(),\n\t\t\t\t\tquad: new Quad(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\twidth() / BG_GRID_SIZE,\n\t\t\t\t\t\theight() / BG_GRID_SIZE,\n\t\t\t\t\t),\n\t\t\t\t\ttex: gfx.bgTex,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tgfx.drawCalls = 0\n\t\tgfx.transformStack.length = 0\n\t\tgfx.transform = new Mat4()\n\n\t}\n\n\tfunction usePostEffect(name: string, uniform?: Uniform | (() => Uniform)) {\n\t\tgfx.postShader = name\n\t\tgfx.postShaderUniform = uniform ?? null\n\t}\n\n\tfunction frameEnd() {\n\t\t// TODO: don't render debug UI with framebuffer\n\t\t// TODO: polish framebuffer rendering / sizing issues\n\t\tflush()\n\t\tgfx.frameBuffer.unbind()\n\t\tgl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight)\n\n\t\tflush()\n\t\tconst ow = gfx.width\n\t\tconst oh = gfx.height\n\t\tgfx.width = gl.drawingBufferWidth / pixelDensity\n\t\tgfx.height = gl.drawingBufferHeight / pixelDensity\n\n\t\tdrawTexture({\n\t\t\tflipY: true,\n\t\t\ttex: gfx.frameBuffer.tex,\n\t\t\tpos: new Vec2(gfx.viewport.x, gfx.viewport.y),\n\t\t\twidth: gfx.viewport.width,\n\t\t\theight: gfx.viewport.height,\n\t\t\tshader: gfx.postShader,\n\t\t\tuniform: typeof gfx.postShaderUniform === \"function\"\n\t\t\t\t? gfx.postShaderUniform()\n\t\t\t\t: gfx.postShaderUniform,\n\t\t\tfixed: true,\n\t\t})\n\n\t\tflush()\n\t\tgfx.width = ow\n\t\tgfx.height = oh\n\t\tgfx.lastDrawCalls = gfx.drawCalls\n\t}\n\n\t// convert a screen space coordinate to webgl normalized device coordinate\n\tfunction screen2ndc(pt: Vec2): Vec2 {\n\t\treturn new Vec2(\n\t\t\tpt.x / width() * 2 - 1,\n\t\t\t-pt.y / height() * 2 + 1,\n\t\t)\n\t}\n\n\tfunction pushMatrix(m: Mat4) {\n\t\tgfx.transform = m.clone()\n\t}\n\n\tfunction pushTranslate(...args: Vec2Args) {\n\t\tif (args[0] === undefined) return\n\t\tconst p = vec2(...args)\n\t\tif (p.x === 0 && p.y === 0) return\n\t\tgfx.transform.translate(p)\n\t}\n\n\tfunction pushScale(...args: Vec2Args) {\n\t\tif (args[0] === undefined) return\n\t\tconst p = vec2(...args)\n\t\tif (p.x === 1 && p.y === 1) return\n\t\tgfx.transform.scale(p)\n\t}\n\n\tfunction pushRotate(a: number) {\n\t\tif (!a) return\n\t\tgfx.transform.rotate(a)\n\t}\n\n\tfunction pushTransform() {\n\t\tgfx.transformStack.push(gfx.transform.clone())\n\t}\n\n\tfunction popTransform() {\n\t\tif (gfx.transformStack.length > 0) {\n\t\t\tgfx.transform = gfx.transformStack.pop()\n\t\t}\n\t}\n\n\t// draw a uv textured quad\n\tfunction drawUVQuad(opt: DrawUVQuadOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawUVQuad() requires property \\\"width\\\" and \\\"height\\\".\")\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst w = opt.width\n\t\tconst h = opt.height\n\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR)\n\t\tconst offset = anchor.scale(new Vec2(w, h).scale(-0.5))\n\t\tconst q = opt.quad || new Quad(0, 0, 1, 1)\n\t\tconst color = opt.color || rgb(255, 255, 255)\n\t\tconst opacity = opt.opacity ?? 1\n\n\t\t// apply uv padding to avoid artifacts\n\t\tconst uvPadX = opt.tex ? UV_PAD / opt.tex.width : 0\n\t\tconst uvPadY = opt.tex ? UV_PAD / opt.tex.height : 0\n\t\tconst qx = q.x + uvPadX\n\t\tconst qy = q.y + uvPadY\n\t\tconst qw = q.w - uvPadX * 2\n\t\tconst qh = q.h - uvPadY * 2\n\n\t\tpushTransform()\n\t\tpushTranslate(opt.pos)\n\t\tpushRotate(opt.angle)\n\t\tpushScale(opt.scale)\n\t\tpushTranslate(offset)\n\n\t\tdrawRaw([\n\t\t\t{\n\t\t\t\tpos: new Vec2(-w / 2, h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx + qw : qx, opt.flipY ? qy : qy + qh),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(-w / 2, -h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx + qw : qx, opt.flipY ? qy + qh : qy),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(w / 2, -h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx : qx + qw, opt.flipY ? qy + qh : qy),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpos: new Vec2(w / 2, h / 2),\n\t\t\t\tuv: new Vec2(opt.flipX ? qx : qx + qw, opt.flipY ? qy : qy + qh),\n\t\t\t\tcolor: color,\n\t\t\t\topacity: opacity,\n\t\t\t},\n\t\t], [0, 1, 3, 1, 2, 3], opt.fixed, opt.tex, opt.shader, opt.uniform)\n\n\t\tpopTransform()\n\n\t}\n\n\t// TODO: clean\n\tfunction drawTexture(opt: DrawTextureOpt) {\n\n\t\tif (!opt.tex) {\n\t\t\tthrow new Error(\"drawTexture() requires property \\\"tex\\\".\")\n\t\t}\n\n\t\tconst q = opt.quad ?? new Quad(0, 0, 1, 1)\n\t\tconst w = opt.tex.width * q.w\n\t\tconst h = opt.tex.height * q.h\n\t\tconst scale = new Vec2(1)\n\n\t\tif (opt.tiled) {\n\n\t\t\t// TODO: draw fract\n\t\t\tconst repX = Math.ceil((opt.width || w) / w)\n\t\t\tconst repY = Math.ceil((opt.height || h) / h)\n\t\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(new Vec2(1, 1)).scale(0.5)\n\t\t\tconst offset = anchor.scale(repX * w, repY * h)\n\n\t\t\t// TODO: rotation\n\t\t\tfor (let i = 0; i < repX; i++) {\n\t\t\t\tfor (let j = 0; j < repY; j++) {\n\t\t\t\t\tdrawUVQuad(Object.assign({}, opt, {\n\t\t\t\t\t\tpos: (opt.pos || new Vec2(0)).add(new Vec2(w * i, h * j)).sub(offset),\n\t\t\t\t\t\tscale: scale.scale(opt.scale || new Vec2(1)),\n\t\t\t\t\t\ttex: opt.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\twidth: w,\n\t\t\t\t\t\theight: h,\n\t\t\t\t\t\tanchor: \"topleft\",\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\n\t\t\t// TODO: should this ignore scale?\n\t\t\tif (opt.width && opt.height) {\n\t\t\t\tscale.x = opt.width / w\n\t\t\t\tscale.y = opt.height / h\n\t\t\t} else if (opt.width) {\n\t\t\t\tscale.x = opt.width / w\n\t\t\t\tscale.y = scale.x\n\t\t\t} else if (opt.height) {\n\t\t\t\tscale.y = opt.height / h\n\t\t\t\tscale.x = scale.y\n\t\t\t}\n\n\t\t\tdrawUVQuad(Object.assign({}, opt, {\n\t\t\t\tscale: scale.scale(opt.scale || new Vec2(1)),\n\t\t\t\ttex: opt.tex,\n\t\t\t\tquad: q,\n\t\t\t\twidth: w,\n\t\t\t\theight: h,\n\t\t\t}))\n\n\t\t}\n\n\t}\n\n\tfunction drawSprite(opt: DrawSpriteOpt) {\n\n\t\tif (!opt.sprite) {\n\t\t\tthrow new Error(\"drawSprite() requires property \\\"sprite\\\"\")\n\t\t}\n\n\t\t// TODO: slow\n\t\tconst spr = resolveSprite(opt.sprite)\n\n\t\tif (!spr || !spr.data) {\n\t\t\treturn\n\t\t}\n\n\t\tconst q = spr.data.frames[opt.frame ?? 0]\n\n\t\tif (!q) {\n\t\t\tthrow new Error(`Frame not found: ${opt.frame ?? 0}`)\n\t\t}\n\n\t\tdrawTexture(Object.assign({}, opt, {\n\t\t\ttex: spr.data.tex,\n\t\t\tquad: q.scale(opt.quad ?? new Quad(0, 0, 1, 1)),\n\t\t}))\n\n\t}\n\n\t// generate vertices to form an arc\n\tfunction getArcPts(\n\t\tpos: Vec2,\n\t\tradiusX: number,\n\t\tradiusY: number,\n\t\tstart: number,\n\t\tend: number,\n\t\tres: number = 1,\n\t): Vec2[] {\n\n\t\t// normalize and turn start and end angles to radians\n\t\tstart = deg2rad(start % 360)\n\t\tend = deg2rad(end % 360)\n\t\tif (end <= start) end += Math.PI * 2\n\n\t\tconst pts = []\n\t\tconst nverts = Math.ceil((end - start) / deg2rad(8) * res)\n\t\tconst step = (end - start) / nverts\n\n\t\t// calculate vertices\n\t\tfor (let a = start; a < end; a += step) {\n\t\t\tpts.push(pos.add(radiusX * Math.cos(a), radiusY * Math.sin(a)))\n\t\t}\n\n\t\tpts.push(pos.add(radiusX * Math.cos(end), radiusY * Math.sin(end)))\n\n\t\treturn pts\n\n\t}\n\n\tfunction drawRect(opt: DrawRectOpt) {\n\n\t\tif (opt.width === undefined || opt.height === undefined) {\n\t\t\tthrow new Error(\"drawRect() requires property \\\"width\\\" and \\\"height\\\".\")\n\t\t}\n\n\t\tif (opt.width <= 0 || opt.height <= 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst w = opt.width\n\t\tconst h = opt.height\n\t\tconst anchor = anchorPt(opt.anchor || DEF_ANCHOR).add(1, 1)\n\t\tconst offset = anchor.scale(new Vec2(w, h).scale(-0.5))\n\n\t\tlet pts = [\n\t\t\tnew Vec2(0, 0),\n\t\t\tnew Vec2(w, 0),\n\t\t\tnew Vec2(w, h),\n\t\t\tnew Vec2(0, h),\n\t\t]\n\n\t\t// TODO: gradient for rounded rect\n\t\t// TODO: drawPolygon should handle generic rounded corners\n\t\tif (opt.radius) {\n\n\t\t\t// maxium radius is half the shortest side\n\t\t\tconst r = Math.min(Math.min(w, h) / 2, opt.radius)\n\n\t\t\tpts = [\n\t\t\t\tnew Vec2(r, 0),\n\t\t\t\tnew Vec2(w - r, 0),\n\t\t\t\t...getArcPts(new Vec2(w - r, r), r, r, 270, 360),\n\t\t\t\tnew Vec2(w, r),\n\t\t\t\tnew Vec2(w, h - r),\n\t\t\t\t...getArcPts(new Vec2(w - r, h - r), r, r, 0, 90),\n\t\t\t\tnew Vec2(w - r, h),\n\t\t\t\tnew Vec2(r, h),\n\t\t\t\t...getArcPts(new Vec2(r, h - r), r, r, 90, 180),\n\t\t\t\tnew Vec2(0, h - r),\n\t\t\t\tnew Vec2(0, r),\n\t\t\t\t...getArcPts(new Vec2(r, r), r, r, 180, 270),\n\t\t\t]\n\n\t\t}\n\n\t\tdrawPolygon(Object.assign({}, opt, {\n\t\t\toffset,\n\t\t\tpts,\n\t\t\t...(opt.gradient ? {\n\t\t\t\tcolors: opt.horizontal ? [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t] : [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t\topt.gradient[1],\n\t\t\t\t],\n\t\t\t} : {}),\n\t\t}))\n\n\t}\n\n\tfunction drawLine(opt: DrawLineOpt) {\n\n\t\tconst { p1, p2 } = opt\n\n\t\tif (!p1 || !p2) {\n\t\t\tthrow new Error(\"drawLine() requires properties \\\"p1\\\" and \\\"p2\\\".\")\n\t\t}\n\n\t\tconst w = opt.width || 1\n\n\t\t// the displacement from the line end point to the corner point\n\t\tconst dis = p2.sub(p1).unit().normal().scale(w * 0.5)\n\n\t\t// calculate the 4 corner points of the line polygon\n\t\tconst verts = [\n\t\t\tp1.sub(dis),\n\t\t\tp1.add(dis),\n\t\t\tp2.add(dis),\n\t\t\tp2.sub(dis),\n\t\t].map((p) => ({\n\t\t\tpos: new Vec2(p.x, p.y),\n\t\t\tuv: new Vec2(0),\n\t\t\tcolor: opt.color ?? Color.WHITE,\n\t\t\topacity: opt.opacity ?? 1,\n\t\t}))\n\n\t\tdrawRaw(verts, [0, 1, 3, 1, 2, 3], opt.fixed, gfx.defTex, opt.shader, opt.uniform)\n\n\t}\n\n\tfunction drawLines(opt: DrawLinesOpt) {\n\n\t\tconst pts = opt.pts\n\n\t\tif (!pts) {\n\t\t\tthrow new Error(\"drawLines() requires property \\\"pts\\\".\")\n\t\t}\n\n\t\tif (pts.length < 2) {\n\t\t\treturn\n\t\t}\n\n\t\tif (opt.radius && pts.length >= 3) {\n\n\t\t\t// TODO: line joines\n\t\t\t// TODO: rounded vertices for arbitury polygonic shape\n\t\t\tlet minSLen = pts[0].sdist(pts[1])\n\n\t\t\tfor (let i = 1; i < pts.length - 1; i++) {\n\t\t\t\tminSLen = Math.min(pts[i].sdist(pts[i + 1]), minSLen)\n\t\t\t}\n\n\t\t\t// eslint-disable-next-line\n\t\t\tconst radius = Math.min(opt.radius, Math.sqrt(minSLen) / 2)\n\n\t\t\tdrawLine(Object.assign({}, opt, { p1: pts[0], p2: pts[1] }))\n\n\t\t\tfor (let i = 1; i < pts.length - 2; i++) {\n\t\t\t\tconst p1 = pts[i]\n\t\t\t\tconst p2 = pts[i + 1]\n\t\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\t\tp1: p1,\n\t\t\t\t\tp2: p2,\n\t\t\t\t}))\n\t\t\t}\n\n\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\tp1: pts[pts.length - 2],\n\t\t\t\tp2: pts[pts.length - 1],\n\t\t\t}))\n\n\t\t} else {\n\n\t\t\tfor (let i = 0; i < pts.length - 1; i++) {\n\t\t\t\tdrawLine(Object.assign({}, opt, {\n\t\t\t\t\tp1: pts[i],\n\t\t\t\t\tp2: pts[i + 1],\n\t\t\t\t}))\n\t\t\t\t// TODO: other line join types\n\t\t\t\tif (opt.join !== \"none\") {\n\t\t\t\t\tdrawCircle(Object.assign({}, opt, {\n\t\t\t\t\t\tpos: pts[i],\n\t\t\t\t\t\tradius: opt.width / 2,\n\t\t\t\t\t}))\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction drawTriangle(opt: DrawTriangleOpt) {\n\t\tif (!opt.p1 || !opt.p2 || !opt.p3) {\n\t\t\tthrow new Error(\"drawPolygon() requires properties \\\"p1\\\", \\\"p2\\\" and \\\"p3\\\".\")\n\t\t}\n\t\treturn drawPolygon(Object.assign({}, opt, {\n\t\t\tpts: [opt.p1, opt.p2, opt.p3],\n\t\t}))\n\t}\n\n\tfunction drawCircle(opt: DrawCircleOpt) {\n\n\t\tif (typeof opt.radius !== \"number\") {\n\t\t\tthrow new Error(\"drawCircle() requires property \\\"radius\\\".\")\n\t\t}\n\n\t\tif (opt.radius === 0) {\n\t\t\treturn\n\t\t}\n\n\t\tdrawEllipse(Object.assign({}, opt, {\n\t\t\tradiusX: opt.radius,\n\t\t\tradiusY: opt.radius,\n\t\t\tangle: 0,\n\t\t}))\n\n\t}\n\n\tfunction drawEllipse(opt: DrawEllipseOpt) {\n\n\t\tif (opt.radiusX === undefined || opt.radiusY === undefined) {\n\t\t\tthrow new Error(\"drawEllipse() requires properties \\\"radiusX\\\" and \\\"radiusY\\\".\")\n\t\t}\n\n\t\tif (opt.radiusX === 0 || opt.radiusY === 0) {\n\t\t\treturn\n\t\t}\n\n\t\tconst start = opt.start ?? 0\n\t\tconst end = opt.end ?? 360\n\t\tconst offset = anchorPt(opt.anchor ?? \"center\").scale(new Vec2(-opt.radiusX, -opt.radiusY))\n\n\t\tconst pts = getArcPts(\n\t\t\toffset,\n\t\t\topt.radiusX,\n\t\t\topt.radiusY,\n\t\t\tstart,\n\t\t\tend,\n\t\t\topt.resolution,\n\t\t)\n\n\t\t// center\n\t\tpts.unshift(offset)\n\n\t\tconst polyOpt = Object.assign({}, opt, {\n\t\t\tpts,\n\t\t\tradius: 0,\n\t\t\t...(opt.gradient ? {\n\t\t\t\tcolors: [\n\t\t\t\t\topt.gradient[0],\n\t\t\t\t\t...Array(pts.length - 1).fill(opt.gradient[1]),\n\t\t\t\t],\n\t\t\t} : {}),\n\t\t})\n\n\t\t// full circle with outline shouldn't have the center point\n\t\tif (end - start >= 360 && opt.outline) {\n\t\t\tif (opt.fill !== false) {\n\t\t\t\tdrawPolygon(Object.assign(polyOpt, {\n\t\t\t\t\toutline: null,\n\t\t\t\t}))\n\t\t\t}\n\t\t\tdrawPolygon(Object.assign(polyOpt, {\n\t\t\t\tpts: pts.slice(1),\n\t\t\t\tfill: false,\n\t\t\t}))\n\t\t\treturn\n\t\t}\n\n\t\tdrawPolygon(polyOpt)\n\n\t}\n\n\tfunction drawPolygon(opt: DrawPolygonOpt) {\n\n\t\tif (!opt.pts) {\n\t\t\tthrow new Error(\"drawPolygon() requires property \\\"pts\\\".\")\n\t\t}\n\n\t\tconst npts = opt.pts.length\n\n\t\tif (npts < 3) {\n\t\t\treturn\n\t\t}\n\n\t\tpushTransform()\n\t\tpushTranslate(opt.pos)\n\t\tpushScale(opt.scale)\n\t\tpushRotate(opt.angle)\n\t\tpushTranslate(opt.offset)\n\n\t\tif (opt.fill !== false) {\n\n\t\t\tconst color = opt.color ?? Color.WHITE\n\n\t\t\tconst verts = opt.pts.map((pt, i) => ({\n\t\t\t\tpos: new Vec2(pt.x, pt.y),\n\t\t\t\tuv: new Vec2(0, 0),\n\t\t\t\tcolor: opt.colors ? (opt.colors[i] ?? color) : color,\n\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t}))\n\n\t\t\t// TODO: better triangulation\n\t\t\tconst indices = [...Array(npts - 2).keys()]\n\t\t\t\t.map((n) => [0, n + 1, n + 2])\n\t\t\t\t.flat()\n\n\t\t\tdrawRaw(verts, opt.indices ?? indices, opt.fixed, gfx.defTex, opt.shader, opt.uniform)\n\n\t\t}\n\n\t\tif (opt.outline) {\n\t\t\tdrawLines({\n\t\t\t\tpts: [ ...opt.pts, opt.pts[0] ],\n\t\t\t\tradius: opt.radius,\n\t\t\t\twidth: opt.outline.width,\n\t\t\t\tcolor: opt.outline.color,\n\t\t\t\tjoin: opt.outline.join,\n\t\t\t\tuniform: opt.uniform,\n\t\t\t\tfixed: opt.fixed,\n\t\t\t\topacity: opt.opacity,\n\t\t\t})\n\t\t}\n\n\t\tpopTransform()\n\n\t}\n\n\tfunction drawStenciled(content: () => void, mask: () => void, test: number) {\n\n\t\tflush()\n\t\tgl.clear(gl.STENCIL_BUFFER_BIT)\n\t\tgl.enable(gl.STENCIL_TEST)\n\n\t\t// don't perform test, pure write\n\t\tgl.stencilFunc(\n\t\t\tgl.NEVER,\n\t\t\t1,\n\t\t\t0xFF,\n\t\t)\n\n\t\t// always replace since we're writing to the buffer\n\t\tgl.stencilOp(\n\t\t\tgl.REPLACE,\n\t\t\tgl.REPLACE,\n\t\t\tgl.REPLACE,\n\t\t)\n\n\t\tmask()\n\t\tflush()\n\n\t\t// perform test\n\t\tgl.stencilFunc(\n\t\t\ttest,\n\t\t\t1,\n\t\t\t0xFF,\n\t\t)\n\n\t\t// don't write since we're only testing\n\t\tgl.stencilOp(\n\t\t\tgl.KEEP,\n\t\t\tgl.KEEP,\n\t\t\tgl.KEEP,\n\t\t)\n\n\t\tcontent()\n\t\tflush()\n\t\tgl.disable(gl.STENCIL_TEST)\n\n\t}\n\n\tfunction drawMasked(content: () => void, mask: () => void) {\n\t\tdrawStenciled(content, mask, gl.EQUAL)\n\t}\n\n\tfunction drawSubtracted(content: () => void, mask: () => void) {\n\t\tdrawStenciled(content, mask, gl.NOTEQUAL)\n\t}\n\n\tfunction getViewportScale() {\n\t\treturn (gfx.viewport.width + gfx.viewport.height) / (gfx.width + gfx.height)\n\t}\n\n\tfunction drawUnscaled(content: () => void) {\n\t\tflush()\n\t\tconst ow = gfx.width\n\t\tconst oh = gfx.height\n\t\tgfx.width = gfx.viewport.width\n\t\tgfx.height = gfx.viewport.height\n\t\tcontent()\n\t\tflush()\n\t\tgfx.width = ow\n\t\tgfx.height = oh\n\t}\n\n\tfunction applyCharTransform(fchar: FormattedChar, tr: CharTransform) {\n\t\tif (tr.pos) fchar.pos = fchar.pos.add(tr.pos)\n\t\tif (tr.scale) fchar.scale = fchar.scale.scale(vec2(tr.scale))\n\t\tif (tr.angle) fchar.angle += tr.angle\n\t\tif (tr.color) fchar.color = fchar.color.mult(tr.color)\n\t\tif (tr.opacity) fchar.opacity *= tr.opacity\n\t}\n\n\t// TODO: escape\n\t// eslint-disable-next-line\n\tconst TEXT_STYLE_RE = /\\[(?<style>\\w+)\\](?<text>.*?)\\[\\/\\k<style>\\]/g\n\n\t// TODO: handle nested\n\tfunction compileStyledText(text: string): {\n\t\tcharStyleMap: Record<number, string[]>,\n\t\ttext: string,\n\t} {\n\n\t\tconst charStyleMap = {}\n\t\t// get the text without the styling syntax\n\t\tconst renderText = text.replace(TEXT_STYLE_RE, \"$2\")\n\t\tlet idxOffset = 0\n\n\t\t// put each styled char index into a map for easy access when iterating each char\n\t\tfor (const match of text.matchAll(TEXT_STYLE_RE)) {\n\t\t\tconst origIdx = match.index - idxOffset\n\t\t\tfor (let i = 0; i < match.groups.text.length; i++) {\n\t\t\t\tcharStyleMap[i + origIdx] = [match.groups.style]\n\t\t\t}\n\t\t\t// omit the style syntax in format string when calculating index\n\t\t\tidxOffset += match[0].length - match.groups.text.length\n\t\t}\n\n\t\treturn {\n\t\t\tcharStyleMap: charStyleMap,\n\t\t\ttext: renderText,\n\t\t}\n\n\t}\n\n\ttype FontAtlas = {\n\t\tfont: BitmapFontData,\n\t\tcursor: Vec2,\n\t\toutline: number,\n\t}\n\n\tconst fontAtlases: Record<string, FontAtlas> = {}\n\n\t// TODO: cache formatted text\n\t// format text and return a list of chars with their calculated position\n\tfunction formatText(opt: DrawTextOpt): FormattedText {\n\n\t\tif (opt.text === undefined) {\n\t\t\tthrow new Error(\"formatText() requires property \\\"text\\\".\")\n\t\t}\n\n\t\tlet font = resolveFont(opt.font)\n\n\t\t// if it's still loading\n\t\tif (opt.text === \"\" || font instanceof Asset || !font) {\n\t\t\treturn {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0,\n\t\t\t\tchars: [],\n\t\t\t\topt: opt,\n\t\t\t}\n\t\t}\n\n\t\tconst { charStyleMap, text } = compileStyledText(opt.text + \"\")\n\t\tconst chars = text.split(\"\")\n\n\t\t// if it's not bitmap font, we draw it with 2d canvas or use cached image\n\t\tif (font instanceof FontData || typeof font === \"string\") {\n\n\t\t\tconst fontName = font instanceof FontData ? font.fontface.family : font\n\t\t\tconst opts: LoadFontOpt = font instanceof FontData ? {\n\t\t\t\toutline: font.outline,\n\t\t\t\tfilter: font.filter,\n\t\t\t} : {\n\t\t\t\toutline: 0,\n\t\t\t\tfilter: DEF_FONT_FILTER,\n\t\t\t}\n\n\t\t\t// TODO: customizable font tex filter\n\t\t\tconst atlas: FontAtlas = fontAtlases[fontName] ?? {\n\t\t\t\tfont: {\n\t\t\t\t\ttex: new Texture(FONT_ATLAS_WIDTH, FONT_ATLAS_HEIGHT, {\n\t\t\t\t\t\tfilter: opts.filter,\n\t\t\t\t\t}),\n\t\t\t\t\tmap: {},\n\t\t\t\t\tsize: DEF_TEXT_CACHE_SIZE,\n\t\t\t\t},\n\t\t\t\tcursor: new Vec2(0),\n\t\t\t\toutline: opts.outline,\n\t\t\t}\n\n\t\t\tif (!fontAtlases[fontName]) {\n\t\t\t\tfontAtlases[fontName] = atlas\n\t\t\t}\n\n\t\t\tfont = atlas.font\n\n\t\t\tfor (const ch of chars) {\n\n\t\t\t\tif (!atlas.font.map[ch]) {\n\n\t\t\t\t\t// TODO: use assets.packer to pack font texture\n\t\t\t\t\tconst c2d = fontCacheCtx\n\t\t\t\t\tc2d.clearRect(0, 0, fontCacheCanvas.width, fontCacheCanvas.height)\n\t\t\t\t\tc2d.font = `${font.size}px ${fontName}`\n\t\t\t\t\tc2d.textBaseline = \"top\"\n\t\t\t\t\tc2d.textAlign = \"left\"\n\t\t\t\t\tc2d.fillStyle = \"#ffffff\"\n\t\t\t\t\tconst m = c2d.measureText(ch)\n\t\t\t\t\tlet w = Math.ceil(m.width)\n\t\t\t\t\tlet h = font.size\n\t\t\t\t\tif (atlas.outline) {\n\t\t\t\t\t\tc2d.lineJoin = \"round\"\n\t\t\t\t\t\tc2d.lineWidth = atlas.outline * 2\n\t\t\t\t\t\tc2d.strokeStyle = \"#000000\"\n\t\t\t\t\t\tc2d.strokeText(ch, atlas.outline, atlas.outline)\n\t\t\t\t\t\tw += atlas.outline * 2\n\t\t\t\t\t\th += atlas.outline * 3\n\t\t\t\t\t}\n\t\t\t\t\tc2d.fillText(ch, atlas.outline, atlas.outline)\n\n\t\t\t\t\tconst img = c2d.getImageData(0, 0, w, h)\n\n\t\t\t\t\t// if we are about to exceed the X axis of the texture, go to another line\n\t\t\t\t\tif (atlas.cursor.x + w > FONT_ATLAS_WIDTH) {\n\t\t\t\t\t\tatlas.cursor.x = 0\n\t\t\t\t\t\tatlas.cursor.y += h\n\t\t\t\t\t\tif (atlas.cursor.y > FONT_ATLAS_HEIGHT) {\n\t\t\t\t\t\t\t// TODO: create another atlas\n\t\t\t\t\t\t\tthrow new Error(\"Font atlas exceeds character limit\")\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfont.tex.update(img, atlas.cursor.x, atlas.cursor.y)\n\t\t\t\t\tfont.map[ch] = new Quad(atlas.cursor.x, atlas.cursor.y, w, h)\n\t\t\t\t\tatlas.cursor.x += w\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst size = opt.size || font.size\n\t\tconst scale = vec2(opt.scale ?? 1).scale(size / font.size)\n\t\tconst lineSpacing = opt.lineSpacing ?? 0\n\t\tconst letterSpacing = opt.letterSpacing ?? 0\n\t\tlet curX = 0\n\t\tlet tw = 0\n\t\tlet th = 0\n\t\tconst lines: Array<{\n\t\t\twidth: number,\n\t\t\tchars: FormattedChar[],\n\t\t}> = []\n\t\tlet curLine: FormattedChar[] = []\n\t\tlet cursor = 0\n\t\tlet lastSpace = null\n\t\tlet lastSpaceWidth = null\n\n\t\t// TODO: word break\n\t\twhile (cursor < chars.length) {\n\n\t\t\tlet ch = chars[cursor]\n\n\t\t\t// always new line on '\\n'\n\t\t\tif (ch === \"\\n\") {\n\n\t\t\t\tth += size + lineSpacing\n\n\t\t\t\tlines.push({\n\t\t\t\t\twidth: curX - letterSpacing,\n\t\t\t\t\tchars: curLine,\n\t\t\t\t})\n\n\t\t\t\tlastSpace = null\n\t\t\t\tlastSpaceWidth = null\n\t\t\t\tcurX = 0\n\t\t\t\tcurLine = []\n\n\t\t\t} else {\n\n\t\t\t\tlet q = font.map[ch]\n\n\t\t\t\t// TODO: leave space if character not found?\n\t\t\t\tif (q) {\n\n\t\t\t\t\tlet gw = q.w * scale.x\n\n\t\t\t\t\tif (opt.width && curX + gw > opt.width) {\n\t\t\t\t\t\t// new line on last word if width exceeds\n\t\t\t\t\t\tth += size + lineSpacing\n\t\t\t\t\t\tif (lastSpace != null) {\n\t\t\t\t\t\t\tcursor -= curLine.length - lastSpace\n\t\t\t\t\t\t\tch = chars[cursor]\n\t\t\t\t\t\t\tq = font.map[ch]\n\t\t\t\t\t\t\tgw = q.w * scale.x\n\t\t\t\t\t\t\t// omit trailing space\n\t\t\t\t\t\t\tcurLine = curLine.slice(0, lastSpace - 1)\n\t\t\t\t\t\t\tcurX = lastSpaceWidth\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSpace = null\n\t\t\t\t\t\tlastSpaceWidth = null\n\t\t\t\t\t\tlines.push({\n\t\t\t\t\t\t\twidth: curX - letterSpacing,\n\t\t\t\t\t\t\tchars: curLine,\n\t\t\t\t\t\t})\n\t\t\t\t\t\tcurX = 0\n\t\t\t\t\t\tcurLine = []\n\t\t\t\t\t}\n\n\t\t\t\t\t// push char\n\t\t\t\t\tcurLine.push({\n\t\t\t\t\t\ttex: font.tex,\n\t\t\t\t\t\twidth: q.w,\n\t\t\t\t\t\theight: q.h,\n\t\t\t\t\t\t// without some padding there'll be visual artifacts on edges\n\t\t\t\t\t\tquad: new Quad(\n\t\t\t\t\t\t\tq.x / font.tex.width,\n\t\t\t\t\t\t\tq.y / font.tex.height,\n\t\t\t\t\t\t\tq.w / font.tex.width,\n\t\t\t\t\t\t\tq.h / font.tex.height,\n\t\t\t\t\t\t),\n\t\t\t\t\t\tch: ch,\n\t\t\t\t\t\tpos: new Vec2(curX, th),\n\t\t\t\t\t\topacity: opt.opacity ?? 1,\n\t\t\t\t\t\tcolor: opt.color ?? Color.WHITE,\n\t\t\t\t\t\tscale: vec2(scale),\n\t\t\t\t\t\tangle: 0,\n\t\t\t\t\t})\n\n\t\t\t\t\tif (ch === \" \") {\n\t\t\t\t\t\tlastSpace = curLine.length\n\t\t\t\t\t\tlastSpaceWidth = curX\n\t\t\t\t\t}\n\n\t\t\t\t\tcurX += gw\n\t\t\t\t\ttw = Math.max(tw, curX)\n\t\t\t\t\tcurX += letterSpacing\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcursor++\n\n\t\t}\n\n\t\tlines.push({\n\t\t\twidth: curX - letterSpacing,\n\t\t\tchars: curLine,\n\t\t})\n\n\t\tth += size\n\n\t\tif (opt.width) {\n\t\t\ttw = opt.width\n\t\t}\n\n\t\tconst fchars: FormattedChar[] = []\n\n\t\tfor (const line of lines) {\n\n\t\t\tconst ox = (tw - line.width) * alignPt(opt.align ?? \"left\")\n\n\t\t\tfor (const fchar of line.chars) {\n\n\t\t\t\tconst q = font.map[fchar.ch]\n\t\t\t\tconst idx = fchars.length\n\n\t\t\t\tfchar.pos = fchar.pos.add(ox, 0).add(\n\t\t\t\t\tq.w * scale.x * 0.5,\n\t\t\t\t\tq.h * scale.y * 0.5,\n\t\t\t\t)\n\n\t\t\t\tif (opt.transform) {\n\t\t\t\t\tconst tr = typeof opt.transform === \"function\"\n\t\t\t\t\t\t? opt.transform(idx, fchar.ch)\n\t\t\t\t\t\t: opt.transform\n\t\t\t\t\tif (tr) {\n\t\t\t\t\t\tapplyCharTransform(fchar, tr)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (charStyleMap[idx]) {\n\t\t\t\t\tconst styles = charStyleMap[idx]\n\t\t\t\t\tfor (const name of styles) {\n\t\t\t\t\t\tconst style = opt.styles[name]\n\t\t\t\t\t\tconst tr = typeof style === \"function\"\n\t\t\t\t\t\t\t? style(idx, fchar.ch)\n\t\t\t\t\t\t\t: style\n\t\t\t\t\t\tif (tr) {\n\t\t\t\t\t\t\tapplyCharTransform(fchar, tr)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfchars.push(fchar)\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: tw,\n\t\t\theight: th,\n\t\t\tchars: fchars,\n\t\t\topt: opt,\n\t\t}\n\n\t}\n\n\tfunction drawText(opt: DrawTextOpt) {\n\t\tdrawFormattedText(formatText(opt))\n\t}\n\n\tfunction drawFormattedText(ftext: FormattedText) {\n\t\tpushTransform()\n\t\tpushTranslate(ftext.opt.pos)\n\t\tpushRotate(ftext.opt.angle)\n\t\tpushTranslate(anchorPt(ftext.opt.anchor ?? \"topleft\").add(1, 1).scale(ftext.width, ftext.height).scale(-0.5))\n\t\tftext.chars.forEach((ch) => {\n\t\t\tdrawUVQuad({\n\t\t\t\ttex: ch.tex,\n\t\t\t\twidth: ch.width,\n\t\t\t\theight: ch.height,\n\t\t\t\tpos: ch.pos,\n\t\t\t\tscale: ch.scale,\n\t\t\t\tangle: ch.angle,\n\t\t\t\tcolor: ch.color,\n\t\t\t\topacity: ch.opacity,\n\t\t\t\tquad: ch.quad,\n\t\t\t\tanchor: \"center\",\n\t\t\t\tuniform: ftext.opt.uniform,\n\t\t\t\tshader: ftext.opt.shader,\n\t\t\t\tfixed: ftext.opt.fixed,\n\t\t\t})\n\t\t})\n\t\tpopTransform()\n\t}\n\n\t// get game width\n\tfunction width(): number {\n\t\treturn gfx.width\n\t}\n\n\t// get game height\n\tfunction height(): number {\n\t\treturn gfx.height\n\t}\n\n\tconst winEvents: EventList<WindowEventMap> = {}\n\n\t// transform a point from window space to content space\n\tfunction windowToContent(pt: Vec2) {\n\t\treturn new Vec2(\n\t\t\t(pt.x - gfx.viewport.x) * width() / gfx.viewport.width,\n\t\t\t(pt.y - gfx.viewport.y) * height() / gfx.viewport.height,\n\t\t)\n\t}\n\n\t// transform a point from content space to view space\n\tfunction contentToView(pt: Vec2) {\n\t\treturn new Vec2(\n\t\t\tpt.x * gfx.viewport.width / gfx.width,\n\t\t\tpt.y * gfx.viewport.height / gfx.height,\n\t\t)\n\t}\n\n\tfunction mousePos() {\n\t\treturn windowToContent(app.mousePos())\n\t}\n\n\twinEvents.error = (e) => {\n\t\tif (e.error) {\n\t\t\thandleErr(e.error)\n\t\t} else {\n\t\t\t// ignore errors from somewhere else, e.g. iframes\n\t\t\tif (e.message === \"Script error.\") return\n\n\t\t\thandleErr(new Error(e.message))\n\t\t}\n\t}\n\n\twinEvents.unhandledrejection = (e) => handleErr(e.reason)\n\n\tfor (const name in winEvents) {\n\t\twindow.addEventListener(name, winEvents[name])\n\t}\n\n\tconst debug: Debug = {\n\t\tinspect: false,\n\t\ttimeScale: 1,\n\t\tshowLog: true,\n\t\tfps: () => app.fps(),\n\t\tnumFrames: () => app.numFrames(),\n\t\tstepFrame: updateFrame,\n\t\tdrawCalls: () => gfx.drawCalls,\n\t\tclearLog: () => game.logs = [],\n\t\tlog: (msg) => {\n\t\t\tconst max = gopt.logMax ?? LOG_MAX\n\t\t\tconst style = msg instanceof Error ? \"error\" : \"info\"\n\t\t\tgame.logs.unshift(`${`[time]${app.time().toFixed(2)}[/time] `}[${style}]${msg?.toString ? msg.toString() : msg}[/${style}]`)\n\t\t\tif (game.logs.length > max) {\n\t\t\t\tgame.logs = game.logs.slice(0, max)\n\t\t\t}\n\t\t},\n\t\terror: (msg) => debug.log(new Error(msg.toString ? msg.toString() : msg as string)),\n\t\tcurRecording: null,\n\t\tget paused() {\n\t\t\treturn app.paused\n\t\t},\n\t\tset paused(v) {\n\t\t\tapp.paused = v\n\t\t\tif (v) {\n\t\t\t\taudio.ctx.suspend()\n\t\t\t} else {\n\t\t\t\taudio.ctx.resume()\n\t\t\t}\n\t\t},\n\t}\n\n\tfunction dt() {\n\t\treturn app.dt()\n\t}\n\n\tfunction camPos(...pos: Vec2Args): Vec2 {\n\t\tif (pos.length > 0) {\n\t\t\tgame.cam.pos = vec2(...pos)\n\t\t}\n\t\treturn game.cam.pos ? game.cam.pos.clone() : center()\n\t}\n\n\tfunction camScale(...scale: Vec2Args): Vec2 {\n\t\tif (scale.length > 0) {\n\t\t\tgame.cam.scale = vec2(...scale)\n\t\t}\n\t\treturn game.cam.scale.clone()\n\t}\n\n\tfunction camRot(angle: number): number {\n\t\tif (angle !== undefined) {\n\t\t\tgame.cam.angle = angle\n\t\t}\n\t\treturn game.cam.angle\n\t}\n\n\tfunction shake(intensity: number = 12) {\n\t\tgame.cam.shake += intensity\n\t}\n\n\tfunction toScreen(p: Vec2): Vec2 {\n\t\treturn game.cam.transform.multVec2(p)\n\t}\n\n\tfunction toWorld(p: Vec2): Vec2 {\n\t\treturn game.cam.transform.invert().multVec2(p)\n\t}\n\n\tfunction calcTransform(obj: GameObj): Mat4 {\n\t\tconst tr = new Mat4()\n\t\tif (obj.pos) tr.translate(obj.pos)\n\t\tif (obj.scale) tr.scale(obj.scale)\n\t\tif (obj.angle) tr.rotate(obj.angle)\n\t\treturn obj.parent ? tr.mult(obj.parent.transform) : tr\n\t}\n\n\tfunction make<T>(comps: CompList<T>): GameObj<T> {\n\n\t\tconst compStates = new Map()\n\t\tconst cleanups = {}\n\t\tconst events = new EventHandler()\n\t\tlet onCurCompCleanup = null\n\n\t\t// TODO: \"this\" should be typed here\n\t\tconst obj = {\n\n\t\t\tid: uid(),\n\t\t\t// TODO: a nice way to hide / pause when add()-ing\n\t\t\thidden: false,\n\t\t\tpaused: false,\n\t\t\ttransform: new Mat4(),\n\t\t\tchildren: [],\n\t\t\tparent: null,\n\n\t\t\tadd<T2>(a: CompList<T2> | GameObj<T2>): GameObj<T2> {\n\t\t\t\tconst obj = (() => {\n\t\t\t\t\tif (Array.isArray(a)) {\n\t\t\t\t\t\treturn make(a)\n\t\t\t\t\t}\n\t\t\t\t\tif (a.parent) {\n\t\t\t\t\t\tthrow new Error(\"Cannot add a game obj that already has a parent.\")\n\t\t\t\t\t}\n\t\t\t\t\treturn a\n\t\t\t\t})()\n\t\t\t\tobj.parent = this\n\t\t\t\tobj.transform = calcTransform(obj)\n\t\t\t\tthis.children.push(obj)\n\t\t\t\tobj.trigger(\"add\", obj)\n\t\t\t\tgame.events.trigger(\"add\", obj)\n\t\t\t\treturn obj\n\t\t\t},\n\n\t\t\treadd(obj: GameObj): GameObj {\n\t\t\t\tconst idx = this.children.indexOf(obj)\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tthis.children.splice(idx, 1)\n\t\t\t\t\tthis.children.push(obj)\n\t\t\t\t}\n\t\t\t\treturn obj\n\t\t\t},\n\n\t\t\tremove(obj: GameObj): void {\n\t\t\t\tconst idx = this.children.indexOf(obj)\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tobj.parent = null\n\t\t\t\t\tthis.children.splice(idx, 1)\n\t\t\t\t\tconst trigger = (o) => {\n\t\t\t\t\t\to.trigger(\"destroy\")\n\t\t\t\t\t\tgame.events.trigger(\"destroy\", o)\n\t\t\t\t\t\to.children.forEach((child) => trigger(child))\n\t\t\t\t\t}\n\t\t\t\t\ttrigger(obj)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tremoveAll(tag?: Tag) {\n\t\t\t\tif (tag) {\n\t\t\t\t\tthis.get(tag).forEach((obj) => this.remove(obj))\n\t\t\t\t} else {\n\t\t\t\t\tfor (const child of [...this.children]) this.remove(child)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\tif (this.paused) return\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.update())\n\t\t\t\tthis.trigger(\"update\")\n\t\t\t},\n\n\t\t\tdraw(this: GameObj<PosComp | ScaleComp | RotateComp>) {\n\t\t\t\tif (this.hidden) return\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(this.pos)\n\t\t\t\tpushScale(this.scale)\n\t\t\t\tpushRotate(this.angle)\n\t\t\t\t// TODO: automatically don't draw if offscreen\n\t\t\t\tthis.trigger(\"draw\")\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.draw())\n\t\t\t\tpopTransform()\n\t\t\t},\n\n\t\t\tdrawInspect(this: GameObj<PosComp | ScaleComp | RotateComp>) {\n\t\t\t\tif (this.hidden) return\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(this.pos)\n\t\t\t\tpushScale(this.scale)\n\t\t\t\tpushRotate(this.angle)\n\t\t\t\tthis.children\n\t\t\t\t\t.sort((o1, o2) => (o1.z ?? 0) - (o2.z ?? 0))\n\t\t\t\t\t.forEach((child) => child.drawInspect())\n\t\t\t\tthis.trigger(\"drawInspect\")\n\t\t\t\tpopTransform()\n\t\t\t},\n\n\t\t\t// use a comp, or tag\n\t\t\tuse(comp: Comp | Tag) {\n\n\t\t\t\tif (!comp) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\t// tag\n\t\t\t\tif (typeof comp === \"string\") {\n\t\t\t\t\treturn this.use({\n\t\t\t\t\t\tid: comp,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tlet gc = []\n\n\t\t\t\t// clear if overwrite\n\t\t\t\tif (comp.id) {\n\t\t\t\t\tthis.unuse(comp.id)\n\t\t\t\t\tcleanups[comp.id] = []\n\t\t\t\t\tgc = cleanups[comp.id]\n\t\t\t\t\tcompStates.set(comp.id, comp)\n\t\t\t\t}\n\n\t\t\t\tfor (const k in comp) {\n\n\t\t\t\t\tif (COMP_DESC.has(k)) {\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\n\t\t\t\t\tconst prop = Object.getOwnPropertyDescriptor(comp, k)\n\n\t\t\t\t\tif (typeof prop.value === \"function\") {\n\t\t\t\t\t\tcomp[k] = comp[k].bind(this)\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prop.set) {\n\t\t\t\t\t\tObject.defineProperty(comp, k, {\n\t\t\t\t\t\t\tset: prop.set.bind(this),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (prop.get) {\n\t\t\t\t\t\tObject.defineProperty(comp, k, {\n\t\t\t\t\t\t\tget: prop.get.bind(this),\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tif (COMP_EVENTS.has(k)) {\n\t\t\t\t\t\t// automatically clean up events created by components in add() stage\n\t\t\t\t\t\tconst func = k === \"add\" ? () => {\n\t\t\t\t\t\t\tonCurCompCleanup = (c) => gc.push(c)\n\t\t\t\t\t\t\tcomp[k]()\n\t\t\t\t\t\t\tonCurCompCleanup = null\n\t\t\t\t\t\t} : comp[k]\n\t\t\t\t\t\tgc.push(this.on(k, func).cancel)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this[k] === undefined) {\n\t\t\t\t\t\t\t// assign comp fields to game obj\n\t\t\t\t\t\t\tObject.defineProperty(this, k, {\n\t\t\t\t\t\t\t\tget: () => comp[k],\n\t\t\t\t\t\t\t\tset: (val) => comp[k] = val,\n\t\t\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tgc.push(() => delete this[k])\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(`Duplicate component property: \"${k}\"`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// check for component dependencies\n\t\t\t\tconst checkDeps = () => {\n\t\t\t\t\tif (!comp.require) return\n\t\t\t\t\tfor (const dep of comp.require) {\n\t\t\t\t\t\tif (!this.c(dep)) {\n\t\t\t\t\t\t\tthrow new Error(`Component \"${comp.id}\" requires component \"${dep}\"`)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (comp.destroy) {\n\t\t\t\t\tgc.push(comp.destroy.bind(this))\n\t\t\t\t}\n\n\t\t\t\t// manually trigger add event if object already exist\n\t\t\t\tif (this.exists()) {\n\t\t\t\t\tcheckDeps()\n\t\t\t\t\tif (comp.add) {\n\t\t\t\t\t\tonCurCompCleanup = (c) => gc.push(c)\n\t\t\t\t\t\tcomp.add.call(this)\n\t\t\t\t\t\tonCurCompCleanup = null\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (comp.require) {\n\t\t\t\t\t\tgc.push(this.on(\"add\", checkDeps).cancel)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tunuse(id: Tag) {\n\t\t\t\tif (cleanups[id]) {\n\t\t\t\t\tcleanups[id].forEach((e) => e())\n\t\t\t\t\tdelete cleanups[id]\n\t\t\t\t}\n\t\t\t\tif (compStates.has(id)) {\n\t\t\t\t\tcompStates.delete(id)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tc(id: Tag): Comp {\n\t\t\t\treturn compStates.get(id)\n\t\t\t},\n\n\t\t\tget(t: Tag | Tag[], opts: GetOpt = {}): GameObj[] {\n\t\t\t\tlet list: GameObj[] = opts.recursive\n\t\t\t\t\t? this.children.flatMap(function recurse(child) {\n\t\t\t\t\t\treturn [child, ...child.children.flatMap(recurse)]\n\t\t\t\t\t})\n\t\t\t\t\t: this.children\n\t\t\t\tlist = list.filter((child) => t ? child.is(t) : true)\n\t\t\t\tif (opts.liveUpdate) {\n\t\t\t\t\tconst isChild = (obj) => {\n\t\t\t\t\t\treturn opts.recursive\n\t\t\t\t\t\t\t? this.isAncestorOf(obj)\n\t\t\t\t\t\t\t: obj.parent === this\n\t\t\t\t\t}\n\t\t\t\t\t// TODO: handle when object add / remove tags\n\t\t\t\t\t// TODO: a way to cancel the events?\n\t\t\t\t\tonAdd((obj) => {\n\t\t\t\t\t\tif (isChild(obj) && obj.is(t)) {\n\t\t\t\t\t\t\tlist.push(obj)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tonDestroy((obj) => {\n\t\t\t\t\t\tif (isChild(obj) && obj.is(t)) {\n\t\t\t\t\t\t\tconst idx = list.findIndex((o) => o.id === obj.id)\n\t\t\t\t\t\t\tif (idx !== -1) {\n\t\t\t\t\t\t\t\tlist.splice(idx, 1)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\treturn list\n\t\t\t},\n\n\t\t\tisAncestorOf(obj: GameObj) {\n\t\t\t\tif (!obj.parent) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t\treturn obj.parent === this || this.isAncestorOf(obj.parent)\n\t\t\t},\n\n\t\t\texists(): boolean {\n\t\t\t\treturn game.root.isAncestorOf(this)\n\t\t\t},\n\n\t\t\tis(tag: Tag | Tag[]): boolean {\n\t\t\t\tif (tag === \"*\") {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t\tif (Array.isArray(tag)) {\n\t\t\t\t\tfor (const t of tag) {\n\t\t\t\t\t\tif (!this.c(t)) {\n\t\t\t\t\t\t\treturn false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn true\n\t\t\t\t} else {\n\t\t\t\t\treturn this.c(tag) != null\n\t\t\t\t}\n\t\t\t},\n\n\t\t\ton(name: string, action: (...args) => void): EventController {\n\t\t\t\tconst ctrl = events.on(name, action.bind(this))\n\t\t\t\tif (onCurCompCleanup) {\n\t\t\t\t\tonCurCompCleanup(() => ctrl.cancel())\n\t\t\t\t}\n\t\t\t\treturn ctrl\n\t\t\t},\n\n\t\t\ttrigger(name: string, ...args): void {\n\t\t\t\tevents.trigger(name, ...args)\n\t\t\t\tgame.objEvents.trigger(name, this, ...args)\n\t\t\t},\n\n\t\t\tdestroy() {\n\t\t\t\tif (this.parent) {\n\t\t\t\t\tthis.parent.remove(this)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\tconst info = {}\n\t\t\t\tfor (const [tag, comp] of compStates) {\n\t\t\t\t\tinfo[tag] = comp.inspect ? comp.inspect() : null\n\t\t\t\t}\n\t\t\t\treturn info\n\t\t\t},\n\n\t\t\tonAdd(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"add\", cb)\n\t\t\t},\n\n\t\t\tonUpdate(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"update\", cb)\n\t\t\t},\n\n\t\t\tonDraw(cb: () => void): EventController {\n\t\t\t\treturn this.on(\"draw\", cb)\n\t\t\t},\n\n\t\t\tonDestroy(action: () => void): EventController {\n\t\t\t\treturn this.on(\"destroy\", action)\n\t\t\t},\n\n\t\t\tclearEvents() {\n\t\t\t\tevents.clear()\n\t\t\t},\n\n\t\t}\n\n\t\tfor (const comp of comps) {\n\t\t\tobj.use(comp)\n\t\t}\n\n\t\treturn obj as unknown as GameObj<T>\n\n\t}\n\n\t// add an event to a tag\n\tfunction on(event: string, tag: Tag, cb: (obj: GameObj, ...args) => void): EventController {\n\t\tif (!game.objEvents[event]) {\n\t\t\tgame.objEvents[event] = new IDList()\n\t\t}\n\t\treturn game.objEvents.on(event, (obj, ...args) => {\n\t\t\tif (obj.is(tag)) {\n\t\t\t\tcb(obj, ...args)\n\t\t\t}\n\t\t})\n\t}\n\n\t// add update event to a tag or global update\n\tconst onUpdate = ((tag: Tag | (() => void), action?: (obj: GameObj) => void) => {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\tconst obj = add([{ update: tag }])\n\t\t\treturn {\n\t\t\t\tget paused() {\n\t\t\t\t\treturn obj.paused\n\t\t\t\t},\n\t\t\t\tset paused(p) {\n\t\t\t\t\tobj.paused = p\n\t\t\t\t},\n\t\t\t\tcancel: () => obj.destroy(),\n\t\t\t}\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"update\", tag, action)\n\t\t}\n\t}) as KaboomCtx[\"onUpdate\"]\n\n\t// add draw event to a tag or global draw\n\tconst onDraw = ((tag: Tag | (() => void), action?: (obj: GameObj) => void) => {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\tconst obj = add([{ draw: tag }])\n\t\t\treturn {\n\t\t\t\tget paused() {\n\t\t\t\t\treturn obj.hidden\n\t\t\t\t},\n\t\t\t\tset paused(p) {\n\t\t\t\t\tobj.hidden = p\n\t\t\t\t},\n\t\t\t\tcancel: () => obj.destroy(),\n\t\t\t}\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"draw\", tag, action)\n\t\t}\n\t}) as KaboomCtx[\"onDraw\"]\n\n\tfunction onAdd(tag: Tag | ((obj: GameObj) => void), action?: (obj: GameObj) => void) {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\treturn game.events.on(\"add\", tag)\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"add\", tag, action)\n\t\t}\n\t}\n\n\tfunction onDestroy(tag: Tag | ((obj: GameObj) => void), action?: (obj: GameObj) => void) {\n\t\tif (typeof tag === \"function\" && action === undefined) {\n\t\t\treturn game.events.on(\"destroy\", tag)\n\t\t} else if (typeof tag === \"string\") {\n\t\t\treturn on(\"destroy\", tag, action)\n\t\t}\n\t}\n\n\t// add an event that runs with objs with t1 collides with objs with t2\n\tfunction onCollide(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collide\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction onCollideUpdate(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collideUpdate\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction onCollideEnd(\n\t\tt1: Tag,\n\t\tt2: Tag,\n\t\tf: (a: GameObj, b: GameObj, col?: Collision) => void,\n\t): EventController {\n\t\treturn on(\"collideEnd\", t1, (a, b, col) => b.is(t2) && f(a, b, col))\n\t}\n\n\tfunction forAllCurrentAndFuture(t: Tag, action: (obj: GameObj) => void) {\n\t\tget(t, { recursive: true }).forEach(action)\n\t\tonAdd(t, action)\n\t}\n\n\t// add an event that runs when objs with tag t is clicked\n\tfunction onClick(tag: Tag | (() => void), action?: (obj: GameObj) => void): EventController {\n\t\tif (typeof tag === \"function\") {\n\t\t\treturn app.onMousePress(tag)\n\t\t} else {\n\t\t\tconst events = []\n\t\t\tforAllCurrentAndFuture(tag, (obj) => {\n\t\t\t\tif (!obj.area)\n\t\t\t\t\tthrow new Error(\"onClick() requires the object to have area() component\")\n\t\t\t\tevents.push(obj.onClick(() => action(obj)))\n\t\t\t})\n\t\t\treturn EventController.join(events)\n\t\t}\n\t}\n\n\t// add an event that runs once when objs with tag t is hovered\n\tfunction onHover(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHover() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHover(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// add an event that runs once when objs with tag t is hovered\n\tfunction onHoverUpdate(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHoverUpdate() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHoverUpdate(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// add an event that runs once when objs with tag t is unhovered\n\tfunction onHoverEnd(t: Tag, action: (obj: GameObj) => void): EventController {\n\t\tconst events = []\n\t\tforAllCurrentAndFuture(t, (obj) => {\n\t\t\tif (!obj.area)\n\t\t\t\tthrow new Error(\"onHoverEnd() requires the object to have area() component\")\n\t\t\tevents.push(obj.onHoverEnd(() => action(obj)))\n\t\t})\n\t\treturn EventController.join(events)\n\t}\n\n\t// TODO: use PromiseLike?\n\t// TODO: use root game object and timer()?\n\t// add an event that'd be run after t\n\tfunction wait(time: number, action?: () => void): TimerController {\n\t\tlet t = 0\n\t\tconst actions = []\n\t\tif (action) actions.push(action)\n\t\tconst ev = onUpdate(() => {\n\t\t\tt += dt()\n\t\t\tif (t >= time) {\n\t\t\t\tev.cancel()\n\t\t\t\tactions.forEach((action) => action())\n\t\t\t}\n\t\t})\n\t\treturn {\n\t\t\tpaused: ev.paused,\n\t\t\tcancel: ev.cancel,\n\t\t\tonEnd(action) {\n\t\t\t\tactions.push(action)\n\t\t\t},\n\t\t\tthen(action) {\n\t\t\t\tthis.onEnd(action)\n\t\t\t\treturn this\n\t\t\t},\n\t\t}\n\t}\n\n\t// add an event that's run every t seconds\n\tfunction loop(t: number, action: () => void): EventController {\n\n\t\tlet curTimer: null | TimerController = null\n\n\t\tconst newAction = () => {\n\t\t\t// TODO: should f be execute right away as loop() is called?\n\t\t\tcurTimer = wait(t, newAction)\n\t\t\taction()\n\t\t}\n\n\t\tcurTimer = wait(0, newAction)\n\n\t\treturn {\n\t\t\tget paused() {\n\t\t\t\treturn curTimer.paused\n\t\t\t},\n\t\t\tset paused(p) {\n\t\t\t\tcurTimer.paused = p\n\t\t\t},\n\t\t\tcancel: () => curTimer.cancel(),\n\t\t}\n\n\t}\n\n\tfunction enterDebugMode() {\n\n\t\tapp.onKeyPress(\"f1\", () => {\n\t\t\tdebug.inspect = !debug.inspect\n\t\t})\n\n\t\tapp.onKeyPress(\"f2\", () => {\n\t\t\tdebug.clearLog()\n\t\t})\n\n\t\tapp.onKeyPress(\"f8\", () => {\n\t\t\tdebug.paused = !debug.paused\n\t\t})\n\n\t\tapp.onKeyPress(\"f7\", () => {\n\t\t\tdebug.timeScale = toFixed(clamp(debug.timeScale - 0.2, 0, 2), 1)\n\t\t})\n\n\t\tapp.onKeyPress(\"f9\", () => {\n\t\t\tdebug.timeScale = toFixed(clamp(debug.timeScale + 0.2, 0, 2), 1)\n\t\t})\n\n\t\tapp.onKeyPress(\"f10\", () => {\n\t\t\tdebug.stepFrame()\n\t\t})\n\n\t}\n\n\tfunction enterBurpMode() {\n\t\tapp.onKeyPress(\"b\", () => burp())\n\t}\n\n\tfunction setGravity(g: number) {\n\t\tgame.gravity = g\n\t}\n\n\tfunction getGravity() {\n\t\treturn game.gravity\n\t}\n\n\tfunction setBackground(...args) {\n\t\tif (args.length === 1 || args.length === 2) {\n\t\t\tgfx.bgColor = rgb(args[0])\n\t\t\tif (args[1]) gfx.bgAlpha = args[1]\n\t\t} else if (args.length === 3 || args.length === 4) {\n\t\t\tgfx.bgColor = rgb(args[0], args[1], args[2])\n\t\t\tif (args[3]) gfx.bgAlpha = args[3]\n\t\t}\n\t\tgl.clearColor(\n\t\t\tgfx.bgColor.r / 255,\n\t\t\tgfx.bgColor.g / 255,\n\t\t\tgfx.bgColor.b / 255,\n\t\t\tgfx.bgAlpha,\n\t\t)\n\t}\n\n\tfunction getBackground() {\n\t\treturn gfx.bgColor.clone()\n\t}\n\n\t// TODO: manage global velocity here?\n\tfunction pos(...args: Vec2Args): PosComp {\n\n\t\treturn {\n\n\t\t\tid: \"pos\",\n\t\t\tpos: vec2(...args),\n\n\t\t\tmoveBy(...args: Vec2Args) {\n\t\t\t\tthis.pos = this.pos.add(vec2(...args))\n\t\t\t},\n\n\t\t\t// move with velocity (pixels per second)\n\t\t\tmove(...args: Vec2Args) {\n\t\t\t\tthis.moveBy(vec2(...args).scale(dt()))\n\t\t\t},\n\n\t\t\t// move to a destination, with optional speed\n\t\t\tmoveTo(...args) {\n\t\t\t\tif (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n\t\t\t\t\treturn this.moveTo(vec2(args[0], args[1]), args[2])\n\t\t\t\t}\n\t\t\t\tconst dest = args[0]\n\t\t\t\tconst speed = args[1]\n\t\t\t\tif (speed === undefined) {\n\t\t\t\t\tthis.pos = vec2(dest)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst diff = dest.sub(this.pos)\n\t\t\t\tif (diff.len() <= speed * dt()) {\n\t\t\t\t\tthis.pos = vec2(dest)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tthis.move(diff.unit().scale(speed))\n\t\t\t},\n\n\t\t\tworldPos(this: GameObj<PosComp>): Vec2 {\n\t\t\t\treturn this.parent\n\t\t\t\t\t? this.parent.transform.multVec2(this.pos)\n\t\t\t\t\t: this.pos\n\t\t\t},\n\n\t\t\t// get the screen position (transformed by camera)\n\t\t\tscreenPos(this: GameObj<PosComp | FixedComp>): Vec2 {\n\t\t\t\treturn this.fixed\n\t\t\t\t\t? this.pos\n\t\t\t\t\t: toScreen(this.pos)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\treturn `(${Math.round(this.pos.x)}, ${Math.round(this.pos.y)})`\n\t\t\t},\n\n\t\t\tdrawInspect() {\n\t\t\t\tdrawCircle({\n\t\t\t\t\tcolor: rgb(255, 0, 0),\n\t\t\t\t\tradius: 4 / getViewportScale(),\n\t\t\t\t})\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\t// TODO: allow single number assignment\n\tfunction scale(...args: Vec2Args): ScaleComp {\n\t\tif (args.length === 0) {\n\t\t\treturn scale(1)\n\t\t}\n\t\treturn {\n\t\t\tid: \"scale\",\n\t\t\tscale: vec2(...args),\n\t\t\tscaleTo(...args: Vec2Args) {\n\t\t\t\tthis.scale = vec2(...args)\n\t\t\t},\n\t\t\tscaleBy(...args: Vec2Args) {\n\t\t\t\tthis.scale.scale(vec2(...args))\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `(${toFixed(this.scale.x, 2)}, ${toFixed(this.scale.y, 2)})`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction rotate(r: number): RotateComp {\n\t\treturn {\n\t\t\tid: \"rotate\",\n\t\t\tangle: r ?? 0,\n\t\t\trotateBy(angle: number) {\n\t\t\t\tthis.angle += angle\n\t\t\t},\n\t\t\trotateTo(angle: number) {\n\t\t\t\tthis.angle = angle\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.round(this.angle)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction color(...args): ColorComp {\n\t\treturn {\n\t\t\tid: \"color\",\n\t\t\tcolor: rgb(...args),\n\t\t\tinspect() {\n\t\t\t\treturn this.color.toString()\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction toFixed(n: number, f: number) {\n\t\treturn Number(n.toFixed(f))\n\t}\n\n\t// TODO: fadeIn here?\n\tfunction opacity(a: number): OpacityComp {\n\t\treturn {\n\t\t\tid: \"opacity\",\n\t\t\topacity: a ?? 1,\n\t\t\tinspect() {\n\t\t\t\treturn `${toFixed(this.opacity, 1)}`\n\t\t\t},\n\t\t\tfadeOut(time = 1, easeFunc = easings.linear): TweenController {\n\t\t\t\treturn tween(this.opacity, 0, time, (a) => this.opacity = a, easeFunc)\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction anchor(o: Anchor | Vec2): AnchorComp {\n\t\tif (!o) {\n\t\t\tthrow new Error(\"Please define an anchor\")\n\t\t}\n\t\treturn {\n\t\t\tid: \"anchor\",\n\t\t\tanchor: o,\n\t\t\tinspect() {\n\t\t\t\tif (typeof this.anchor === \"string\") {\n\t\t\t\t\treturn this.anchor\n\t\t\t\t} else {\n\t\t\t\t\treturn this.anchor.toString()\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction z(z: number): ZComp {\n\t\treturn {\n\t\t\tid: \"z\",\n\t\t\tz: z,\n\t\t\tinspect() {\n\t\t\t\treturn `${this.z}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction follow(obj: GameObj, offset?: Vec2): FollowComp {\n\t\treturn {\n\t\t\tid: \"follow\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tfollow: {\n\t\t\t\tobj: obj,\n\t\t\t\toffset: offset ?? vec2(0),\n\t\t\t},\n\t\t\tadd(this: GameObj<FollowComp | PosComp>) {\n\t\t\t\tif (obj.exists()) {\n\t\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(this: GameObj<FollowComp | PosComp>) {\n\t\t\t\tif (obj.exists()) {\n\t\t\t\t\tthis.pos = this.follow.obj.pos.add(this.follow.offset)\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction move(dir: number | Vec2, speed: number): MoveComp {\n\t\tconst d = typeof dir === \"number\" ? Vec2.fromAngle(dir) : dir.unit()\n\t\treturn {\n\t\t\tid: \"move\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tupdate(this: GameObj<PosComp>) {\n\t\t\t\tthis.move(d.scale(speed))\n\t\t\t},\n\t\t}\n\t}\n\n\tconst DEF_OFFSCREEN_DIS = 200\n\n\tfunction offscreen(opt: OffScreenCompOpt = {}): OffScreenComp {\n\t\tconst distance = opt.distance ?? DEF_OFFSCREEN_DIS\n\t\tlet isOut = false\n\t\treturn {\n\t\t\tid: \"offscreen\",\n\t\t\trequire: [ \"pos\" ],\n\t\t\tisOffScreen(this: GameObj<PosComp>): boolean {\n\t\t\t\tconst pos = toScreen(this.pos)\n\t\t\t\tconst screenRect = new Rect(vec2(0), width(), height())\n\t\t\t\treturn !testRectPoint(screenRect, pos)\n\t\t\t\t\t&& screenRect.sdistToPoint(pos) > distance * distance\n\t\t\t},\n\t\t\tonExitScreen(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"exitView\", action)\n\t\t\t},\n\t\t\tonEnterScreen(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"enterView\", action)\n\t\t\t},\n\t\t\tupdate(this: GameObj) {\n\t\t\t\tif (this.isOffScreen()) {\n\t\t\t\t\tif (!isOut) {\n\t\t\t\t\t\tthis.trigger(\"exitView\")\n\t\t\t\t\t\tisOut = true\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.hide) this.hidden = true\n\t\t\t\t\tif (opt.pause) this.paused = true\n\t\t\t\t\tif (opt.destroy) this.destroy()\n\t\t\t\t} else {\n\t\t\t\t\tif (isOut) {\n\t\t\t\t\t\tthis.trigger(\"enterView\")\n\t\t\t\t\t\tisOut = false\n\t\t\t\t\t}\n\t\t\t\t\tif (opt.hide) this.hidden = false\n\t\t\t\t\tif (opt.pause) this.paused = false\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction area(opt: AreaCompOpt = {}): AreaComp {\n\n\t\tconst colliding = {}\n\t\tconst collidingThisFrame = new Set()\n\n\t\treturn {\n\n\t\t\tid: \"area\",\n\t\t\tcollisionIgnore: opt.collisionIgnore ?? [],\n\n\t\t\tadd(this: GameObj<AreaComp>) {\n\n\t\t\t\tif (this.area.cursor) {\n\t\t\t\t\tthis.onHover(() => app.setCursor(this.area.cursor))\n\t\t\t\t}\n\n\t\t\t\tthis.onCollideUpdate((obj, col) => {\n\t\t\t\t\tif (!colliding[obj.id]) {\n\t\t\t\t\t\tthis.trigger(\"collide\", obj, col)\n\t\t\t\t\t}\n\t\t\t\t\tcolliding[obj.id] = col\n\t\t\t\t\tcollidingThisFrame.add(obj.id)\n\t\t\t\t})\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<AreaComp>) {\n\t\t\t\tfor (const id in colliding) {\n\t\t\t\t\tif (!collidingThisFrame.has(Number(id))) {\n\t\t\t\t\t\tthis.trigger(\"collideEnd\", colliding[id].target)\n\t\t\t\t\t\tdelete colliding[id]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcollidingThisFrame.clear()\n\t\t\t},\n\n\t\t\tdrawInspect(this: GameObj<AreaComp | AnchorComp | FixedComp>) {\n\n\t\t\t\tconst a = this.localArea()\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushScale(this.area.scale)\n\t\t\t\tpushTranslate(this.area.offset)\n\n\t\t\t\tconst opts = {\n\t\t\t\t\toutline: {\n\t\t\t\t\t\twidth: 4 / getViewportScale(),\n\t\t\t\t\t\tcolor: rgb(0, 0, 255),\n\t\t\t\t\t},\n\t\t\t\t\tanchor: this.anchor,\n\t\t\t\t\tfill: false,\n\t\t\t\t\tfixed: this.fixed,\n\t\t\t\t}\n\n\t\t\t\tif (a instanceof Rect) {\n\t\t\t\t\tdrawRect({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpos: a.pos,\n\t\t\t\t\t\twidth: a.width,\n\t\t\t\t\t\theight: a.height,\n\t\t\t\t\t})\n\t\t\t\t} else if (a instanceof Polygon) {\n\t\t\t\t\tdrawPolygon({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpts: a.pts,\n\t\t\t\t\t})\n\t\t\t\t} else if (a instanceof Circle) {\n\t\t\t\t\tdrawCircle({\n\t\t\t\t\t\t...opts,\n\t\t\t\t\t\tpos: a.center,\n\t\t\t\t\t\tradius: a.radius,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tpopTransform()\n\n\t\t\t},\n\n\t\t\tarea: {\n\t\t\t\tshape: opt.shape ?? null,\n\t\t\t\tscale: opt.scale ? vec2(opt.scale) : vec2(1),\n\t\t\t\toffset: opt.offset ?? vec2(0),\n\t\t\t\tcursor: opt.cursor ?? null,\n\t\t\t},\n\n\t\t\tisClicked(): boolean {\n\t\t\t\treturn app.isMousePressed() && this.isHovering()\n\t\t\t},\n\n\t\t\tisHovering(this: GameObj) {\n\t\t\t\tconst mpos = this.fixed ? mousePos() : toWorld(mousePos())\n\t\t\t\treturn this.hasPoint(mpos)\n\t\t\t},\n\n\t\t\tcheckCollision(this: GameObj, other: GameObj<AreaComp>) {\n\t\t\t\treturn colliding[other.id] ?? null\n\t\t\t},\n\n\t\t\tgetCollisions() {\n\t\t\t\treturn Object.values(colliding)\n\t\t\t},\n\n\t\t\tisColliding(other: GameObj<AreaComp>) {\n\t\t\t\treturn Boolean(colliding[other.id])\n\t\t\t},\n\n\t\t\tisOverlapping(other) {\n\t\t\t\tconst col = colliding[other.id]\n\t\t\t\treturn col && col.hasOverlap()\n\t\t\t},\n\n\t\t\tonClick(this: GameObj<AreaComp>, f: () => void): EventController {\n\t\t\t\tconst e = app.onMousePress(\"left\", () => {\n\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\tf()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.onDestroy(() => e.cancel())\n\t\t\t\treturn e\n\t\t\t},\n\n\t\t\tonHover(this: GameObj, action: () => void): EventController {\n\t\t\t\tlet hovering = false\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (!hovering) {\n\t\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\t\thovering = true\n\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thovering = this.isHovering()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHoverUpdate(this: GameObj, onHover: () => void): EventController {\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (this.isHovering()) {\n\t\t\t\t\t\tonHover()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonHoverEnd(this: GameObj, action: () => void): EventController {\n\t\t\t\tlet hovering = false\n\t\t\t\treturn this.onUpdate(() => {\n\t\t\t\t\tif (hovering) {\n\t\t\t\t\t\tif (!this.isHovering()) {\n\t\t\t\t\t\t\thovering = false\n\t\t\t\t\t\t\taction()\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\thovering = this.isHovering()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tonCollide(\n\t\t\t\tthis: GameObj,\n\t\t\t\ttag: Tag | ((obj: GameObj, col?: Collision) => void),\n\t\t\t\tcb?: (obj: GameObj, col?: Collision) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collide\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.onCollide((obj, col) => {\n\t\t\t\t\t\tif (obj.is(tag)) {\n\t\t\t\t\t\t\tcb(obj, col)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCollideUpdate(\n\t\t\t\tthis: GameObj<AreaComp>,\n\t\t\t\ttag: Tag | ((obj: GameObj, col?: Collision) => void),\n\t\t\t\tcb?: (obj: GameObj, col?: Collision) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collideUpdate\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.on(\"collideUpdate\", (obj, col) => obj.is(tag) && cb(obj, col))\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonCollideEnd(\n\t\t\t\tthis: GameObj<AreaComp>,\n\t\t\t\ttag: Tag | ((obj: GameObj) => void),\n\t\t\t\tcb?: (obj: GameObj) => void,\n\t\t\t): EventController {\n\t\t\t\tif (typeof tag === \"function\" && cb === undefined) {\n\t\t\t\t\treturn this.on(\"collideEnd\", tag)\n\t\t\t\t} else if (typeof tag === \"string\") {\n\t\t\t\t\treturn this.on(\"collideEnd\", (obj) => obj.is(tag) && cb(obj))\n\t\t\t\t}\n\t\t\t},\n\n\t\t\thasPoint(pt: Vec2): boolean {\n\t\t\t\t// TODO: convert to pt to local space instead\n\t\t\t\treturn testPolygonPoint(this.worldArea(), pt)\n\t\t\t},\n\n\t\t\t// push an obj out of another if they're overlapped\n\t\t\tresolveCollision(this: GameObj<AreaComp | PosComp>, obj: GameObj<AreaComp>) {\n\t\t\t\tconst col = this.checkCollision(obj)\n\t\t\t\tif (col && !col.resolved) {\n\t\t\t\t\tthis.pos = this.pos.add(col.displacement)\n\t\t\t\t\tcol.resolved = true\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tlocalArea(this: GameObj<AreaComp | { renderArea(): Shape }>): Shape {\n\t\t\t\treturn this.area.shape\n\t\t\t\t\t? this.area.shape\n\t\t\t\t\t: this.renderArea()\n\t\t\t},\n\n\t\t\t// TODO: cache\n\t\t\tworldArea(this: GameObj<AreaComp | AnchorComp>): Polygon {\n\n\t\t\t\tconst localArea = this.localArea()\n\n\t\t\t\tif (!(localArea instanceof Polygon || localArea instanceof Rect)) {\n\t\t\t\t\tthrow new Error(\"Only support polygon and rect shapes for now\")\n\t\t\t\t}\n\n\t\t\t\tconst transform = this.transform\n\t\t\t\t\t.clone()\n\t\t\t\t\t.scale(vec2(this.area.scale ?? 1))\n\t\t\t\t\t.translate(this.area.offset)\n\n\t\t\t\tif (localArea instanceof Rect) {\n\t\t\t\t\tconst offset = anchorPt(this.anchor || DEF_ANCHOR)\n\t\t\t\t\t\t.add(1, 1)\n\t\t\t\t\t\t.scale(-0.5)\n\t\t\t\t\t\t.scale(localArea.width, localArea.height)\n\t\t\t\t\ttransform.translate(offset)\n\t\t\t\t}\n\n\t\t\t\treturn localArea.transform(transform) as Polygon\n\n\t\t\t},\n\n\t\t\tscreenArea(this: GameObj<AreaComp | FixedComp>): Polygon {\n\t\t\t\tconst area = this.worldArea()\n\t\t\t\tif (this.fixed) {\n\t\t\t\t\treturn area\n\t\t\t\t} else {\n\t\t\t\t\treturn area.transform(game.cam.transform)\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction getRenderProps(obj: GameObj<any>) {\n\t\treturn {\n\t\t\tcolor: obj.color,\n\t\t\topacity: obj.opacity,\n\t\t\tanchor: obj.anchor,\n\t\t\toutline: obj.outline,\n\t\t\tfixed: obj.fixed,\n\t\t\tshader: obj.shader,\n\t\t\tuniform: obj.uniform,\n\t\t}\n\t}\n\n\t// TODO: clean\n\tfunction sprite(\n\t\tsrc: string | SpriteData | Asset<SpriteData>,\n\t\topt: SpriteCompOpt = {},\n\t): SpriteComp {\n\n\t\tlet spriteData: SpriteData | null = null\n\t\tlet curAnim: SpriteCurAnim | null = null\n\t\tconst spriteLoadedEvent = new Event<[SpriteData]>()\n\n\t\tif (!src) {\n\t\t\tthrow new Error(\"Please pass the resource name or data to sprite()\")\n\t\t}\n\n\t\tconst calcTexScale = (tex: Texture, q: Quad, w?: number, h?: number): Vec2 => {\n\t\t\tconst scale = vec2(1, 1)\n\t\t\tif (w && h) {\n\t\t\t\tscale.x = w / (tex.width * q.w)\n\t\t\t\tscale.y = h / (tex.height * q.h)\n\t\t\t} else if (w) {\n\t\t\t\tscale.x = w / (tex.width * q.w)\n\t\t\t\tscale.y = scale.x\n\t\t\t} else if (h) {\n\t\t\t\tscale.y = h / (tex.height * q.h)\n\t\t\t\tscale.x = scale.y\n\t\t\t}\n\t\t\treturn scale\n\t\t}\n\n\t\treturn {\n\n\t\t\tid: \"sprite\",\n\t\t\t// TODO: allow update\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t\tframe: opt.frame || 0,\n\t\t\tquad: opt.quad || new Quad(0, 0, 1, 1),\n\t\t\tanimSpeed: opt.animSpeed ?? 1,\n\t\t\tflipX: opt.flipX ?? false,\n\t\t\tflipY: opt.flipY ?? false,\n\n\t\t\tdraw(this: GameObj<SpriteComp>) {\n\n\t\t\t\tif (!spriteData) return\n\n\t\t\t\tconst q = spriteData.frames[this.frame ?? 0]\n\n\t\t\t\tif (!q) {\n\t\t\t\t\tthrow new Error(`Frame not found: ${this.frame ?? 0}`)\n\t\t\t\t}\n\n\t\t\t\tif (spriteData.slice9) {\n\t\t\t\t\t// TODO: tile\n\t\t\t\t\t// TODO: use scale or width / height, or both?\n\t\t\t\t\tconst { left, right, top, bottom } = spriteData.slice9\n\t\t\t\t\tconst tw = spriteData.tex.width * q.w\n\t\t\t\t\tconst th = spriteData.tex.height * q.h\n\t\t\t\t\tconst iw = this.width - left - right\n\t\t\t\t\tconst ih = this.height - top - bottom\n\t\t\t\t\tconst w1 = left / tw\n\t\t\t\t\tconst w3 = right / tw\n\t\t\t\t\tconst w2 = 1 - w1 - w3\n\t\t\t\t\tconst h1 = top / th\n\t\t\t\t\tconst h3 = bottom / th\n\t\t\t\t\tconst h2 = 1 - h1 - h3\n\t\t\t\t\tconst quads = [\n\t\t\t\t\t\t// uv\n\t\t\t\t\t\tquad(0,       0,       w1, h1),\n\t\t\t\t\t\tquad(w1,      0,       w2, h1),\n\t\t\t\t\t\tquad(w1 + w2, 0,       w3, h1),\n\t\t\t\t\t\tquad(0,       h1,      w1, h2),\n\t\t\t\t\t\tquad(w1,      h1,      w2, h2),\n\t\t\t\t\t\tquad(w1 + w2, h1,      w3, h2),\n\t\t\t\t\t\tquad(0,       h1 + h2, w1, h3),\n\t\t\t\t\t\tquad(w1,      h1 + h2, w2, h3),\n\t\t\t\t\t\tquad(w1 + w2, h1 + h2, w3, h3),\n\t\t\t\t\t\t// transform\n\t\t\t\t\t\tquad(0,         0,        left,  top),\n\t\t\t\t\t\tquad(left,      0,        iw,    top),\n\t\t\t\t\t\tquad(left + iw, 0,        right, top),\n\t\t\t\t\t\tquad(0,         top,      left,  ih),\n\t\t\t\t\t\tquad(left,      top,      iw,    ih),\n\t\t\t\t\t\tquad(left + iw, top,      right, ih),\n\t\t\t\t\t\tquad(0,         top + ih, left,  bottom),\n\t\t\t\t\t\tquad(left,      top + ih, iw,    bottom),\n\t\t\t\t\t\tquad(left + iw, top + ih, right, bottom),\n\t\t\t\t\t]\n\t\t\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\t\t\tconst uv = quads[i]\n\t\t\t\t\t\tconst transform = quads[i + 9]\n\t\t\t\t\t\tdrawTexture(Object.assign(getRenderProps(this), {\n\t\t\t\t\t\t\tpos: transform.pos(),\n\t\t\t\t\t\t\ttex: spriteData.tex,\n\t\t\t\t\t\t\tquad: q.scale(uv),\n\t\t\t\t\t\t\tflipX: this.flipX,\n\t\t\t\t\t\t\tflipY: this.flipY,\n\t\t\t\t\t\t\ttiled: opt.tiled,\n\t\t\t\t\t\t\twidth: transform.w,\n\t\t\t\t\t\t\theight: transform.h,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tdrawTexture(Object.assign(getRenderProps(this), {\n\t\t\t\t\t\ttex: spriteData.tex,\n\t\t\t\t\t\tquad: q,\n\t\t\t\t\t\tflipX: this.flipX,\n\t\t\t\t\t\tflipY: this.flipY,\n\t\t\t\t\t\ttiled: opt.tiled,\n\t\t\t\t\t\twidth: this.width,\n\t\t\t\t\t\theight: this.height,\n\t\t\t\t\t}))\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tadd(this: GameObj<SpriteComp>) {\n\n\t\t\t\tconst setSpriteData = (spr) => {\n\n\t\t\t\t\tlet q = spr.frames[0].clone()\n\n\t\t\t\t\tif (opt.quad) {\n\t\t\t\t\t\tq = q.scale(opt.quad)\n\t\t\t\t\t}\n\n\t\t\t\t\tconst scale = calcTexScale(spr.tex, q, opt.width, opt.height)\n\n\t\t\t\t\tthis.width = spr.tex.width * q.w * scale.x\n\t\t\t\t\tthis.height = spr.tex.height * q.h * scale.y\n\n\t\t\t\t\tif (opt.anim) {\n\t\t\t\t\t\tthis.play(opt.anim)\n\t\t\t\t\t}\n\n\t\t\t\t\tspriteData = spr\n\t\t\t\t\tspriteLoadedEvent.trigger(spriteData)\n\n\t\t\t\t}\n\n\t\t\t\tconst spr = resolveSprite(src)\n\n\t\t\t\tif (spr) {\n\t\t\t\t\tspr.onLoad(setSpriteData)\n\t\t\t\t} else {\n\t\t\t\t\tonLoad(() => setSpriteData(resolveSprite(src).data))\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<SpriteComp>) {\n\n\t\t\t\tif (!curAnim) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst anim = spriteData.anims[curAnim.name]\n\n\t\t\t\tif (typeof anim === \"number\") {\n\t\t\t\t\tthis.frame = anim\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (anim.speed === 0) {\n\t\t\t\t\tthrow new Error(\"Sprite anim speed cannot be 0\")\n\t\t\t\t}\n\n\t\t\t\tcurAnim.timer += dt() * this.animSpeed\n\n\t\t\t\tif (curAnim.timer >= (1 / curAnim.speed)) {\n\t\t\t\t\tcurAnim.timer = 0\n\t\t\t\t\t// TODO: clean up\n\t\t\t\t\tif (anim.from > anim.to) {\n\t\t\t\t\t\tthis.frame--\n\t\t\t\t\t\tif (this.frame < anim.to) {\n\t\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\t\tthis.frame = anim.from\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.frame++\n\t\t\t\t\t\t\t\tcurAnim.onEnd()\n\t\t\t\t\t\t\t\tthis.stop()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.frame++\n\t\t\t\t\t\tif (this.frame > anim.to) {\n\t\t\t\t\t\t\tif (curAnim.loop) {\n\t\t\t\t\t\t\t\tthis.frame = anim.from\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.frame--\n\t\t\t\t\t\t\t\tcurAnim.onEnd()\n\t\t\t\t\t\t\t\tthis.stop()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tplay(this: GameObj<SpriteComp>, name: string, opt: SpriteAnimPlayOpt = {}) {\n\n\t\t\t\tif (!spriteData) {\n\t\t\t\t\tspriteLoadedEvent.add(() => this.play(name, opt))\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst anim = spriteData.anims[name]\n\n\t\t\t\tif (anim === undefined) {\n\t\t\t\t\tthrow new Error(`Anim not found: ${name}`)\n\t\t\t\t}\n\n\t\t\t\tif (curAnim) {\n\t\t\t\t\tthis.stop()\n\t\t\t\t}\n\n\t\t\t\tcurAnim = typeof anim === \"number\"\n\t\t\t\t\t? {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\ttimer: 0,\n\t\t\t\t\t\tloop: false,\n\t\t\t\t\t\tpingpong: false,\n\t\t\t\t\t\tspeed: 0,\n\t\t\t\t\t\tonEnd: () => {},\n\t\t\t\t\t}\n\t\t\t\t\t: {\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\ttimer: 0,\n\t\t\t\t\t\tloop: opt.loop ?? anim.loop ?? false,\n\t\t\t\t\t\tpingpong: opt.pingpong ?? anim.pingpong ?? false,\n\t\t\t\t\t\tspeed: opt.speed ?? anim.speed ?? 10,\n\t\t\t\t\t\tonEnd: opt.onEnd ?? (() => {}),\n\t\t\t\t\t}\n\n\t\t\t\tthis.frame = typeof anim === \"number\"\n\t\t\t\t\t? anim\n\t\t\t\t\t: anim.from\n\n\t\t\t\tthis.trigger(\"animStart\", name)\n\n\t\t\t},\n\n\t\t\tstop(this: GameObj<SpriteComp>) {\n\t\t\t\tif (!curAnim) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tconst prevAnim = curAnim.name\n\t\t\t\tcurAnim = null\n\t\t\t\tthis.trigger(\"animEnd\", prevAnim)\n\t\t\t},\n\n\t\t\tnumFrames() {\n\t\t\t\treturn spriteData?.frames.length ?? 0\n\t\t\t},\n\n\t\t\tcurAnim() {\n\t\t\t\treturn curAnim?.name\n\t\t\t},\n\n\t\t\tonAnimEnd(\n\t\t\t\tthis: GameObj<SpriteComp>,\n\t\t\t\taction: (name: string) => void,\n\t\t\t): EventController {\n\t\t\t\treturn this.on(\"animEnd\", action)\n\t\t\t},\n\n\t\t\tonAnimStart(\n\t\t\t\tthis: GameObj<SpriteComp>,\n\t\t\t\taction: (name: string) => void,\n\t\t\t): EventController {\n\t\t\t\treturn this.on(\"animStart\", action)\n\t\t\t},\n\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\tif (typeof src === \"string\") {\n\t\t\t\t\treturn `\"${src}\"`\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction text(t: string, opt: TextCompOpt = {}): TextComp {\n\n\t\tfunction update(obj: GameObj<TextComp | any>) {\n\n\t\t\tconst ftext = formatText(Object.assign(getRenderProps(obj), {\n\t\t\t\ttext: obj.text + \"\",\n\t\t\t\tsize: obj.textSize,\n\t\t\t\tfont: obj.font,\n\t\t\t\twidth: opt.width && obj.width,\n\t\t\t\talign: obj.align,\n\t\t\t\tletterSpacing: obj.letterSpacing,\n\t\t\t\tlineSpacing: obj.lineSpacing,\n\t\t\t\t// TODO: shouldn't run when object / ancestor is paused\n\t\t\t\ttransform: obj.textTransform,\n\t\t\t\tstyles: obj.textStyles,\n\t\t\t}))\n\n\t\t\tif (!opt.width) {\n\t\t\t\tobj.width = ftext.width / (obj.scale?.x || 1)\n\t\t\t}\n\n\t\t\tobj.height = ftext.height / (obj.scale?.y || 1)\n\n\t\t\treturn ftext\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tid: \"text\",\n\t\t\ttext: t,\n\t\t\ttextSize: opt.size ?? DEF_TEXT_SIZE,\n\t\t\tfont: opt.font,\n\t\t\twidth: opt.width,\n\t\t\theight: 0,\n\t\t\talign: opt.align,\n\t\t\tlineSpacing: opt.lineSpacing,\n\t\t\tletterSpacing: opt.letterSpacing,\n\t\t\ttextTransform: opt.transform,\n\t\t\ttextStyles: opt.styles,\n\n\t\t\tadd(this: GameObj<TextComp>) {\n\t\t\t\tonLoad(() => update(this))\n\t\t\t},\n\n\t\t\tdraw(this: GameObj<TextComp>) {\n\t\t\t\tdrawFormattedText(update(this))\n\t\t\t},\n\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction rect(w: number, h: number, opt: RectCompOpt = {}): RectComp {\n\t\treturn {\n\t\t\tid: \"rect\",\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tradius: opt.radius || 0,\n\t\t\tdraw(this: GameObj<RectComp>) {\n\t\t\t\tdrawRect(Object.assign(getRenderProps(this), {\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\theight: this.height,\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction uvquad(w: number, h: number): UVQuadComp {\n\t\treturn {\n\t\t\tid: \"rect\",\n\t\t\twidth: w,\n\t\t\theight: h,\n\t\t\tdraw(this: GameObj<UVQuadComp>) {\n\t\t\t\tdrawUVQuad(Object.assign(getRenderProps(this), {\n\t\t\t\t\twidth: this.width,\n\t\t\t\t\theight: this.height,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea() {\n\t\t\t\treturn new Rect(vec2(0), this.width, this.height)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.width)}, ${Math.ceil(this.height)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction circle(radius: number): CircleComp {\n\t\treturn {\n\t\t\tid: \"circle\",\n\t\t\tradius: radius,\n\t\t\tdraw(this: GameObj<CircleComp>) {\n\t\t\t\tdrawCircle(Object.assign(getRenderProps(this), {\n\t\t\t\t\tradius: this.radius,\n\t\t\t\t}))\n\t\t\t},\n\t\t\trenderArea(this: GameObj<AnchorComp | CircleComp>) {\n\t\t\t\treturn new Rect(new Vec2(this.anchor ? 0 : -this.radius), this.radius * 2, this.radius * 2)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${Math.ceil(this.radius)}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction outline(width: number = 1, color: Color = rgb(0, 0, 0)): OutlineComp {\n\t\treturn {\n\t\t\tid: \"outline\",\n\t\t\toutline: {\n\t\t\t\twidth,\n\t\t\t\tcolor,\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction timer(): TimerComp {\n\t\treturn {\n\t\t\tid: \"timer\",\n\t\t\twait(this: GameObj<TimerComp>, time: number, action?: () => void): TimerController {\n\t\t\t\tconst actions = []\n\t\t\t\tif (action) actions.push(action)\n\t\t\t\tlet t = 0\n\t\t\t\tconst ev = this.onUpdate(() => {\n\t\t\t\t\tt += dt()\n\t\t\t\t\tif (t >= time) {\n\t\t\t\t\t\tactions.forEach((f) => f())\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn ev.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tev.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tcancel: ev.cancel,\n\t\t\t\t\tonEnd(action) {\n\t\t\t\t\t\tactions.push(action)\n\t\t\t\t\t},\n\t\t\t\t\tthen(action) {\n\t\t\t\t\t\tthis.onEnd(action)\n\t\t\t\t\t\treturn this\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\tloop(t: number, action: () => void): EventController {\n\t\t\t\tlet curTimer: null | TimerController = null\n\t\t\t\tconst newAction = () => {\n\t\t\t\t\t// TODO: should f be execute right away as loop() is called?\n\t\t\t\t\tcurTimer = this.wait(t, newAction)\n\t\t\t\t\taction()\n\t\t\t\t}\n\t\t\t\tcurTimer = this.wait(0, newAction)\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn curTimer.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tcurTimer.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tcancel: () => curTimer.cancel(),\n\t\t\t\t}\n\t\t\t},\n\t\t\ttween<V extends LerpValue>(\n\t\t\t\tthis: GameObj<TimerComp>,\n\t\t\t\tfrom: V,\n\t\t\t\tto: V,\n\t\t\t\tduration: number,\n\t\t\t\tsetValue: (value: V) => void,\n\t\t\t\teaseFunc = easings.linear,\n\t\t\t) {\n\t\t\t\tlet curTime = 0\n\t\t\t\tconst onEndEvents: Array<() => void> = []\n\t\t\t\tconst ev = this.onUpdate(() => {\n\t\t\t\t\tcurTime += dt()\n\t\t\t\t\tconst t = Math.min(curTime / duration, 1)\n\t\t\t\t\tsetValue(lerp(from, to, easeFunc(t)))\n\t\t\t\t\tif (t === 1) {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\tsetValue(to)\n\t\t\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\tget paused() {\n\t\t\t\t\t\treturn ev.paused\n\t\t\t\t\t},\n\t\t\t\t\tset paused(p) {\n\t\t\t\t\t\tev.paused = p\n\t\t\t\t\t},\n\t\t\t\t\tonEnd(action: () => void) {\n\t\t\t\t\t\tonEndEvents.push(action)\n\t\t\t\t\t},\n\t\t\t\t\tthen(action: () => void) {\n\t\t\t\t\t\tthis.onEnd(action)\n\t\t\t\t\t\treturn this\n\t\t\t\t\t},\n\t\t\t\t\tcancel() {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t},\n\t\t\t\t\tfinish() {\n\t\t\t\t\t\tev.cancel()\n\t\t\t\t\t\tsetValue(to)\n\t\t\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\t// maximum y velocity with body()\n\tconst DEF_JUMP_FORCE = 640\n\tconst MAX_VEL = 65536\n\n\t// TODO: land on wall\n\tfunction body(opt: BodyCompOpt = {}): BodyComp {\n\n\t\tconst vel = vec2(0)\n\t\tlet curPlatform: GameObj<PosComp | AreaComp | BodyComp> | null = null\n\t\tlet lastPlatformPos = null\n\t\tlet wantFall = false\n\n\t\treturn {\n\n\t\t\tid: \"body\",\n\t\t\trequire: [ \"pos\", \"area\" ],\n\t\t\tjumpForce: opt.jumpForce ?? DEF_JUMP_FORCE,\n\t\t\tgravityScale: opt.gravityScale ?? 1,\n\t\t\tisStatic: opt.isStatic ?? false,\n\t\t\t// TODO: prefer density * area()\n\t\t\tmass: opt.mass ?? 1,\n\n\t\t\tadd(this: GameObj<PosComp | BodyComp | AreaComp>) {\n\n\t\t\t\tif (this.mass === 0) {\n\t\t\t\t\tthrow new Error(\"Can't set body mass to 0\")\n\t\t\t\t}\n\n\t\t\t\t// static vs static: don't resolve\n\t\t\t\t// static vs non-static: always resolve non-static\n\t\t\t\t// non-static vs non-static: resolve the first one\n\t\t\t\tthis.onCollideUpdate((other: GameObj<PosComp | BodyComp>, col) => {\n\n\t\t\t\t\tif (!other.is(\"body\")) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (col.resolved) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.trigger(\"beforePhysicsResolve\", col)\n\t\t\t\t\tother.trigger(\"beforePhysicsResolve\", col.reverse())\n\n\t\t\t\t\t// user can mark 'resolved' in beforePhysicsResolve to stop a resolution\n\t\t\t\t\tif (col.resolved) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.isStatic && other.isStatic) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t} else if (!this.isStatic && !other.isStatic) {\n\t\t\t\t\t\t// TODO: update all children transform?\n\t\t\t\t\t\tconst tmass = this.mass + other.mass\n\t\t\t\t\t\tthis.pos = this.pos.add(col.displacement.scale(other.mass / tmass))\n\t\t\t\t\t\tother.pos = other.pos.add(col.displacement.scale(-this.mass / tmass))\n\t\t\t\t\t\tthis.transform = calcTransform(this)\n\t\t\t\t\t\tother.transform = calcTransform(other)\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// if one is static and on is not, resolve the non static one\n\t\t\t\t\t\tconst col2 = (!this.isStatic && other.isStatic) ? col : col.reverse()\n\t\t\t\t\t\tcol2.source.pos = col2.source.pos.add(col2.displacement)\n\t\t\t\t\t\tcol2.source.transform = calcTransform(col2.source)\n\t\t\t\t\t}\n\n\t\t\t\t\tcol.resolved = true\n\t\t\t\t\tthis.trigger(\"physicsResolve\", col)\n\t\t\t\t\tother.trigger(\"physicsResolve\", col.reverse())\n\n\t\t\t\t})\n\n\t\t\t\tthis.onPhysicsResolve((col) => {\n\t\t\t\t\tif (game.gravity) {\n\t\t\t\t\t\tif (col.isBottom() && this.isFalling()) {\n\t\t\t\t\t\t\tvel.y = 0\n\t\t\t\t\t\t\tcurPlatform = col.target as GameObj<PosComp | BodyComp | AreaComp>\n\t\t\t\t\t\t\tlastPlatformPos = col.target.pos\n\t\t\t\t\t\t\tif (wantFall) {\n\t\t\t\t\t\t\t\twantFall = false\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.trigger(\"ground\", curPlatform)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (col.isTop() && this.isJumping()) {\n\t\t\t\t\t\t\tvel.y = 0\n\t\t\t\t\t\t\tthis.trigger(\"headbutt\", col.target)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t},\n\n\t\t\tupdate(this: GameObj<PosComp | BodyComp | AreaComp>) {\n\n\t\t\t\tif (!game.gravity) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (this.isStatic) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tif (wantFall) {\n\t\t\t\t\tcurPlatform = null\n\t\t\t\t\tlastPlatformPos = null\n\t\t\t\t\tthis.trigger(\"fallOff\")\n\t\t\t\t\twantFall = false\n\t\t\t\t}\n\n\t\t\t\tif (curPlatform) {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.isOverlapping(curPlatform)\n\t\t\t\t\t\t|| !curPlatform.exists()\n\t\t\t\t\t\t|| !curPlatform.is(\"body\")\n\t\t\t\t\t) {\n\t\t\t\t\t\twantFall = true\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!curPlatform.pos.eq(lastPlatformPos)\n\t\t\t\t\t\t\t&& opt.stickToPlatform !== false\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tthis.moveBy(curPlatform.pos.sub(lastPlatformPos))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastPlatformPos = curPlatform.pos\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst prevVelY = vel.y\n\t\t\t\tvel.y += game.gravity * this.gravityScale * dt()\n\t\t\t\tvel.y = Math.min(vel.y, opt.maxVelocity ?? MAX_VEL)\n\t\t\t\tif (prevVelY < 0 && vel.y >= 0) {\n\t\t\t\t\tthis.trigger(\"fall\")\n\t\t\t\t}\n\t\t\t\tthis.move(vel)\n\n\t\t\t},\n\n\t\t\tonPhysicsResolve(this: GameObj, action) {\n\t\t\t\treturn this.on(\"physicsResolve\", action)\n\t\t\t},\n\n\t\t\tonBeforePhysicsResolve(this: GameObj, action) {\n\t\t\t\treturn this.on(\"beforePhysicsResolve\", action)\n\t\t\t},\n\n\t\t\tcurPlatform(): GameObj | null {\n\t\t\t\treturn curPlatform\n\t\t\t},\n\n\t\t\tisGrounded() {\n\t\t\t\treturn curPlatform !== null\n\t\t\t},\n\n\t\t\tisFalling(): boolean {\n\t\t\t\treturn vel.y > 0\n\t\t\t},\n\n\t\t\tisJumping(): boolean {\n\t\t\t\treturn vel.y < 0\n\t\t\t},\n\n\t\t\tjump(force: number) {\n\t\t\t\tcurPlatform = null\n\t\t\t\tlastPlatformPos = null\n\t\t\t\tvel.y = -force || -this.jumpForce\n\t\t\t},\n\n\t\t\tonGround(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"ground\", action)\n\t\t\t},\n\n\t\t\tonFall(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"fall\", action)\n\t\t\t},\n\n\t\t\tonFallOff(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"fallOff\", action)\n\t\t\t},\n\n\t\t\tonHeadbutt(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"headbutt\", action)\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction doubleJump(numJumps: number = 2): DoubleJumpComp {\n\t\tlet jumpsLeft = numJumps\n\t\treturn {\n\t\t\tid: \"doubleJump\",\n\t\t\trequire: [ \"body\" ],\n\t\t\tnumJumps: numJumps,\n\t\t\tadd(this: GameObj<BodyComp | DoubleJumpComp>) {\n\t\t\t\tthis.onGround(() => {\n\t\t\t\t\tjumpsLeft = this.numJumps\n\t\t\t\t})\n\t\t\t},\n\t\t\tdoubleJump(this: GameObj<BodyComp | DoubleJumpComp>, force?: number) {\n\t\t\t\tif (jumpsLeft <= 0) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (jumpsLeft < this.numJumps) {\n\t\t\t\t\tthis.trigger(\"doubleJump\")\n\t\t\t\t}\n\t\t\t\tjumpsLeft--\n\t\t\t\tthis.jump(force)\n\t\t\t},\n\t\t\tonDoubleJump(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"doubleJump\", action)\n\t\t\t},\n\t\t\tinspect(this: GameObj<BodyComp | DoubleJumpComp>) {\n\t\t\t\treturn `${jumpsLeft}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction shader(id: string, uniform?: Uniform | (() => Uniform)): ShaderComp {\n\t\treturn {\n\t\t\tid: \"shader\",\n\t\t\tshader: id,\n\t\t\t...(typeof uniform === \"function\" ? {\n\t\t\t\tuniform: uniform(),\n\t\t\t\tupdate() {\n\t\t\t\t\tthis.uniform = uniform()\n\t\t\t\t},\n\t\t\t} : {\n\t\t\t\tuniform: uniform,\n\t\t\t}),\n\t\t}\n\t}\n\n\t// TODO: all children should be fixed\n\tfunction fixed(): FixedComp {\n\t\treturn {\n\t\t\tid: \"fixed\",\n\t\t\tfixed: true,\n\t\t}\n\t}\n\n\tfunction stay(scenesToStay?: string[]): StayComp {\n\t\treturn {\n\t\t\tid: \"stay\",\n\t\t\tstay: true,\n\t\t\tscenesToStay: scenesToStay,\n\t\t}\n\t}\n\n\tfunction health(hp: number): HealthComp {\n\t\tif (hp == null) {\n\t\t\tthrow new Error(\"health() requires the initial amount of hp\")\n\t\t}\n\t\treturn {\n\t\t\tid: \"health\",\n\t\t\thurt(this: GameObj, n: number = 1) {\n\t\t\t\tthis.setHP(hp - n)\n\t\t\t\tthis.trigger(\"hurt\", n)\n\t\t\t},\n\t\t\theal(this: GameObj, n: number = 1) {\n\t\t\t\tthis.setHP(hp + n)\n\t\t\t\tthis.trigger(\"heal\", n)\n\t\t\t},\n\t\t\thp(): number {\n\t\t\t\treturn hp\n\t\t\t},\n\t\t\tsetHP(this: GameObj, n: number) {\n\t\t\t\thp = n\n\t\t\t\tif (hp <= 0) {\n\t\t\t\t\tthis.trigger(\"death\")\n\t\t\t\t}\n\t\t\t},\n\t\t\tonHurt(this: GameObj, action: (amount?: number) => void): EventController {\n\t\t\t\treturn this.on(\"hurt\", action)\n\t\t\t},\n\t\t\tonHeal(this: GameObj, action: (amount?: number) => void): EventController {\n\t\t\t\treturn this.on(\"heal\", action)\n\t\t\t},\n\t\t\tonDeath(this: GameObj, action: () => void): EventController {\n\t\t\t\treturn this.on(\"death\", action)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn `${hp}`\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction lifespan(time: number, opt: LifespanCompOpt = {}): LifespanComp {\n\t\tif (time == null) {\n\t\t\tthrow new Error(\"lifespan() requires time\")\n\t\t}\n\t\tconst fade = opt.fade ?? 0\n\t\treturn {\n\t\t\tid: \"lifespan\",\n\t\t\tasync add(this: GameObj<OpacityComp>) {\n\t\t\t\tawait wait(time)\n\t\t\t\t// TODO: this secretively requires opacity comp, make opacity on every game obj?\n\t\t\t\tif (fade > 0 && this.opacity) {\n\t\t\t\t\tawait tween(this.opacity, 0, fade, (a) => this.opacity = a, easings.linear)\n\t\t\t\t}\n\t\t\t\tthis.destroy()\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction state(\n\t\tinitState: string,\n\t\tstateList?: string[],\n\t\ttransitions?: Record<string, string | string[]>,\n\t): StateComp {\n\n\t\tif (!initState) {\n\t\t\tthrow new Error(\"state() requires an initial state\")\n\t\t}\n\n\t\tconst events = {}\n\n\t\tfunction initStateEvents(state: string) {\n\t\t\tif (!events[state]) {\n\t\t\t\tevents[state] = {\n\t\t\t\t\tenter: new Event(),\n\t\t\t\t\tend: new Event(),\n\t\t\t\t\tupdate: new Event(),\n\t\t\t\t\tdraw: new Event(),\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction on(event, state, action) {\n\t\t\tinitStateEvents(state)\n\t\t\treturn events[state][event].add(action)\n\t\t}\n\n\t\tfunction trigger(event, state, ...args) {\n\t\t\tinitStateEvents(state)\n\t\t\tevents[state][event].trigger(...args)\n\t\t}\n\n\t\tlet didFirstEnter = false\n\n\t\treturn {\n\n\t\t\tid: \"state\",\n\t\t\tstate: initState,\n\n\t\t\tenterState(state: string, ...args) {\n\n\t\t\t\tdidFirstEnter = true\n\n\t\t\t\tif (stateList && !stateList.includes(state)) {\n\t\t\t\t\tthrow new Error(`State not found: ${state}`)\n\t\t\t\t}\n\n\t\t\t\tconst oldState = this.state\n\n\t\t\t\tif (transitions) {\n\n\t\t\t\t\t// check if the transition is legal, if transition graph is defined\n\t\t\t\t\tif (!transitions?.[oldState]) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tconst available = typeof transitions[oldState] === \"string\"\n\t\t\t\t\t\t? [transitions[oldState]]\n\t\t\t\t\t\t: transitions[oldState] as string[]\n\n\t\t\t\t\tif (!available.includes(state)) {\n\t\t\t\t\t\tthrow new Error(`Cannot transition state from \"${oldState}\" to \"${state}\". Available transitions: ${available.map((s) => `\"${s}\"`).join(\", \")}`)\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttrigger(\"end\", oldState, ...args)\n\t\t\t\tthis.state = state\n\t\t\t\ttrigger(\"enter\", state, ...args)\n\t\t\t\ttrigger(\"enter\", `${oldState} -> ${state}`, ...args)\n\n\t\t\t},\n\n\t\t\tonStateTransition(from: string, to: string, action: () => void): EventController {\n\t\t\t\treturn on(\"enter\", `${from} -> ${to}`, action)\n\t\t\t},\n\n\t\t\tonStateEnter(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"enter\", state, action)\n\t\t\t},\n\n\t\t\tonStateUpdate(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"update\", state, action)\n\t\t\t},\n\n\t\t\tonStateDraw(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"draw\", state, action)\n\t\t\t},\n\n\t\t\tonStateEnd(state: string, action: () => void): EventController {\n\t\t\t\treturn on(\"end\", state, action)\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\t// execute the enter event for initState\n\t\t\t\tif (!didFirstEnter) {\n\t\t\t\t\ttrigger(\"enter\", initState)\n\t\t\t\t\tdidFirstEnter = true\n\t\t\t\t}\n\t\t\t\ttrigger(\"update\", this.state)\n\t\t\t},\n\n\t\t\tdraw() {\n\t\t\t\ttrigger(\"draw\", this.state)\n\t\t\t},\n\n\t\t\tinspect() {\n\t\t\t\treturn this.state\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction fadeIn(time: number = 1): Comp {\n\t\tlet t = 0\n\t\tlet done = false\n\t\treturn {\n\t\t\trequire: [ \"opacity\" ],\n\t\t\tadd(this: GameObj<OpacityComp>) {\n\t\t\t\tthis.opacity = 0\n\t\t\t},\n\t\t\tupdate(this: GameObj<OpacityComp>) {\n\t\t\t\tif (done) return\n\t\t\t\tt += dt()\n\t\t\t\tthis.opacity = map(t, 0, time, 0, 1)\n\t\t\t\tif (t >= time) {\n\t\t\t\t\tthis.opacity = 1\n\t\t\t\t\tdone = true\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction onLoad(cb: () => void): void {\n\t\tif (assets.loaded) {\n\t\t\tcb()\n\t\t} else {\n\t\t\tgame.events.on(\"load\", cb)\n\t\t}\n\t}\n\n\tfunction scene(id: SceneName, def: SceneDef) {\n\t\tgame.scenes[id] = def\n\t}\n\n\tfunction go(name: SceneName, ...args) {\n\n\t\tif (!game.scenes[name]) {\n\t\t\tthrow new Error(`Scene not found: ${name}`)\n\t\t}\n\n\t\tgame.events.onOnce(\"frameEnd\", () => {\n\n\t\t\tgame.events.trigger(\"sceneLeave\", name)\n\t\t\tapp.events.clear()\n\t\t\tgame.events.clear()\n\t\t\tgame.objEvents.clear()\n\n\t\t\t;[...game.root.children].forEach((obj) => {\n\t\t\t\tif (\n\t\t\t\t\t!obj.stay\n\t\t\t\t\t|| (obj.scenesToStay && !obj.scenesToStay.includes(name))\n\t\t\t\t) {\n\t\t\t\t\tgame.root.remove(obj)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tgame.root.clearEvents()\n\n\t\t\t// cam\n\t\t\tgame.cam = {\n\t\t\t\tpos: null,\n\t\t\t\tscale: vec2(1),\n\t\t\t\tangle: 0,\n\t\t\t\tshake: 0,\n\t\t\t\ttransform: new Mat4(),\n\t\t\t}\n\n\t\t\tgame.scenes[name](...args)\n\n\t\t\tif (gopt.debug !== false) {\n\t\t\t\tenterDebugMode()\n\t\t\t}\n\n\t\t\tif (gopt.burp) {\n\t\t\t\tenterBurpMode()\n\t\t\t}\n\n\t\t})\n\n\t}\n\n\tfunction onSceneLeave(action: (newScene?: string) => void): EventController {\n\t\treturn game.events.on(\"sceneLeave\", action)\n\t}\n\n\tfunction getData<T>(key: string, def?: T): T {\n\t\ttry {\n\t\t\treturn JSON.parse(window.localStorage[key])\n\t\t} catch {\n\t\t\tif (def) {\n\t\t\t\tsetData(key, def)\n\t\t\t\treturn def\n\t\t\t} else {\n\t\t\t\treturn null\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setData(key: string, data: any) {\n\t\twindow.localStorage[key] = JSON.stringify(data)\n\t}\n\n\tfunction plug<T>(plugin: KaboomPlugin<T>): MergeObj<T> & KaboomCtx {\n\t\tconst funcs = plugin(ctx)\n\t\tfor (const k in funcs) {\n\t\t\t// @ts-ignore\n\t\t\tctx[k] = funcs[k]\n\t\t\tif (gopt.global !== false) {\n\t\t\t\t// @ts-ignore\n\t\t\t\twindow[k] = funcs[k]\n\t\t\t}\n\t\t}\n\t\treturn ctx as unknown as MergeObj<T> & KaboomCtx\n\t}\n\n\tfunction center(): Vec2 {\n\t\treturn vec2(width() / 2, height() / 2)\n\t}\n\n\tenum EdgeMask {\n\t\tNone = 0,\n\t\tLeft = 1,\n\t\tTop = 2,\n\t\tLeftTop = 3,\n\t\tRight = 4,\n\t\tHorizontal = 5,\n\t\tRightTop = 6,\n\t\tHorizontalTop = 7,\n\t\tBottom = 8,\n\t\tLeftBottom = 9,\n\t\tVertical = 10,\n\t\tLeftVertical = 11,\n\t\tRightBottom = 12,\n\t\tHorizontalBottom = 13,\n\t\tRightVertical = 14,\n\t\tAll = 15,\n\t}\n\n\tfunction tile(opts: TileCompOpt = {}): TileComp {\n\n\t\tlet tilePos = vec2(0)\n\t\tlet isObstacle = opts.isObstacle ?? false\n\t\tlet cost = opts.cost ?? 0\n\t\tlet edges = opts.edges ?? []\n\n\t\tconst getEdgeMask = () => {\n\t\t\tconst loopup = {\n\t\t\t\t\"left\": EdgeMask.Left,\n\t\t\t\t\"top\": EdgeMask.Top,\n\t\t\t\t\"right\": EdgeMask.Right,\n\t\t\t\t\"bottom\": EdgeMask.Bottom,\n\t\t\t}\n\t\t\treturn edges.map(s => loopup[s] || 0).reduce((mask, dir) => mask | dir, 0)\n\t\t}\n\n\t\tlet edgeMask = getEdgeMask()\n\n\t\treturn {\n\n\t\t\tid: \"tile\",\n\t\t\ttilePosOffset: opts.offset ?? vec2(0),\n\n\t\t\tset tilePos(p: Vec2) {\n\t\t\t\tconst level = this.getLevel()\n\t\t\t\ttilePos = p.clone()\n\t\t\t\t// @ts-ignore\n\t\t\t\tthis.pos = vec2(\n\t\t\t\t\tthis.tilePos.x * level.tileWidth(),\n\t\t\t\t\tthis.tilePos.y * level.tileHeight(),\n\t\t\t\t).add(this.tilePosOffset)\n\t\t\t},\n\n\t\t\tget tilePos() {\n\t\t\t\treturn tilePos\n\t\t\t},\n\n\t\t\tset isObstacle(is: boolean) {\n\t\t\t\tif (isObstacle === is) return\n\t\t\t\tisObstacle = is\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget isObstacle() {\n\t\t\t\treturn isObstacle\n\t\t\t},\n\n\t\t\tset cost(n: number) {\n\t\t\t\tif (cost === n) return\n\t\t\t\tcost = n\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget cost() {\n\t\t\t\treturn cost\n\t\t\t},\n\n\t\t\tset edges(e: Edge[]) {\n\t\t\t\tedges = e\n\t\t\t\tedgeMask = getEdgeMask()\n\t\t\t\tthis.getLevel().invalidateNavigationMap()\n\t\t\t},\n\n\t\t\tget edges() {\n\t\t\t\treturn edges\n\t\t\t},\n\n\t\t\tget edgeMask() {\n\t\t\t\treturn edgeMask\n\t\t\t},\n\n\t\t\tgetLevel(this: GameObj) {\n\t\t\t\treturn this.parent as GameObj<LevelComp>\n\t\t\t},\n\n\t\t\tmoveLeft() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(-1, 0))\n\t\t\t},\n\n\t\t\tmoveRight() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(1, 0))\n\t\t\t},\n\n\t\t\tmoveUp() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(0, -1))\n\t\t\t},\n\n\t\t\tmoveDown() {\n\t\t\t\tthis.tilePos = this.tilePos.add(vec2(0, 1))\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction addLevel(map: string[], opt: LevelOpt): GameObj<PosComp | LevelComp> {\n\n\t\tif (!opt.tileWidth || !opt.tileHeight) {\n\t\t\tthrow new Error(\"Must provide tileWidth and tileHeight.\")\n\t\t}\n\n\t\tconst level = add([\n\t\t\tpos(opt.pos ?? vec2(0)),\n\t\t]) as GameObj<PosComp | LevelComp>\n\n\t\tconst numRows = map.length\n\t\tlet numColumns = 0\n\n\t\t// The spatial map keeps track of the objects at each location\n\t\tlet spatialMap: GameObj[][] | null = null\n\t\tlet costMap: number[] | null = null\n\t\tlet edgeMap: number[] | null = null\n\t\tlet connectivityMap: number[] | null = null\n\n\t\tconst tile2Hash = (tilePos: Vec2) => tilePos.x + tilePos.y * numColumns\n\t\tconst hash2Tile = (hash: number) => vec2(\n\t\t\tMath.floor(hash % numColumns),\n\t\t\tMath.floor(hash / numColumns),\n\t\t)\n\n\t\tconst createSpatialMap = () => {\n\t\t\tspatialMap = []\n\t\t\tfor (const child of level.children) {\n\t\t\t\tinsertIntoSpatialMap(child)\n\t\t\t}\n\t\t}\n\n\t\tconst insertIntoSpatialMap = (obj: GameObj) => {\n\t\t\tconst i = tile2Hash(obj.tilePos)\n\t\t\tif (spatialMap[i]) {\n\t\t\t\tspatialMap[i].push(obj)\n\t\t\t} else {\n\t\t\t\tspatialMap[i] = [obj]\n\t\t\t}\n\t\t}\n\n\t\tconst removeFromSpatialMap = (obj: GameObj) => {\n\t\t\tconst i = tile2Hash(obj.tilePos)\n\t\t\tif (spatialMap[i]) {\n\t\t\t\tconst index = spatialMap[i].indexOf(obj)\n\t\t\t\tif (index >= 0) {\n\t\t\t\t\tspatialMap[i].splice(index, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst updateSpatialMap = () => {\n\t\t\tlet spatialMapChanged = false\n\t\t\tfor (const child of level.children) {\n\t\t\t\tconst tilePos = level.pos2Tile(child.pos)\n\t\t\t\tif (child.tilePos.x != tilePos.x || child.tilePos.y != tilePos.y) {\n\t\t\t\t\tspatialMapChanged = true\n\t\t\t\t\tremoveFromSpatialMap(child)\n\t\t\t\t\tchild.tilePos.x = tilePos.x\n\t\t\t\t\tchild.tilePos.y = tilePos.y\n\t\t\t\t\tinsertIntoSpatialMap(child)\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (spatialMapChanged) {\n\t\t\t\tlevel.trigger(\"spatial_map_changed\")\n\t\t\t}\n\t\t}\n\n\t\t// The obstacle map tells which tiles are accessible\n\t\t// Cost: accessible with cost\n\t\t// Infinite: inaccessible\n\t\tconst createCostMap = () => {\n\t\t\tconst spatialMap = level.getSpatialMap()\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tif (!costMap) {\n\t\t\t\tcostMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcostMap.length = size\n\t\t\t}\n\t\t\tcostMap.fill(1, 0, size)\n\t\t\tfor (let i = 0; i < spatialMap.length; i++) {\n\t\t\t\tconst objects = spatialMap[i]\n\t\t\t\tif (objects) {\n\t\t\t\t\tlet cost = 0\n\t\t\t\t\tfor (const obj of objects) {\n\t\t\t\t\t\tif (obj.isObstacle) {\n\t\t\t\t\t\t\tcost = Infinity\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcost += obj.cost\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tcostMap[i] = cost || 1\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The edge map tells which edges between nodes are walkable\n\t\tconst createEdgeMap = () => {\n\t\t\tconst spatialMap = level.getSpatialMap()\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tif (!edgeMap) {\n\t\t\t\tedgeMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tedgeMap.length = size\n\t\t\t}\n\t\t\tedgeMap.fill(EdgeMask.All, 0, size)\n\t\t\tfor (let i = 0; i < spatialMap.length; i++) {\n\t\t\t\tconst objects = spatialMap[i]\n\t\t\t\tif (objects) {\n\t\t\t\t\tconst len = objects.length\n\t\t\t\t\tlet mask = EdgeMask.All\n\t\t\t\t\tfor (let j = 0; j < len; j++) {\n\t\t\t\t\t\tmask |= objects[j].edgeMask\n\t\t\t\t\t}\n\t\t\t\t\tedgeMap[i] = mask\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The connectivity map is used to see whether two locations are connected\n\t\t// -1: inaccesible n: connectivity group\n\t\tconst createConnectivityMap = () => {\n\t\t\tconst size = level.numRows() * level.numColumns()\n\t\t\tconst traverse = (i: number, index: number) => {\n\t\t\t\tconst frontier: number[] = []\n\t\t\t\tfrontier.push(i)\n\t\t\t\twhile (frontier.length > 0) {\n\t\t\t\t\tconst i = frontier.pop()\n\t\t\t\t\tgetNeighbours(i).forEach((i) => {\n\t\t\t\t\t\tif (connectivityMap[i] < 0) {\n\t\t\t\t\t\t\tconnectivityMap[i] = index\n\t\t\t\t\t\t\tfrontier.push(i)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!connectivityMap) {\n\t\t\t\tconnectivityMap = new Array<number>(size)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconnectivityMap.length = size\n\t\t\t}\n\t\t\tconnectivityMap.fill(-1, 0, size)\n\t\t\tlet index = 0\n\t\t\tfor (let i = 0; i < costMap.length; i++) {\n\t\t\t\tif (connectivityMap[i] >= 0) { index++; continue }\n\t\t\t\ttraverse(i, index)\n\t\t\t\tindex++\n\t\t\t}\n\t\t}\n\n\t\tconst getCost = (node: number, neighbour: number) => {\n\t\t\t// Cost of destination tile\n\t\t\treturn costMap[neighbour]\n\t\t}\n\n\t\tconst getHeuristic = (node: number, goal: number) => {\n\t\t\t// Euclidian distance to target\n\t\t\tconst p1 = hash2Tile(node)\n\t\t\tconst p2 = hash2Tile(goal)\n\t\t\treturn p1.dist(p2)\n\t\t}\n\n\t\tconst getNeighbours = (node: number, diagonals?: boolean) => {\n\t\t\tconst n = []\n\t\t\tconst x = Math.floor(node % numColumns)\n\t\t\tconst left = x > 0 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Left) &&\n\t\t\t\tcostMap[node - 1] !== Infinity\n\t\t\tconst top = node >= numColumns &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Top) &&\n\t\t\t\tcostMap[node - numColumns] !== Infinity\n\t\t\tconst right = x < numColumns - 1 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Right) &&\n\t\t\t\tcostMap[node + 1] !== Infinity\n\t\t\tconst bottom = node < numColumns * numRows - numColumns - 1 &&\n\t\t\t\t(edgeMap[node] & EdgeMask.Bottom) &&\n\t\t\t\tcostMap[node + numColumns] !== Infinity\n\t\t\tif (diagonals) {\n\t\t\t\tif (left) {\n\t\t\t\t\tif (top) { n.push(node - numColumns - 1) }\n\t\t\t\t\tn.push(node - 1)\n\t\t\t\t\tif (bottom) { n.push(node + numColumns - 1) }\n\t\t\t\t}\n\t\t\t\tif (top) {\n\t\t\t\t\tn.push(node - numColumns)\n\t\t\t\t}\n\t\t\t\tif (right) {\n\t\t\t\t\tif (top) { n.push(node - numColumns + 1) }\n\t\t\t\t\tn.push(node + 1)\n\t\t\t\t\tif (bottom) { n.push(node + numColumns + 1) }\n\t\t\t\t}\n\t\t\t\tif (bottom) {\n\t\t\t\t\tn.push(node + numColumns)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (left) {\n\t\t\t\t\tn.push(node - 1)\n\t\t\t\t}\n\t\t\t\tif (top) {\n\t\t\t\t\tn.push(node - numColumns)\n\t\t\t\t}\n\t\t\t\tif (right) {\n\t\t\t\t\tn.push(node + 1)\n\t\t\t\t}\n\t\t\t\tif (bottom) {\n\t\t\t\t\tn.push(node + numColumns)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn n\n\t\t}\n\n\t\tconst levelComp: LevelComp = {\n\n\t\t\tid: \"level\",\n\n\t\t\ttileWidth() {\n\t\t\t\treturn opt.tileWidth\n\t\t\t},\n\n\t\t\ttileHeight() {\n\t\t\t\treturn opt.tileHeight\n\t\t\t},\n\n\t\t\tspawn(this: GameObj<LevelComp>, key: string | CompList<any>, ...args: Vec2Args): GameObj | null {\n\n\t\t\t\tconst p = vec2(...args)\n\n\t\t\t\tconst comps = (() => {\n\t\t\t\t\tif (typeof key === \"string\") {\n\t\t\t\t\t\tif (opt.tiles[key]) {\n\t\t\t\t\t\t\tif (typeof opt.tiles[key] !== \"function\") {\n\t\t\t\t\t\t\t\tthrow new Error(\"Level symbol def must be a function returning a component list\")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn opt.tiles[key](p)\n\t\t\t\t\t\t} else if (opt.wildcardTile) {\n\t\t\t\t\t\t\treturn opt.wildcardTile(key, p)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (Array.isArray(key)) {\n\t\t\t\t\t\treturn key\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Expected a symbol or a component list\")\n\t\t\t\t\t}\n\t\t\t\t})()\n\n\t\t\t\t// empty tile\n\t\t\t\tif (!comps) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tlet hasPos = false\n\t\t\t\tlet hasTile = false\n\n\t\t\t\tfor (const comp of comps) {\n\t\t\t\t\tif (comp.id === \"tile\") hasTile = true\n\t\t\t\t\tif (comp.id === \"pos\") hasPos = true\n\t\t\t\t}\n\n\t\t\t\tif (!hasPos) comps.push(pos())\n\t\t\t\tif (!hasTile) comps.push(tile())\n\n\t\t\t\tconst obj = level.add(comps)\n\n\t\t\t\tif (hasPos) {\n\t\t\t\t\tobj.tilePosOffset = obj.pos.clone()\n\t\t\t\t}\n\n\t\t\t\tobj.tilePos = p\n\n\t\t\t\tif (spatialMap) {\n\t\t\t\t\tinsertIntoSpatialMap(obj)\n\t\t\t\t\tthis.trigger(\"spatial_map_changed\")\n\t\t\t\t\tthis.trigger(\"navigation_map_invalid\")\n\t\t\t\t}\n\n\t\t\t\treturn obj\n\n\t\t\t},\n\n\t\t\tnumColumns() {\n\t\t\t\treturn numColumns\n\t\t\t},\n\n\t\t\tnumRows() {\n\t\t\t\treturn numRows\n\t\t\t},\n\n\t\t\tlevelWidth() {\n\t\t\t\treturn numColumns * this.tileWidth()\n\t\t\t},\n\n\t\t\tlevelHeight() {\n\t\t\t\treturn numRows * this.tileHeight()\n\t\t\t},\n\n\t\t\ttile2Pos(...args: Vec2Args) {\n\t\t\t\treturn vec2(...args).scale(this.tileWidth(), this.tileHeight())\n\t\t\t},\n\n\t\t\tpos2Tile(...args: Vec2Args) {\n\t\t\t\tconst p = vec2(...args)\n\t\t\t\treturn vec2(\n\t\t\t\t\tMath.floor(p.x / this.tileWidth()),\n\t\t\t\t\tMath.floor(p.y / this.tileHeight()),\n\t\t\t\t)\n\t\t\t},\n\n\t\t\tgetSpatialMap() {\n\t\t\t\tif (!spatialMap) {\n\t\t\t\t\tcreateSpatialMap()\n\t\t\t\t}\n\t\t\t\treturn spatialMap\n\t\t\t},\n\n\t\t\tonSpatialMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"spatial_map_changed\", cb)\n\t\t\t},\n\n\t\t\tonNavigationMapInvalid(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation_map_invalid\", cb)\n\t\t\t},\n\n\t\t\tgetAt(tilePos: Vec2) {\n\t\t\t\tif (!spatialMap) {\n\t\t\t\t\tcreateSpatialMap()\n\t\t\t\t}\n\t\t\t\tconst hash = tile2Hash(tilePos)\n\t\t\t\treturn spatialMap[hash] || []\n\t\t\t},\n\n\t\t\tupdate() {\n\t\t\t\tif (spatialMap) {\n\t\t\t\t\tupdateSpatialMap()\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tinvalidateNavigationMap() {\n\t\t\t\tcostMap = null\n\t\t\t\tedgeMap = null\n\t\t\t\tconnectivityMap = null\n\t\t\t},\n\n\t\t\tonNavigationMapChanged(this: GameObj<LevelComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation_map_changed\", cb)\n\t\t\t},\n\n\t\t\tgetTilePath(this: GameObj<LevelComp>, from: Vec2, to: Vec2, opts: PathFindOpt = {}) {\n\t\t\t\tif (!costMap) {\n\t\t\t\t\tcreateCostMap()\n\t\t\t\t}\n\t\t\t\tif (!edgeMap) {\n\t\t\t\t\tcreateEdgeMap()\n\t\t\t\t}\n\t\t\t\tif (!connectivityMap) {\n\t\t\t\t\tcreateConnectivityMap()\n\t\t\t\t}\n\n\t\t\t\t// Tiles are outside the grid\n\t\t\t\tif (from.x < 0 || from.x >= numColumns ||\n\t\t\t\t\tfrom.y < 0 || from.y >= numRows) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\tif (to.x < 0 || to.x >= numColumns ||\n\t\t\t\t\tto.y < 0 || to.y >= numRows) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\tconst start = tile2Hash(from)\n\t\t\t\tconst goal = tile2Hash(to)\n\n\t\t\t\t// Tiles are not accessible\n\t\t\t\t// If we test the start tile, we may get stuck\n\t\t\t\t/*if (costMap[start] === Infinity) {\n\t\t\t\t\treturn null\n\t\t\t\t}*/\n\t\t\t\tif (costMap[goal] === Infinity) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\t// Same Tile, no waypoints needed\n\t\t\t\tif (start === goal) {\n\t\t\t\t\treturn []\n\t\t\t\t}\n\n\t\t\t\t// Tiles are not within the same section\n\t\t\t\t// If we test the start tile when invalid, we may get stuck\n\t\t\t\tif (connectivityMap[start] != -1 && connectivityMap[start] !== connectivityMap[goal]) {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\n\t\t\t\t// Find a path\n\t\t\t\tinterface CostNode { cost: number, node: number }\n\t\t\t\tconst frontier = new BinaryHeap<CostNode>((a, b) => a.cost < b.cost)\n\t\t\t\tfrontier.insert({ cost: 0, node: start })\n\n\t\t\t\tconst cameFrom = new Map<number, number>()\n\t\t\t\tcameFrom.set(start, start)\n\t\t\t\tconst costSoFar = new Map<number, number>()\n\t\t\t\tcostSoFar.set(start, 0)\n\n\t\t\t\twhile (frontier.length !== 0) {\n\t\t\t\t\tconst current = frontier.remove()?.node\n\n\t\t\t\t\tif (current === goal)\n\t\t\t\t\t\tbreak\n\n\t\t\t\t\tconst neighbours = getNeighbours(current, opts.allowDiagonals)\n\t\t\t\t\tfor (const next of neighbours) {\n\t\t\t\t\t\tconst newCost = (costSoFar.get(current) || 0) +\n\t\t\t\t\t\t\tgetCost(current, next) +\n\t\t\t\t\t\t\tgetHeuristic(next, goal)\n\t\t\t\t\t\tif (!costSoFar.has(next) || newCost < costSoFar.get(next)) {\n\t\t\t\t\t\t\tcostSoFar.set(next, newCost)\n\t\t\t\t\t\t\tfrontier.insert({ cost: newCost, node: next })\n\t\t\t\t\t\t\tcameFrom.set(next, current)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst path = []\n\t\t\t\tlet node = goal\n\t\t\t\tconst p = hash2Tile(node)\n\t\t\t\tpath.push(p)\n\t\t\t\twhile (node !== start) {\n\t\t\t\t\tnode = cameFrom.get(node)\n\t\t\t\t\tconst p = hash2Tile(node)\n\t\t\t\t\tpath.push(p)\n\t\t\t\t}\n\t\t\t\treturn path.reverse()\n\t\t\t},\n\n\t\t\tgetPath(this: GameObj<LevelComp>, from: Vec2, to: Vec2, opts: PathFindOpt = {}) {\n\t\t\t\tconst tw = this.tileWidth()\n\t\t\t\tconst th = this.tileHeight()\n\t\t\t\tconst path = this.getTilePath(\n\t\t\t\t\tthis.pos2Tile(from),\n\t\t\t\t\tthis.pos2Tile(to),\n\t\t\t\t\topts,\n\t\t\t\t)\n\t\t\t\tif (path) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tfrom,\n\t\t\t\t\t\t...path\n\t\t\t\t\t\t\t.slice(1, -1)\n\t\t\t\t\t\t\t.map((tilePos) => tilePos.scale(tw, th).add(tw / 2, th / 2)),\n\t\t\t\t\t\tto,\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\n\t\t}\n\n\t\tlevel.use(levelComp)\n\n\t\tlevel.onNavigationMapInvalid(() => {\n\t\t\tlevel.invalidateNavigationMap()\n\t\t\tlevel.trigger(\"navigation_map_changed\")\n\t\t})\n\n\t\tmap.forEach((row, i) => {\n\t\t\tconst keys = row.split(\"\")\n\t\t\tnumColumns = Math.max(keys.length, numColumns)\n\t\t\tkeys.forEach((key, j) => {\n\t\t\t\tlevel.spawn(key, vec2(j, i))\n\t\t\t})\n\t\t})\n\n\t\treturn level\n\n\t}\n\n\tfunction agent(opts: AgentCompOpt = {}) : AgentComp {\n\t\tlet target: Vec2 | null = null\n\t\tlet path: Vec2[] | null = null\n\t\tlet index: number | null = null\n\t\tlet navMapChangedEvent: EventController | null = null\n\t\treturn {\n\t\t\tid: \"agent\",\n\t\t\trequire: [\"pos\", \"tile\"],\n\t\t\tagentSpeed: opts.speed ?? 100,\n\t\t\tallowDiagonals: opts.allowDiagonals ?? true,\n\t\t\tgetDistanceToTarget(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\treturn target ? this.pos.dist(target) : 0\n\t\t\t},\n\t\t\tgetNextLocation() {\n\t\t\t\treturn path && index ? path[index] : null\n\t\t\t},\n\t\t\tgetPath() {\n\t\t\t\treturn path ? path.slice() : null\n\t\t\t},\n\t\t\tgetTarget() {\n\t\t\t\treturn target\n\t\t\t},\n\t\t\tisNavigationFinished() {\n\t\t\t\treturn path ? index === null : true\n\t\t\t},\n\t\t\tisTargetReachable() {\n\t\t\t\treturn path !== null\n\t\t\t},\n\t\t\tisTargetReached(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\treturn target ? this.pos.eq(target) : true\n\t\t\t},\n\t\t\tsetTarget(this: GameObj<AgentComp | TileComp | PosComp>, p: Vec2) {\n\t\t\t\ttarget = p\n\t\t\t\tpath = this.getLevel().getPath(this.pos, target, {\n\t\t\t\t\tallowDiagonals: this.allowDiagonals,\n\t\t\t\t})\n\t\t\t\tindex = path ? 0 : null\n\t\t\t\tif (path) {\n\t\t\t\t\tif (!navMapChangedEvent) {\n\t\t\t\t\t\tnavMapChangedEvent = this.getLevel().onNavigationMapChanged(() => {\n\t\t\t\t\t\t\tif (path && index !== null) {\n\t\t\t\t\t\t\t\tpath = this.getLevel().getPath(this.pos, target, {\n\t\t\t\t\t\t\t\t\tallowDiagonals: this.allowDiagonals,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tindex = path ? 0 : null\n\t\t\t\t\t\t\t\tif (path) {\n\t\t\t\t\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tthis.onDestroy(() => navMapChangedEvent.cancel())\n\t\t\t\t\t}\n\t\t\t\t\tthis.trigger(\"navigation-started\", this)\n\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t} else {\n\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdate(this: GameObj<AgentComp | PosComp>) {\n\t\t\t\tif (path && index !== null) {\n\t\t\t\t\tif (this.pos.sdist(path[index]) < 2) {\n\t\t\t\t\t\tif (index === path.length - 1) {\n\t\t\t\t\t\t\tthis.pos = target.clone()\n\t\t\t\t\t\t\tindex = null\n\t\t\t\t\t\t\tthis.trigger(\"navigation-ended\", this)\n\t\t\t\t\t\t\tthis.trigger(\"target-reached\", this)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tindex++\n\t\t\t\t\t\t\tthis.trigger(\"navigation-next\", this, path[index])\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tthis.moveTo(path[index], this.agentSpeed)\n\t\t\t\t}\n\t\t\t},\n\t\t\tonNavigationStarted(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-started\", cb)\n\t\t\t},\n\t\t\tonNavigationNext(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-next\", cb)\n\t\t\t},\n\t\t\tonNavigationEnded(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"navigation-ended\", cb)\n\t\t\t},\n\t\t\tonTargetReached(this: GameObj<AgentComp>, cb: () => void) {\n\t\t\t\treturn this.on(\"target-reached\", cb)\n\t\t\t},\n\t\t\tinspect() {\n\t\t\t\treturn JSON.stringify({\n\t\t\t\t\ttarget: JSON.stringify(target),\n\t\t\t\t\tpath: JSON.stringify(path),\n\t\t\t\t})\n\t\t\t},\n\t\t}\n\t}\n\n\tfunction record(frameRate?): Recording {\n\n\t\tconst stream = app.canvas().captureStream(frameRate)\n\t\tconst audioDest = audio.ctx.createMediaStreamDestination()\n\n\t\taudio.masterNode.connect(audioDest)\n\n\t\t// TODO: Enabling audio results in empty video if no audio received\n\t\t// const audioStream = audioDest.stream\n\t\t// const [firstAudioTrack] = audioStream.getAudioTracks()\n\n\t\t// stream.addTrack(firstAudioTrack);\n\n\t\tconst recorder = new MediaRecorder(stream)\n\t\tconst chunks = []\n\n\t\trecorder.ondataavailable = (e) => {\n\t\t\tif (e.data.size > 0) {\n\t\t\t\tchunks.push(e.data)\n\t\t\t}\n\t\t}\n\n\t\trecorder.onerror = () => {\n\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\tstream.getTracks().forEach(t => t.stop())\n\t\t}\n\n\t\trecorder.start()\n\n\t\treturn {\n\n\t\t\tresume() {\n\t\t\t\trecorder.resume()\n\t\t\t},\n\n\t\t\tpause() {\n\t\t\t\trecorder.pause()\n\t\t\t},\n\n\t\t\tstop(): Promise<Blob> {\n\t\t\t\trecorder.stop()\n\t\t\t\t// cleanup\n\t\t\t\taudio.masterNode.disconnect(audioDest)\n\t\t\t\tstream.getTracks().forEach(t => t.stop())\n\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\trecorder.onstop = () => {\n\t\t\t\t\t\tresolve(new Blob(chunks, {\n\t\t\t\t\t\t\ttype: \"video/mp4\",\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t},\n\n\t\t\tdownload(filename = \"kaboom.mp4\") {\n\t\t\t\tthis.stop().then((blob) => downloadBlob(filename, blob))\n\t\t\t},\n\n\t\t}\n\n\t}\n\n\tfunction isFocused(): boolean {\n\t\treturn document.activeElement === app.canvas()\n\t}\n\n\tfunction destroy(obj: GameObj) {\n\t\tobj.destroy()\n\t}\n\n\t// aliases for root game obj operations\n\tconst add: KaboomCtx[\"add\"] = game.root.add.bind(game.root)\n\tconst readd: KaboomCtx[\"readd\"] = game.root.readd.bind(game.root)\n\tconst destroyAll: KaboomCtx[\"destroyAll\"] = game.root.removeAll.bind(game.root)\n\tconst get: KaboomCtx[\"get\"] = game.root.get.bind(game.root)\n\n\tfunction boom(speed: number = 2, size: number = 1): Comp {\n\t\tlet time = 0\n\t\treturn {\n\t\t\tid: \"boom\",\n\t\t\trequire: [ \"scale\" ],\n\t\t\tupdate(this: GameObj<ScaleComp>) {\n\t\t\t\tconst s = Math.sin(time * speed) * size\n\t\t\t\tif (s < 0) {\n\t\t\t\t\tthis.destroy()\n\t\t\t\t}\n\t\t\t\tthis.scale = vec2(s)\n\t\t\t\ttime += dt()\n\t\t\t},\n\t\t}\n\t}\n\n\tconst kaSprite = loadSprite(null, kaSpriteSrc)\n\tconst boomSprite = loadSprite(null, boomSpriteSrc)\n\n\tfunction addKaboom(p: Vec2, opt: BoomOpt = {}): GameObj {\n\n\t\tconst kaboom = add([\n\t\t\tpos(p),\n\t\t\tstay(),\n\t\t])\n\n\t\tconst speed = (opt.speed || 1) * 5\n\t\tconst s = opt.scale || 1\n\n\t\tkaboom.add([\n\t\t\tsprite(boomSprite),\n\t\t\tscale(0),\n\t\t\tanchor(\"center\"),\n\t\t\tboom(speed, s),\n\t\t\t...opt.comps ?? [],\n\t\t])\n\n\t\tconst ka = kaboom.add([\n\t\t\tsprite(kaSprite),\n\t\t\tscale(0),\n\t\t\tanchor(\"center\"),\n\t\t\ttimer(),\n\t\t\t...opt.comps ?? [],\n\t\t])\n\n\t\tka.wait(0.4 / speed, () => ka.use(boom(speed, s)))\n\t\tka.onDestroy(() => kaboom.destroy())\n\n\t\treturn kaboom\n\n\t}\n\n\tfunction updateFrame() {\n\t\t// update every obj\n\t\tgame.root.update()\n\t}\n\n\tclass Collision {\n\t\tsource: GameObj\n\t\ttarget: GameObj\n\t\tdisplacement: Vec2\n\t\tresolved: boolean = false\n\t\tconstructor(source: GameObj, target: GameObj, dis: Vec2, resolved = false) {\n\t\t\tthis.source = source\n\t\t\tthis.target = target\n\t\t\tthis.displacement = dis\n\t\t\tthis.resolved = resolved\n\t\t}\n\t\treverse() {\n\t\t\treturn new Collision(\n\t\t\t\tthis.target,\n\t\t\t\tthis.source,\n\t\t\t\tthis.displacement.scale(-1),\n\t\t\t\tthis.resolved,\n\t\t\t)\n\t\t}\n\t\thasOverlap() {\n\t\t\treturn !this.displacement.isZero()\n\t\t}\n\t\tisLeft() {\n\t\t\treturn this.displacement.x > 0\n\t\t}\n\t\tisRight() {\n\t\t\treturn this.displacement.x < 0\n\t\t}\n\t\tisTop() {\n\t\t\treturn this.displacement.y > 0\n\t\t}\n\t\tisBottom() {\n\t\t\treturn this.displacement.y < 0\n\t\t}\n\t\tpreventResolution() {\n\t\t\tthis.resolved = true\n\t\t}\n\t}\n\n\tfunction checkFrame() {\n\n\t\t// TODO: persistent grid?\n\t\t// start a spatial hash grid for more efficient collision detection\n\t\tconst grid: Record<number, Record<number, GameObj<AreaComp>[]>> = {}\n\t\tconst cellSize = gopt.hashGridSize || DEF_HASH_GRID_SIZE\n\n\t\t// current transform\n\t\tlet tr = new Mat4()\n\n\t\t// a local transform stack\n\t\tconst stack = []\n\n\t\tfunction checkObj(obj: GameObj) {\n\n\t\t\tstack.push(tr.clone())\n\n\t\t\t// Update object transform here. This will be the transform later used in rendering.\n\t\t\tif (obj.pos) tr.translate(obj.pos)\n\t\t\tif (obj.scale) tr.scale(obj.scale)\n\t\t\tif (obj.angle) tr.rotate(obj.angle)\n\t\t\tobj.transform = tr.clone()\n\n\t\t\tif (obj.c(\"area\") && !obj.paused) {\n\n\t\t\t\t// TODO: only update worldArea if transform changed\n\t\t\t\tconst aobj = obj as GameObj<AreaComp>\n\t\t\t\tconst area = aobj.worldArea()\n\t\t\t\tconst bbox = area.bbox()\n\n\t\t\t\t// Get spatial hash grid coverage\n\t\t\t\tconst xmin = Math.floor(bbox.pos.x / cellSize)\n\t\t\t\tconst ymin = Math.floor(bbox.pos.y / cellSize)\n\t\t\t\tconst xmax = Math.ceil((bbox.pos.x + bbox.width) / cellSize)\n\t\t\t\tconst ymax = Math.ceil((bbox.pos.y + bbox.height) / cellSize)\n\n\t\t\t\t// Cache objs that are already checked\n\t\t\t\tconst checked = new Set()\n\n\t\t\t\t// insert & check against all covered grids\n\t\t\t\tfor (let x = xmin; x <= xmax; x++) {\n\t\t\t\t\tfor (let y = ymin; y <= ymax; y++) {\n\t\t\t\t\t\tif(!grid[x]) {\n\t\t\t\t\t\t\tgrid[x] = {}\n\t\t\t\t\t\t\tgrid[x][y] = [aobj]\n\t\t\t\t\t\t} else if(!grid[x][y]) {\n\t\t\t\t\t\t\tgrid[x][y] = [aobj]\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst cell = grid[x][y]\n\t\t\t\t\t\t\tcheck: for (const other of cell) {\n\t\t\t\t\t\t\t\tif (!other.exists()) {\n\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (checked.has(other.id)) {\n\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const tag of aobj.collisionIgnore) {\n\t\t\t\t\t\t\t\t\tif (other.is(tag)) {\n\t\t\t\t\t\t\t\t\t\tcontinue check\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfor (const tag of other.collisionIgnore) {\n\t\t\t\t\t\t\t\t\tif (aobj.is(tag)) {\n\t\t\t\t\t\t\t\t\t\tcontinue check\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// TODO: cache the world area here\n\t\t\t\t\t\t\t\tconst res = sat(aobj.worldArea(), other.worldArea())\n\t\t\t\t\t\t\t\tif (res) {\n\t\t\t\t\t\t\t\t\t// TODO: rehash if the object position is changed after resolution?\n\t\t\t\t\t\t\t\t\tconst col1 = new Collision(aobj, other, res)\n\t\t\t\t\t\t\t\t\taobj.trigger(\"collideUpdate\", other, col1)\n\t\t\t\t\t\t\t\t\tconst col2 = col1.reverse()\n\t\t\t\t\t\t\t\t\t// resolution only has to happen once\n\t\t\t\t\t\t\t\t\tcol2.resolved = col1.resolved\n\t\t\t\t\t\t\t\t\tother.trigger(\"collideUpdate\", aobj, col2)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchecked.add(other.id)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcell.push(aobj)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tobj.children.forEach(checkObj)\n\t\t\ttr = stack.pop()\n\n\t\t}\n\n\t\tcheckObj(game.root)\n\n\t}\n\n\tfunction drawFrame() {\n\n\t\t// calculate camera matrix\n\t\tconst cam = game.cam\n\t\tconst shake = Vec2.fromAngle(rand(0, 360)).scale(cam.shake)\n\n\t\tcam.shake = lerp(cam.shake, 0, 5 * dt())\n\t\tcam.transform = new Mat4()\n\t\t\t.translate(center())\n\t\t\t.scale(cam.scale)\n\t\t\t.rotate(cam.angle)\n\t\t\t.translate((cam.pos ?? center()).scale(-1).add(shake))\n\n\t\tgame.root.draw()\n\t\tflush()\n\n\t}\n\n\tfunction drawLoadScreen() {\n\n\t\tconst progress = loadProgress()\n\n\t\tif (game.events.numListeners(\"loading\") > 0) {\n\t\t\tgame.events.trigger(\"loading\", progress)\n\t\t} else {\n\t\t\tdrawUnscaled(() => {\n\t\t\t\tconst w = width() / 2\n\t\t\t\tconst h = 24\n\t\t\t\tconst pos = vec2(width() / 2, height() / 2).sub(vec2(w / 2, h / 2))\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: vec2(0),\n\t\t\t\t\twidth: width(),\n\t\t\t\t\theight: height(),\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t})\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: pos,\n\t\t\t\t\twidth: w,\n\t\t\t\t\theight: h,\n\t\t\t\t\tfill: false,\n\t\t\t\t\toutline: {\n\t\t\t\t\t\twidth: 4,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\tdrawRect({\n\t\t\t\t\tpos: pos,\n\t\t\t\t\twidth: w * progress,\n\t\t\t\t\theight: h,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t}\n\n\tfunction drawInspectText(pos, txt) {\n\n\t\tdrawUnscaled(() => {\n\n\t\t\tconst pad = vec2(8)\n\n\t\t\tpushTransform()\n\t\t\tpushTranslate(pos)\n\n\t\t\tconst ftxt = formatText({\n\t\t\t\ttext: txt,\n\t\t\t\tfont: DBG_FONT,\n\t\t\t\tsize: 16,\n\t\t\t\tpos: pad,\n\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\tfixed: true,\n\t\t\t})\n\n\t\t\tconst bw = ftxt.width + pad.x * 2\n\t\t\tconst bh = ftxt.height + pad.x * 2\n\n\t\t\tif (pos.x + bw >= width()) {\n\t\t\t\tpushTranslate(vec2(-bw, 0))\n\t\t\t}\n\n\t\t\tif (pos.y + bh >= height()) {\n\t\t\t\tpushTranslate(vec2(0, -bh))\n\t\t\t}\n\n\t\t\tdrawRect({\n\t\t\t\twidth: bw,\n\t\t\t\theight: bh,\n\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\tradius: 4,\n\t\t\t\topacity: 0.8,\n\t\t\t\tfixed: true,\n\t\t\t})\n\n\t\t\tdrawFormattedText(ftxt)\n\t\t\tpopTransform()\n\n\t\t})\n\n\t}\n\n\tfunction drawDebug() {\n\n\t\tif (debug.inspect) {\n\n\t\t\tlet inspecting = null\n\n\t\t\tfor (const obj of game.root.get(\"*\", { recursive: true })) {\n\t\t\t\tif (obj.c(\"area\") && obj.isHovering()) {\n\t\t\t\t\tinspecting = obj\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgame.root.drawInspect()\n\n\t\t\tif (inspecting) {\n\n\t\t\t\tconst lines = []\n\t\t\t\tconst data = inspecting.inspect()\n\n\t\t\t\tfor (const tag in data) {\n\t\t\t\t\tif (data[tag]) {\n\t\t\t\t\t\tlines.push(`${tag}: ${data[tag]}`)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlines.push(`${tag}`)\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tdrawInspectText(contentToView(mousePos()), lines.join(\"\\n\"))\n\n\t\t\t}\n\n\t\t\tdrawInspectText(vec2(8), `FPS: ${debug.fps()}`)\n\n\t\t}\n\n\t\tif (debug.paused) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\t// top right corner\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(width(), 0)\n\t\t\t\tpushTranslate(-8, 8)\n\n\t\t\t\tconst size = 32\n\n\t\t\t\t// bg\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: size,\n\t\t\t\t\theight: size,\n\t\t\t\t\tanchor: \"topright\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tradius: 4,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// pause icon\n\t\t\t\tfor (let i = 1; i <= 2; i++) {\n\t\t\t\t\tdrawRect({\n\t\t\t\t\t\twidth: 4,\n\t\t\t\t\t\theight: size * 0.6,\n\t\t\t\t\t\tanchor: \"center\",\n\t\t\t\t\t\tpos: vec2(-size / 3 * i, size * 0.5),\n\t\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\t\tradius: 2,\n\t\t\t\t\t\tfixed: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.timeScale !== 1) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\t// bottom right corner\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(width(), height())\n\t\t\t\tpushTranslate(-8, -8)\n\n\t\t\t\tconst pad = 8\n\n\t\t\t\t// format text first to get text size\n\t\t\t\tconst ftxt = formatText({\n\t\t\t\t\ttext: debug.timeScale.toFixed(1),\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tsize: 16,\n\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\tpos: vec2(-pad),\n\t\t\t\t\tanchor: \"botright\",\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// bg\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: ftxt.width + pad * 2 + pad * 4,\n\t\t\t\t\theight: ftxt.height + pad * 2,\n\t\t\t\t\tanchor: \"botright\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tradius: 4,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\t// fast forward / slow down icon\n\t\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\t\tconst flipped = debug.timeScale < 1\n\t\t\t\t\tdrawTriangle({\n\t\t\t\t\t\tp1: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad),\n\t\t\t\t\t\tp2: vec2(-ftxt.width - pad * (flipped ? 2 : 3.5), -pad - ftxt.height),\n\t\t\t\t\t\tp3: vec2(-ftxt.width - pad * (flipped ? 3.5 : 2), -pad - ftxt.height / 2),\n\t\t\t\t\t\tpos: vec2(-i * pad * 1 + (flipped ? -pad * 0.5 : 0), 0),\n\t\t\t\t\t\tcolor: rgb(255, 255, 255),\n\t\t\t\t\t\tfixed: true,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\t// text\n\t\t\t\tdrawFormattedText(ftxt)\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.curRecording) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(0, height())\n\t\t\t\tpushTranslate(24, -24)\n\n\t\t\t\tdrawCircle({\n\t\t\t\t\tradius: 12,\n\t\t\t\t\tcolor: rgb(255, 0, 0),\n\t\t\t\t\topacity: wave(0, 1, app.time() * 4),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t\tif (debug.showLog && game.logs.length > 0) {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tpushTransform()\n\t\t\t\tpushTranslate(0, height())\n\t\t\t\tpushTranslate(8, -8)\n\n\t\t\t\tconst pad = 8\n\n\t\t\t\tconst ftext = formatText({\n\t\t\t\t\ttext: game.logs.join(\"\\n\"),\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tpos: vec2(pad, -pad),\n\t\t\t\t\tanchor: \"botleft\",\n\t\t\t\t\tsize: 16,\n\t\t\t\t\twidth: width() * 0.6,\n\t\t\t\t\tlineSpacing: pad / 2,\n\t\t\t\t\tfixed: true,\n\t\t\t\t\tstyles: {\n\t\t\t\t\t\t\"time\": { color: rgb(127, 127, 127) },\n\t\t\t\t\t\t\"info\": { color: rgb(255, 255, 255) },\n\t\t\t\t\t\t\"error\": { color: rgb(255, 0, 127) },\n\t\t\t\t\t},\n\t\t\t\t})\n\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: ftext.width + pad * 2,\n\t\t\t\t\theight: ftext.height + pad * 2,\n\t\t\t\t\tanchor: \"botleft\",\n\t\t\t\t\tcolor: rgb(0, 0, 0),\n\t\t\t\t\tradius: 4,\n\t\t\t\t\topacity: 0.8,\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tdrawFormattedText(ftext)\n\t\t\t\tpopTransform()\n\n\t\t\t})\n\n\t\t}\n\n\t}\n\n\tif (gopt.debug !== false) {\n\t\tenterDebugMode()\n\t}\n\n\tif (gopt.burp) {\n\t\tenterBurpMode()\n\t}\n\n\tfunction onLoading(action: (progress: number) => void) {\n\t\tgame.events.on(\"loading\", action)\n\t}\n\n\tfunction onResize(action: () => void) {\n\t\tapp.onResize(action)\n\t}\n\n\tfunction onError(action: (err: Error) => void) {\n\t\tgame.events.on(\"error\", action)\n\t}\n\n\tfunction handleErr(err: Error) {\n\n\t\t// TODO: this should only run once\n\t\tapp.run(() => {\n\n\t\t\tdrawUnscaled(() => {\n\n\t\t\t\tconst pad = 32\n\t\t\t\tconst gap = 16\n\t\t\t\tconst gw = width()\n\t\t\t\tconst gh = height()\n\n\t\t\t\tconst textStyle = {\n\t\t\t\t\tsize: 36,\n\t\t\t\t\twidth: gw - pad * 2,\n\t\t\t\t\tletterSpacing: 4,\n\t\t\t\t\tlineSpacing: 4,\n\t\t\t\t\tfont: DBG_FONT,\n\t\t\t\t\tfixed: true,\n\t\t\t\t}\n\n\t\t\t\tdrawRect({\n\t\t\t\t\twidth: gw,\n\t\t\t\t\theight: gh,\n\t\t\t\t\tcolor: rgb(0, 0, 255),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tconst title = formatText({\n\t\t\t\t\t...textStyle,\n\t\t\t\t\ttext: err.name,\n\t\t\t\t\tpos: vec2(pad),\n\t\t\t\t\tcolor: rgb(255, 128, 0),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tdrawFormattedText(title)\n\n\t\t\t\tdrawText({\n\t\t\t\t\t...textStyle,\n\t\t\t\t\ttext: err.message,\n\t\t\t\t\tpos: vec2(pad, pad + title.height + gap),\n\t\t\t\t\tfixed: true,\n\t\t\t\t})\n\n\t\t\t\tpopTransform()\n\t\t\t\tgame.events.trigger(\"error\", err)\n\n\t\t\t})\n\n\t\t})\n\n\t}\n\n\tfunction onCleanup(action: () => void) {\n\t\tgc.push(action)\n\t}\n\n\tfunction quit() {\n\n\t\tgame.events.onOnce(\"frameEnd\", () => {\n\n\t\t\tapp.quit()\n\n\t\t\tfor (const name in winEvents) {\n\t\t\t\twindow.removeEventListener(name, winEvents[name])\n\t\t\t}\n\n\t\t\t// clear canvas\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT)\n\n\t\t\t// unbind everything\n\t\t\tconst numTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS)\n\n\t\t\tfor (let unit = 0; unit < numTextureUnits; unit++) {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + unit)\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, null)\n\t\t\t\tgl.bindTexture(gl.TEXTURE_CUBE_MAP, null)\n\t\t\t}\n\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, null)\n\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null)\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null)\n\n\t\t\t// run all scattered gc events\n\t\t\tgc.forEach((f) => f())\n\n\t\t\t// delete webgl buffers\n\t\t\tgl.deleteBuffer(gfx.vbuf)\n\t\t\tgl.deleteBuffer(gfx.ibuf)\n\n\t\t})\n\n\t}\n\n\tfunction tween<V extends LerpValue>(\n\t\tfrom: V,\n\t\tto: V,\n\t\tduration: number,\n\t\tsetValue: (value: V) => void,\n\t\teaseFunc = easings.linear,\n\t): TweenController {\n\t\tlet curTime = 0\n\t\tconst onEndEvents: Array<() => void> = []\n\t\tconst ev = onUpdate(() => {\n\t\t\tcurTime += dt()\n\t\t\tconst t = Math.min(curTime / duration, 1)\n\t\t\tsetValue(lerp(from, to, easeFunc(t)))\n\t\t\tif (t === 1) {\n\t\t\t\tev.cancel()\n\t\t\t\tsetValue(to)\n\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t}\n\t\t})\n\t\treturn {\n\t\t\tget paused() {\n\t\t\t\treturn ev.paused\n\t\t\t},\n\t\t\tset paused(p) {\n\t\t\t\tev.paused = p\n\t\t\t},\n\t\t\tonEnd(action: () => void) {\n\t\t\t\tonEndEvents.push(action)\n\t\t\t},\n\t\t\tthen(action: () => void) {\n\t\t\t\tthis.onEnd(action)\n\t\t\t\treturn this\n\t\t\t},\n\t\t\tcancel() {\n\t\t\t\tev.cancel()\n\t\t\t},\n\t\t\tfinish() {\n\t\t\t\tev.cancel()\n\t\t\t\tsetValue(to)\n\t\t\t\tonEndEvents.forEach((action) => action())\n\t\t\t},\n\t\t}\n\t}\n\n\tlet isFirstFrame = true\n\n\t// main game loop\n\tapp.run(() => {\n\n\t\tif (!assets.loaded) {\n\t\t\tif (loadProgress() === 1 && !isFirstFrame) {\n\t\t\t\tassets.loaded = true\n\t\t\t\tgame.events.trigger(\"load\")\n\t\t\t}\n\t\t}\n\n\t\tif (!assets.loaded && gopt.loadingScreen !== false || isFirstFrame) {\n\t\t\tframeStart()\n\t\t\t// TODO: Currently if assets are not initially loaded no updates or timers will be run, however they will run if loadingScreen is set to false. What's the desired behavior or should we make them consistent?\n\t\t\tdrawLoadScreen()\n\t\t\tframeEnd()\n\t\t} else {\n\t\t\tif (!debug.paused) updateFrame()\n\t\t\tcheckFrame()\n\t\t\tframeStart()\n\t\t\tdrawFrame()\n\t\t\tif (gopt.debug !== false) drawDebug()\n\t\t\tframeEnd()\n\t\t}\n\n\t\tif (isFirstFrame) {\n\t\t\tisFirstFrame = false\n\t\t}\n\n\t\tgame.events.trigger(\"frameEnd\")\n\n\t})\n\n\t// update viewport based on user setting and fullscreen state\n\tfunction updateViewport() {\n\n\t\t// content size (scaled content size, with scale, stretch and letterbox)\n\t\t// view size (unscaled viewport size)\n\t\t// window size (will be the same as view size except letterbox mode)\n\n\t\t// canvas size\n\t\tconst pd = pixelDensity\n\t\tconst cw = gl.drawingBufferWidth / pd\n\t\tconst ch = gl.drawingBufferHeight / pd\n\n\t\tif (app.isFullscreen()) {\n\t\t\tconst ww = window.innerWidth\n\t\t\tconst wh = window.innerHeight\n\t\t\tconst rw = ww / wh\n\t\t\tconst rc = cw / ch\n\t\t\tif (rw > rc) {\n\t\t\t\tconst sw = window.innerHeight * rc\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: (ww - sw) / 2,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: sw,\n\t\t\t\t\theight: wh,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst sh = window.innerWidth / rc\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: (wh - sh) / 2,\n\t\t\t\t\twidth: ww,\n\t\t\t\t\theight: sh,\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t}\n\n\t\tif (gopt.letterbox) {\n\n\t\t\tif (!gopt.width || !gopt.height) {\n\t\t\t\tthrow new Error(\"Letterboxing requires width and height defined.\")\n\t\t\t}\n\n\t\t\tconst rc = cw / ch\n\t\t\tconst rg = gopt.width / gopt.height\n\n\t\t\tif (rc > rg) {\n\t\t\t\tconst sw = ch * rg\n\t\t\t\tconst x = (cw - sw) / 2\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: x,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: sw,\n\t\t\t\t\theight: ch,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst sh = cw / rg\n\t\t\t\tconst y = (ch - sh) / 2\n\t\t\t\tgfx.viewport = {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: y,\n\t\t\t\t\twidth: cw,\n\t\t\t\t\theight: sh,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn\n\n\t\t}\n\n\t\tif (gopt.stretch) {\n\t\t\tif (!gopt.width || !gopt.height) {\n\t\t\t\tthrow new Error(\"Stretching requires width and height defined.\")\n\t\t\t}\n\t\t}\n\n\t\tgfx.viewport = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: cw,\n\t\t\theight: ch,\n\t\t}\n\n\t}\n\n\t// TODO: white artifact when scrolling, but disappears when done\n\t// TODO: if you resize to larger than the initial size it'll leave white space\n\t// TODO: this clears on scene change\n\tapp.onResize(() => {\n\t\tif (app.isFullscreen()) return\n\t\tconst fixedSize = gopt.width && gopt.height\n\t\tif (fixedSize && !gopt.stretch && !gopt.letterbox) return\n\t\tcanvas.width = canvas.offsetWidth * pixelDensity\n\t\tcanvas.height = canvas.offsetHeight * pixelDensity\n\t\tupdateViewport()\n\t\tif (!fixedSize) {\n\t\t\tgfx.frameBuffer.free()\n\t\t\tgfx.frameBuffer = new FrameBuffer(gl.drawingBufferWidth, gl.drawingBufferHeight)\n\t\t\tgfx.width = gl.drawingBufferWidth / pixelDensity\n\t\t\tgfx.height = gl.drawingBufferHeight / pixelDensity\n\t\t}\n\t})\n\n\tupdateViewport()\n\n\t// the exported ctx handle\n\tconst ctx: KaboomCtx = {\n\t\tVERSION,\n\t\t// asset load\n\t\tloadRoot,\n\t\tloadProgress,\n\t\tloadSprite,\n\t\tloadSpriteAtlas,\n\t\tloadSound,\n\t\tloadBitmapFont,\n\t\tloadFont,\n\t\tloadShader,\n\t\tloadShaderURL,\n\t\tloadAseprite,\n\t\tloadPedit,\n\t\tloadBean,\n\t\tloadJSON,\n\t\tload,\n\t\tgetSprite,\n\t\tgetSound,\n\t\tgetFont,\n\t\tgetBitmapFont,\n\t\tgetShader,\n\t\tgetAsset,\n\t\tAsset,\n\t\tSpriteData,\n\t\tSoundData,\n\t\t// query\n\t\twidth,\n\t\theight,\n\t\tcenter,\n\t\tdt,\n\t\ttime: app.time,\n\t\tscreenshot: app.screenshot,\n\t\trecord,\n\t\tisFocused,\n\t\tsetCursor: app.setCursor,\n\t\tgetCursor: app.getCursor,\n\t\tsetCursorLocked: app.setCursorLocked,\n\t\tisCursorLocked: app.isCursorLocked,\n\t\tsetFullscreen: app.setFullscreen,\n\t\tisFullscreen: app.isFullscreen,\n\t\tisTouchscreen: app.isTouchscreen,\n\t\tonLoad,\n\t\tonLoading,\n\t\tonResize,\n\t\tonGamepadConnect: app.onGamepadConnect,\n\t\tonGamepadDisconnect: app.onGamepadDisconnect,\n\t\tonError,\n\t\tonCleanup,\n\t\t// misc\n\t\tcamPos,\n\t\tcamScale,\n\t\tcamRot,\n\t\tshake,\n\t\ttoScreen,\n\t\ttoWorld,\n\t\tsetGravity,\n\t\tgetGravity,\n\t\tsetBackground,\n\t\tgetBackground,\n\t\tgetGamepads: app.getGamepads,\n\t\t// obj\n\t\tadd,\n\t\tmake,\n\t\tdestroy,\n\t\tdestroyAll,\n\t\tget,\n\t\treadd,\n\t\t// comps\n\t\tpos,\n\t\tscale,\n\t\trotate,\n\t\tcolor,\n\t\topacity,\n\t\tanchor,\n\t\tarea,\n\t\tsprite,\n\t\ttext,\n\t\trect,\n\t\tcircle,\n\t\tuvquad,\n\t\toutline,\n\t\tbody,\n\t\tdoubleJump,\n\t\tshader,\n\t\ttimer,\n\t\tfixed,\n\t\tstay,\n\t\thealth,\n\t\tlifespan,\n\t\tz,\n\t\tmove,\n\t\toffscreen,\n\t\tfollow,\n\t\tstate,\n\t\tfadeIn,\n\t\ttile,\n\t\tagent,\n\t\t// group events\n\t\ton,\n\t\tonUpdate,\n\t\tonDraw,\n\t\tonAdd,\n\t\tonDestroy,\n\t\tonClick,\n\t\tonCollide,\n\t\tonCollideUpdate,\n\t\tonCollideEnd,\n\t\tonHover,\n\t\tonHoverUpdate,\n\t\tonHoverEnd,\n\t\t// input\n\t\tonKeyDown: app.onKeyDown,\n\t\tonKeyPress: app.onKeyPress,\n\t\tonKeyPressRepeat: app.onKeyPressRepeat,\n\t\tonKeyRelease: app.onKeyRelease,\n\t\tonMouseDown: app.onMouseDown,\n\t\tonMousePress: app.onMousePress,\n\t\tonMouseRelease: app.onMouseRelease,\n\t\tonMouseMove: app.onMouseMove,\n\t\tonCharInput: app.onCharInput,\n\t\tonTouchStart: app.onTouchStart,\n\t\tonTouchMove: app.onTouchMove,\n\t\tonTouchEnd: app.onTouchEnd,\n\t\tonScroll: app.onScroll,\n\t\tonGamepadButtonDown: app.onGamepadButtonDown,\n\t\tonGamepadButtonPress: app.onGamepadButtonPress,\n\t\tonGamepadButtonRelease: app.onGamepadButtonRelease,\n\t\tonGamepadStick: app.onGamepadStick,\n\t\tmousePos: mousePos,\n\t\tmouseDeltaPos: app.mouseDeltaPos,\n\t\tisKeyDown: app.isKeyDown,\n\t\tisKeyPressed: app.isKeyPressed,\n\t\tisKeyPressedRepeat: app.isKeyPressedRepeat,\n\t\tisKeyReleased: app.isKeyReleased,\n\t\tisMouseDown: app.isMouseDown,\n\t\tisMousePressed: app.isMousePressed,\n\t\tisMouseReleased: app.isMouseReleased,\n\t\tisMouseMoved: app.isMouseMoved,\n\t\tisGamepadButtonPressed: app.isGamepadButtonPressed,\n\t\tisGamepadButtonDown: app.isGamepadButtonDown,\n\t\tisGamepadButtonReleased: app.isGamepadButtonReleased,\n\t\t// getGamepadStick,\n\t\tcharInputted: app.charInputted,\n\t\t// timer\n\t\tloop,\n\t\twait,\n\t\t// audio\n\t\tplay,\n\t\tvolume,\n\t\tburp,\n\t\taudioCtx: audio.ctx,\n\t\t// math\n\t\tTimer,\n\t\tLine,\n\t\tRect,\n\t\tCircle,\n\t\tPolygon,\n\t\tVec2,\n\t\tColor,\n\t\tMat4,\n\t\tQuad,\n\t\tRNG,\n\t\trand,\n\t\trandi,\n\t\trandSeed,\n\t\tvec2,\n\t\trgb,\n\t\thsl2rgb,\n\t\tquad,\n\t\tchoose,\n\t\tchance,\n\t\tlerp,\n\t\ttween,\n\t\teasings,\n\t\tmap,\n\t\tmapc,\n\t\twave,\n\t\tdeg2rad,\n\t\trad2deg,\n\t\ttestLineLine,\n\t\ttestRectRect,\n\t\ttestRectLine,\n\t\ttestRectPoint,\n\t\ttestCirclePolygon,\n\t\ttestLinePoint,\n\t\ttestLineCircle,\n\t\t// raw draw\n\t\tdrawSprite,\n\t\tdrawText,\n\t\tformatText,\n\t\tdrawRect,\n\t\tdrawLine,\n\t\tdrawLines,\n\t\tdrawTriangle,\n\t\tdrawCircle,\n\t\tdrawEllipse,\n\t\tdrawUVQuad,\n\t\tdrawPolygon,\n\t\tdrawFormattedText,\n\t\tdrawMasked,\n\t\tdrawSubtracted,\n\t\tpushTransform,\n\t\tpopTransform,\n\t\tpushTranslate,\n\t\tpushScale,\n\t\tpushRotate,\n\t\tpushMatrix,\n\t\tusePostEffect,\n\t\t// debug\n\t\tdebug,\n\t\t// scene\n\t\tscene,\n\t\tgo,\n\t\tonSceneLeave,\n\t\t// level\n\t\taddLevel,\n\t\t// storage\n\t\tgetData,\n\t\tsetData,\n\t\tdownload,\n\t\tdownloadJSON,\n\t\tdownloadText,\n\t\tdownloadBlob,\n\t\t// plugin\n\t\tplug,\n\t\t// char sets\n\t\tASCII_CHARS,\n\t\t// dom\n\t\tcanvas: app.canvas(),\n\t\t// misc\n\t\taddKaboom,\n\t\t// dirs\n\t\tLEFT: Vec2.LEFT,\n\t\tRIGHT: Vec2.RIGHT,\n\t\tUP: Vec2.UP,\n\t\tDOWN: Vec2.DOWN,\n\t\t// colors\n\t\tRED: Color.RED,\n\t\tGREEN: Color.GREEN,\n\t\tBLUE: Color.BLUE,\n\t\tYELLOW: Color.YELLOW,\n\t\tMAGENTA: Color.MAGENTA,\n\t\tCYAN: Color.CYAN,\n\t\tWHITE: Color.WHITE,\n\t\tBLACK: Color.BLACK,\n\t\tquit,\n\t\t// helpers\n\t\tEvent,\n\t\tEventHandler,\n\t\tEventController,\n\t}\n\n\tif (gopt.plugins) {\n\t\tgopt.plugins.forEach(plug)\n\t}\n\n\t// export everything to window if global is set\n\tif (gopt.global !== false) {\n\t\tfor (const k in ctx) {\n\t\t\twindow[k] = ctx[k]\n\t\t}\n\t}\n\n\tapp.canvas().focus()\n\n\treturn ctx\n\n}\n", "// The textbox object.\r\nimport type * as KA from \"kaboom\";\r\nimport type { Textbox, TextboxComp, TextboxOpt } from \"../types\";\r\nimport { getGameData } from \"../main\";\r\n\r\nfunction textboxComp(): TextboxComp {\r\n    const data = getGameData();\r\n    const k = data.k;\r\n    let textbox: KA.GameObj;\r\n    let namebox: KA.GameObj;\r\n\r\n    return {\r\n        id: \"mandarina_textbox\",\r\n        require: [],\r\n\r\n        skipped: false,\r\n        curChar: 0,\r\n\r\n        add() {\r\n            textbox = this.text;\r\n            namebox = this.name;\r\n        },\r\n\r\n        write(this: KA.GameObj, text) {\r\n            // TODO: Pronous replacement support\r\n            const writePromise = new Promise<void>((resolve) => {\r\n                textbox.text = \"\";\r\n                this.curChar = 0;\r\n\r\n                const writeCharacter = async () => {\r\n                    const characterToWrite = text[this.curChar];\r\n\r\n                    if (this.skipped) {\r\n                        this.skipped = false;\r\n                        this.curChar = 0;\r\n                        textbox.text = text;\r\n                        return resolve();\r\n                    }\r\n\r\n                    textbox.text += characterToWrite;\r\n                    this.trigger(\"writeCharacter\", text[this.curChar]);\r\n\r\n                    if (characterToWrite == \",\")\r\n                        await k.wait(data.opt.writeCommaWait ?? 0.5);\r\n\r\n                    this.curChar++;\r\n                    if (this.curChar == text.length) {\r\n                        resolve();\r\n                    } else {\r\n                        await k.wait(data.opt.writeVel ?? 0.05);\r\n                        writeCharacter();\r\n                    }\r\n                };\r\n\r\n                writeCharacter();\r\n            });\r\n\r\n            writePromise.then(() => {\r\n                this.curChar = 0;\r\n                this.trigger(\"writeEnd\");\r\n            });\r\n\r\n            return writePromise;\r\n        },\r\n\r\n        clear() {\r\n            textbox.text = \"\";\r\n        },\r\n\r\n        skip() {\r\n            if (!this.skipped) this.skipped = true;\r\n        },\r\n\r\n        show() {\r\n            k.tween(\r\n                0,\r\n                1,\r\n                0.5,\r\n                (v) => {\r\n                    this.opacity = v;\r\n                },\r\n                k.easings.linear,\r\n            );\r\n        },\r\n\r\n        hide() {\r\n            k.tween(\r\n                1,\r\n                0,\r\n                0.5,\r\n                (v) => {\r\n                    this.opacity = v;\r\n                },\r\n                k.easings.linear,\r\n            );\r\n        },\r\n\r\n        changeName(text, color) {\r\n            namebox.text = text;\r\n            namebox.use(\r\n                k.color(\r\n                    color\r\n                        ? color\r\n                        : k.Color.fromHex(\r\n                            data.opt.textbox?.textColor || \"#000000\",\r\n                        ),\r\n                ),\r\n            );\r\n        },\r\n    };\r\n}\r\n\r\nexport function addTextbox(opt?: TextboxOpt): Textbox {\r\n    const k = getGameData().k;\r\n\r\n    const options = {\r\n        width: opt?.width ?? k.width() - k.width() / 16,\r\n        height: opt?.height ?? 200,\r\n        pos: opt?.pos ?? k.vec2(k.center().x, k.height()),\r\n        sprite: opt?.sprite ?? undefined,\r\n        textAlign: opt?.textAlign ?? \"left\",\r\n        textSize: opt?.textSize ?? 16,\r\n        textFont: opt?.textFont ?? \"sans-serif\",\r\n        textColor: opt?.textColor ?? \"#000000\",\r\n        textOffset: opt?.textOffset ? k.vec2(...opt.textOffset) : k.vec2(0),\r\n    };\r\n\r\n    let boxDimensions: KA.Vec2;\r\n\r\n    if (options.sprite) {\r\n        const spr = k.add([\r\n            k.pos(k.vec2(k.width(), k.height()).scale(100)),\r\n            k.sprite(options.sprite),\r\n        ]);\r\n\r\n        boxDimensions = k.vec2(spr.width, spr.height);\r\n    } else {\r\n        boxDimensions = k.vec2(options.width, options.height);\r\n    }\r\n\r\n    // Get the textbox's width and height if is sprite, if not, use the opt values.\r\n    const textboxWidth = boxDimensions.x;\r\n    const textboxHeight = boxDimensions.y;\r\n\r\n    // The textbox parent object.\r\n    const textbox: Textbox = k.make([\r\n        k.pos(options.pos),\r\n        k.layer(\"textbox\"),\r\n        k.anchor(\"bot\"),\r\n        k.opacity(1),\r\n        textboxComp(),\r\n    ]);\r\n\r\n    // The textbox's background.\r\n    textbox.add([\r\n        k.layer(\"textbox\"),\r\n        k.anchor(\"bot\"),\r\n        options.sprite\r\n            ? k.sprite(options.sprite)\r\n            : k.rect(options.width, options.height),\r\n    ]);\r\n\r\n    // The textbox's text.\r\n    textbox.text = textbox.add([\r\n        k.pos(\r\n            -textboxWidth / 2 + options.textOffset.x,\r\n            -textboxHeight + options.textOffset.y,\r\n        ),\r\n        k.layer(\"textbox\"),\r\n        k.text(\"\", {\r\n            width: textboxWidth,\r\n            size: options.textSize,\r\n            font: options.textFont,\r\n            align: options.textAlign,\r\n        }),\r\n        k.color(k.Color.fromHex(options.textColor)),\r\n    ]);\r\n\r\n    // The textbox's name.\r\n    textbox.name = textbox.add([\r\n        k.pos(-textboxWidth / 2, -textboxHeight),\r\n        k.layer(\"textbox_name\"),\r\n        k.anchor(\"botleft\"),\r\n        k.text(\"\"),\r\n        k.color(k.Color.fromHex(options.textColor)),\r\n    ]);\r\n\r\n    k.add(textbox);\r\n    return textbox;\r\n}\r\n", "import type {\r\n    MandarinaPlugin,\r\n    MandarinaOpt,\r\n    Action,\r\n    ActionType,\r\n    CharacterDataOpt,\r\n} from \"./types\";\r\nimport { addTextbox } from \"./objects/textbox\";\r\nimport { data, getGameData } from \"./main\";\r\n\r\n// Constants\r\nconst LAYERS = [\r\n    \"backgrounds\",\r\n    \"characters\",\r\n    \"textbox\",\r\n    \"textbox_name\",\r\n    \"choices\",\r\n];\r\n\r\nexport function addChapter<T extends ActionType>(\r\n    name: string,\r\n    actions: () => Action<T>[],\r\n) {\r\n    getGameData().chapters.set(name, actions());\r\n}\r\n\r\nexport function addCharacter(\r\n    id: string,\r\n    name: string,\r\n    opt: CharacterDataOpt,\r\n): void {\r\n    const data = getGameData();\r\n\r\n    if (data.characters.has(id))\r\n        throw new Error(`Character with id \"${id}\" already exists.`);\r\n\r\n    data.characters.set(id, {\r\n        id,\r\n        name,\r\n        opt,\r\n    });\r\n}\r\n\r\nexport function createAction<T extends ActionType>(opt: Action<T>): Action<T> {\r\n    const action = { ...opt };\r\n\r\n    return action;\r\n}\r\n\r\nfunction getCurrentAction() {\r\n    const data = getGameData();\r\n\r\n    const chapter = data.chapters.get(data.currentChapter);\r\n    if (!chapter)\r\n        throw new Error(`Chapter \"${data.currentChapter}\" not found.`);\r\n\r\n    return chapter[data.currentAction];\r\n}\r\n\r\nfunction getPreviousAction() {\r\n    const data = getGameData();\r\n    const chapter = data.chapters.get(data.currentChapter);\r\n\r\n    if (!chapter)\r\n        throw new Error(`Chapter \"${data.currentChapter}\" not found.`);\r\n\r\n    return chapter[data.currentAction - 1];\r\n}\r\n\r\n// New game functions\r\nasync function nextAction() {\r\n    const data = getGameData();\r\n    const action = getCurrentAction();\r\n\r\n    data.processingAction = true;\r\n\r\n    await action.start();\r\n\r\n    // If it not stopped by another process, continue\r\n    if (data.processingAction) {\r\n        if (action.autoskip) {\r\n            data.currentAction++;\r\n            nextAction();\r\n        }\r\n\r\n        data.processingAction = false;\r\n        data.currentAction++;\r\n    }\r\n}\r\n\r\nfunction previousAction() {\r\n    const data = getGameData();\r\n\r\n    data.processingAction = true;\r\n\r\n    getCurrentAction().back?.();\r\n    getPreviousAction().start();\r\n\r\n    data.currentAction--;\r\n    data.processingAction = false;\r\n}\r\n\r\nfunction skipAction() {\r\n    getCurrentAction().skip?.();\r\n    getGameData().processingAction = false;\r\n}\r\n\r\nexport function startNovel() {\r\n    const { k, m, opt, isProcessingAction } = getGameData();\r\n\r\n    k.scene(\"mandarina\", () => {\r\n        k.onLoad(() => {\r\n            k.layers(LAYERS, \"textbox\");\r\n\r\n            m._textbox = addTextbox(opt.textbox);\r\n\r\n            nextAction();\r\n\r\n            // User input\r\n            // TODO: Add support for customize keys\r\n            k.onUpdate(() => {\r\n                if (\r\n                    k.isKeyPressed(\"space\") ||\r\n                    k.isKeyPressed(\"right\") ||\r\n                    k.isMousePressed()\r\n                ) {\r\n                    if (!isProcessingAction()) nextAction();\r\n                    else skipAction();\r\n                }\r\n\r\n                if (k.isKeyPressed(\"left\")) {\r\n                    previousAction();\r\n                }\r\n            });\r\n        });\r\n    });\r\n}\r\n", "import type { MandarinaPlugin } from \"../types\";\r\nimport { getGameData } from \"../main\";\r\nimport { createAction } from \"../game\";\r\n\r\nexport function changeChapter(this: MandarinaPlugin, name: string) {\r\n    return createAction<\"normal\">({\r\n        id: \"change_chapter\",\r\n        type: \"normal\",\r\n        start() {\r\n            getGameData().currentChapter = name;\r\n            getGameData().currentAction = 0;\r\n        },\r\n        skip() {\r\n            return;\r\n        },\r\n        back() {\r\n            getGameData().currentChapter = name;\r\n            getGameData().currentAction = 0;\r\n        },\r\n    });\r\n}\r\n", "import type { KaboomCtx } from \"kaboom\";\n\nexport interface LayerPlugin {\n    layers: (layersArr: string[], def?: string) => void;\n    layer: (name: string) => {\n        id: string;\n        add: () => void;\n        inspect: () => string;\n    };\n    z: (z: number) => { id: string; userZ: number };\n}\n\nexport function layerPlugin(k: KaboomCtx): LayerPlugin {\n    let userLayers: string[] = [];\n    let defLayer = \"\";\n\n    return {\n        layers(layersArr, def) {\n            userLayers = layersArr;\n            defLayer = def ?? layersArr[0];\n\n            k.onAdd((obj) => {\n                if (obj.is(\"layer\")) return;\n\n                obj.use(this.layer(defLayer));\n            });\n        },\n\n        layer(name: string) {\n            return {\n                id: \"layer\",\n                add() {\n                    if (userLayers.indexOf(name) == -1) {\n                        throw new Error(`no layer \"${name}\"`);\n                    }\n\n                    const layerZ = userLayers.indexOf(name);\n\n                    this.z = layerZ * 1000 + (this.userZ ?? 0);\n                },\n\n                inspect() {\n                    return name;\n                },\n            };\n        },\n\n        z(z) {\n            return {\n                id: \"z\",\n                userZ: z,\n            };\n        },\n    };\n}\n", "import type * as KA from \"kaboom\";\r\nimport { getGameData } from \"../main\";\r\nimport { createAction } from \"../game\";\r\n\r\nexport function showCharacter(\r\n    characterId: string,\r\n    expression = \"default\",\r\n    align = \"center\",\r\n) {\r\n    const { m, k, characters } = getGameData();\r\n    let ch: KA.GameObj;\r\n\r\n    return createAction<\"visual\">({\r\n        id: \"show_character\",\r\n        type: \"visual\",\r\n        autoskip: true,\r\n        fade: false,\r\n        start() {\r\n            const textbox = m._textbox;\r\n            const comps: KA.Comp[] = [];\r\n\r\n            if (this.fade) {\r\n                comps.push(k.opacity(0), k.fadeIn(1));\r\n            }\r\n\r\n            const character = characters.get(characterId);\r\n            if (!character)\r\n                throw new Error(\r\n                    `Character with id \"${characterId}\" does not exist.`,\r\n                );\r\n\r\n            const expressionSprite = character.opt?.expressions?.[expression];\r\n            if (!expressionSprite)\r\n                throw Error(`Expression \"${expression}\" does not exist.`);\r\n\r\n            // k.debug.log(`Showing character \"${characterId}\" with expression \"${expression}\" aligned to \"${align}\".`);\r\n\r\n            const alignments = {\r\n                left: [ k.pos(0, k.height()), k.anchor(\"botleft\") ],\r\n                center: [ k.pos(k.center().x, k.height()), k.anchor(\"bot\") ],\r\n                right: [ k.pos(k.width(), k.height()), k.anchor(\"botright\") ],\r\n            };\r\n\r\n            ch = k.add([\r\n                ...alignments[align],\r\n                k.layer(\"characters\"),\r\n                k.sprite(expressionSprite),\r\n                k.opacity(1),\r\n                ...comps,\r\n                \"character_\" + characterId,\r\n            ]);\r\n\r\n            if (textbox && character.opt?.voice) {\r\n                textbox.on(\"writeCharacter\", () => {\r\n                    k.play(character.opt?.voice ?? \"\");\r\n                });\r\n            }\r\n        },\r\n        back() {\r\n            if (!ch) return;\r\n\r\n            ch.destroy();\r\n        },\r\n        skip() {\r\n            return;\r\n        },\r\n        fadeIn() {\r\n            this.fade = true;\r\n            return this;\r\n        },\r\n    });\r\n}\r\n\r\nexport function hideCharacter(characterId: string) {\r\n    const { k } = getGameData();\r\n\r\n    return createAction<\"normal\">({\r\n        id: \"hide_character\",\r\n        type: \"normal\",\r\n        start: () => {\r\n            k.get(\"character_\" + characterId, { recursive: true })[0].destroy();\r\n        },\r\n        skip() {\r\n            return;\r\n        },\r\n        back() {\r\n            this.showCharacter(characterId, \"default\", \"center\");\r\n        },\r\n    });\r\n}\r\n", "import type * as KA from \"kaboom\";\nimport { getGameData } from \"../main\";\nimport { createAction } from \"../game\";\n\nexport function showBackground(background: string | KA.Color) {\n    const { k } = getGameData();\n    let bg: KA.GameObj;\n\n    return createAction<\"visual\">({\n        id: \"showBackground\",\n        type: \"visual\",\n        autoskip: true,\n        fade: false,\n        start() {\n            const comps: KA.Comp[] = [];\n\n            if (this.fade) {\n                comps.push(k.opacity(0), k.fadeIn(1));\n            }\n\n            if (typeof background == \"string\") {\n                try {\n                    const color = k.Color.fromHex(background);\n                    bg = k.add([\n                        k.layer(\"backgrounds\"),\n                        k.rect(k.width(), k.height()),\n                        k.color(color),\n                        ...comps,\n                    ]);\n                } catch {\n                    bg = k.add([\n                        k.layer(\"backgrounds\"),\n                        k.sprite(background),\n                        ...comps,\n                    ]);\n                }\n            } else {\n                bg = k.add([\n                    k.layer(\"backgrounds\"),\n                    k.rect(k.width(), k.height()),\n                    k.color(background),\n                    ...comps,\n                ]);\n            }\n        },\n        skip() {\n            return;\n        },\n        back() {\n            bg.destroy();\n        },\n        fadeIn() {\n            this.fade = true;\n            return this;\n        },\n    });\n}\n", "// All audio related actions\r\nimport type * as KA from \"kaboom\";\r\nimport { getGameData } from \"../main\";\r\nimport { createAction } from \"../game\";\r\n\r\n// TODO: Is necessary an stopAudio()?\r\n// Maybe when user define channels, the user can define if audio must stop when another\r\n// audio is played in the same channel.\r\n// Another options is define some channels by default (music, sounds, voices, etc.).\r\nexport function playAudio(\r\n    channel: string,\r\n    audio: string,\r\n    opt: Exclude<KA.AudioPlayOpt, \"volume\">,\r\n) {\r\n    const { k, playingAudios } = getGameData();\r\n\r\n    let audioPlay: KA.AudioPlay;\r\n\r\n    return createAction<\"audio\">({\r\n        id: \"play_audio\",\r\n        type: \"audio\",\r\n        volume: 0.5,\r\n        autoskip: true,\r\n        start() {\r\n            audioPlay = k.play(audio, {\r\n                volume: this.volume,\r\n                ...opt,\r\n            });\r\n            audioPlay.paused = true;\r\n\r\n            if (playingAudios.has(channel)) {\r\n                playingAudios.get(channel)?.push(audioPlay);\r\n            } else {\r\n                playingAudios.set(channel, [ audioPlay ]);\r\n            }\r\n        },\r\n        skip() {\r\n            return;\r\n        },\r\n        back() {\r\n            if (!audioPlay) return;\r\n            audioPlay.paused = true;\r\n        },\r\n        withVolume(vol: number) {\r\n            this.volume = vol;\r\n            return this;\r\n        },\r\n        stopAt(time) {\r\n            k.wait(time, () => (audioPlay.paused = true));\r\n            return this;\r\n        },\r\n    });\r\n}\r\n", "import { getGameData } from \"../main\";\nimport { createAction } from \"../game\";\n\nexport function showTextbox() {\n    const { m } = getGameData();\n\n    return createAction<\"normal\">({\n        id: \"show_textbox\",\n        type: \"normal\",\n        start() {\n            const textbox = m._textbox;\n\n            textbox?.show();\n        },\n        skip() {\n            return;\n        },\n        back() {\n            // Not implemented\n        },\n    });\n}\n\nexport function hideTextbox() {\n    const { m } = getGameData();\n\n    return createAction<\"normal\">({\n        id: \"hide_textbox\",\n        type: \"normal\",\n        start() {\n            const textbox = m._textbox;\n\n            textbox?.hide();\n        },\n        skip() {\n            return;\n        },\n        back() {\n            // Not implemented\n        },\n    });\n}\n\nexport function say(...args: string[]) {\n    const { m, k } = getGameData();\n\n    return createAction<\"normal\">({\n        id: \"say\",\n        type: \"normal\",\n        async start() {\n            const textbox = m._textbox;\n\n            if (!textbox) throw new Error(\"Textbox not found.\");\n\n            if (args.length > 1) {\n                const ch = getGameData().characters.get(args[0]);\n                if (!ch)\n                    throw new Error(\n                        `Character with the ${args[0]} id's not found.`,\n                    );\n\n                textbox.changeName(\n                    ch.name,\n                    k.Color.fromHex(ch.opt?.color || \"#000000\"),\n                );\n\n                await textbox.write(args[1]);\n            } else {\n                textbox.changeName(\"\");\n                await textbox.write(args[0]);\n            }\n        },\n        back() {\n            if (!m._textbox) return;\n            m._textbox.clear();\n        },\n        skip() {\n            m._textbox?.skip();\n        },\n    });\n}\n", "import type * as KA from \"kaboom\";\r\nimport type {\r\n    Action,\r\n    MandarinaOpt,\r\n    MandarinaPlugin,\r\n    CharacterData,\r\n} from \"./types\";\r\nimport kaboom from \"kaboom\";\r\nimport { startNovel, addChapter, addCharacter } from \"./game\";\r\nimport { changeChapter } from \"./actions/narration\";\r\nimport { LayerPlugin, layerPlugin } from \"./plugins/layer\";\r\nimport { showCharacter, hideCharacter } from \"./actions/character\";\r\nimport { showBackground } from \"./actions/background\";\r\nimport { playAudio } from \"./actions/audio\";\r\nimport { say, showTextbox, hideTextbox } from \"./actions/textbox\";\r\n\r\ntype GameData = {\r\n    k: KA.KaboomCtx & LayerPlugin;\r\n    m: MandarinaPlugin;\r\n    opt: MandarinaOpt;\r\n    chapters: Map<string, Action[]>;\r\n    characters: Map<string, CharacterData>;\r\n    currentChapter: string;\r\n    currentAction: number;\r\n    processingAction: boolean;\r\n    playingAudios: Map<string, KA.AudioPlay[]>;\r\n\r\n    isProcessingAction(): boolean;\r\n};\r\n\r\nlet mandarinaPluginCtx: MandarinaPlugin;\r\n\r\nexport const data: Partial<GameData> = {\r\n    chapters: new Map<string, Action[]>(),\r\n    characters: new Map(),\r\n    currentChapter: \"start\",\r\n    currentAction: 0,\r\n    processingAction: false,\r\n    playingAudios: new Map(),\r\n\r\n    isProcessingAction(this: GameData) {\r\n        return data.processingAction as boolean;\r\n    },\r\n};\r\n\r\nfunction hasContextStarted(d: typeof data): d is GameData {\r\n    return \"m\" in data;\r\n}\r\n\r\nexport function mandarinaPlugin(k: KA.KaboomCtx): MandarinaPlugin {\r\n    mandarinaPluginCtx = {\r\n        // TODO: `as` usage | Maybe a PR in Kaboom?\r\n        k: k as KA.KaboomCtx & LayerPlugin,\r\n        pronoun: \"none\",\r\n\r\n        /** Configuration and setup */\r\n        loadImage: k.loadSprite,\r\n        loadAudio: k.loadSound,\r\n\r\n        character: addCharacter,\r\n        chapter: addChapter,\r\n\r\n        start() {\r\n            k.go(\"mandarina\");\r\n        },\r\n\r\n        /** Actions */\r\n        jump: changeChapter,\r\n        say,\r\n        show: showCharacter,\r\n        hide: hideCharacter,\r\n        showBackground: showBackground,\r\n        playAudio: playAudio,\r\n        showTextbox: showTextbox,\r\n        hideTextbox: hideTextbox,\r\n    };\r\n\r\n    data.m = mandarinaPluginCtx;\r\n\r\n    return mandarinaPluginCtx;\r\n}\r\n\r\n// The Mandaarina function creates a Kaboom game and add the plugin.\r\nexport default function mandarina(opt: MandarinaOpt): MandarinaPlugin {\r\n    const k = kaboom({\r\n        ...opt,\r\n        plugins: [ mandarinaPlugin, layerPlugin ],\r\n    });\r\n\r\n    const extractedPluginCtx: Partial<MandarinaPlugin> = {};\r\n\r\n    // get plugin context\r\n    Object.keys(k).forEach((key) => {\r\n        if (Object.keys(mandarinaPluginCtx).includes(key)) {\r\n            extractedPluginCtx[key] = k[key];\r\n        }\r\n    });\r\n\r\n    if (!extractedPluginCtx) throw new Error(\"Mandarina plugin not found\");\r\n\r\n    // TODO: As `MandarinaPlugin` use in mandarina() method\r\n    mandarinaPluginCtx = extractedPluginCtx as MandarinaPlugin;\r\n    data.k = k;\r\n    data.opt = opt;\r\n\r\n    startNovel();\r\n\r\n    return extractedPluginCtx as MandarinaPlugin;\r\n}\r\n\r\nexport function getGameData(): GameData {\r\n    if (hasContextStarted(data)) {\r\n        return data;\r\n    } else {\r\n        throw new Error(\"Mandarina context not started\");\r\n    }\r\n}\r\n", "import mandarina from \"mandarinavn\";\n\n// We create the Mandarina game context,\n// There's the init game options\nconst m = mandarina({\n    width: 960,\n    height: 540,\n    textbox: {\n        sprite: \"dsimui_textbox\",\n        textFont: \"sans-serif\",\n        textSize: 24,\n        textOffset: [ 3, 3 ],\n    },\n    logMax: 20,\n});\n\n// Load images (assets)\nm.loadImage(\"nerune\", \"./assets/nerune.png\");\nm.loadImage(\"ruby\", \"./assets/ruby.png\");\nm.loadImage(\"dsimui_textbox\", \"./assets/textbox.png\");\n\n// We define our characters.\nm.character(\"t\", \"Deffy\", {\n    // The name color.\n    color: \"#873e84\",\n    // The character's images for expressions.\n    expressions: {\n        normal: \"nerune\",\n    },\n});\n\nm.chapter(\"start\", () => [\n    // Show a background.\n    m.showBackground(m.k.rgb(255, 255, 255)).fadeIn(),\n    // Write a text.\n    m.say(\"...\"),\n    // Show our character.\n    m.show(\"t\", \"normal\").fadeIn(),\n    // Say something.\n    m.say(\"t\", \"Hi human, object, or whatever you are!\"),\n    m.say(\"t\", \"Welcome to this Mandarina test!\"),\n    m.say(\"t\", \"This engine are in development, so it's not ready yet.\"),\n\n    // Jump to another chapter.\n    m.jump(\"ch1\"),\n]);\n\nm.chapter(\"ch1\", () => [\n    m.say(\"t\", \"This is a simple explanation of how Mandarina works.\"),\n]);\n\nm.start();\n"],
  "mappings": "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",
  "names": ["deg2rad", "deg", "__name", "rad2deg", "rad", "clamp", "val", "min", "max", "lerp", "a", "b", "t", "Vec2", "Color", "map", "v", "l1", "h1", "l2", "h2", "mapc", "_Vec2", "x", "y", "angle", "args", "p2", "vec2", "s", "len", "normal", "on", "dest", "cos", "sin", "n", "m", "other", "Rect", "__publicField", "_Color", "r", "g", "arr", "hex", "result", "h", "l", "hue2rgb", "p", "q", "rgb", "hsl2rgb", "Quad", "w", "quad", "Mat4", "c", "m0", "m1", "m4", "m5", "out", "i", "j", "det", "f00", "f01", "f02", "f03", "f04", "f05", "f06", "f07", "f08", "f09", "f10", "f11", "f12", "f13", "f14", "f15", "f16", "f17", "f18", "wave", "lo", "hi", "f", "A", "C", "M", "RNG", "seed", "defRNG", "randSeed", "rand", "randi", "chance", "choose", "list", "testRectRect", "r1", "r2", "testLineLineT", "denom", "ua", "ub", "testLineLine", "testRectLine", "testRectPoint", "pts", "Line", "pt", "testLinePoint", "v1", "v2", "testLineCircle", "circle", "centerToOrigin", "dis", "t1", "t2", "testCirclePoint", "testCirclePolygon", "prev", "cur", "testPolygonPoint", "poly", "p1", "pos", "width", "height", "Polygon", "dx", "dy", "Circle", "center", "radius", "tr", "Ellipse", "rx", "ry", "total", "sat", "overlap", "displacement", "axisProj", "min1", "max1", "min2", "max2", "o", "o1", "o2", "IDList", "id", "EventController", "cancel", "events", "ev", "e", "Event", "action", "res", "EventHandler", "name", "deepEq", "k1", "k2", "k", "base64ToArrayBuffer", "base64", "binstr", "bytes", "dataURLToArrayBuffer", "url", "download", "filename", "downloadText", "text", "downloadJSON", "data", "downloadBlob", "blob", "isDataURL", "str", "getExt", "uid", "BinaryHeap", "compareFn", "item", "lastItem", "parent", "child", "index1", "index2", "gamepad_default", "ButtonState", "btn", "GamepadState", "FPSCounter", "dt", "app_default", "opt", "state", "canvas", "time", "fps", "numFrames", "screenshot", "setCursor", "getCursor", "setCursorLocked", "isCursorLocked", "enterFullscreen", "el", "exitFullscreen", "getFullscreenElement", "setFullscreen", "isFullscreen", "quit", "canvasEvents", "docEvents", "winEvents", "resizeObserver", "run", "accumulatedDt", "frame", "loopTime", "realDt", "desiredDt", "processInput", "resetInput", "isTouchscreen", "mousePos", "mouseDeltaPos", "isMousePressed", "isMouseDown", "isMouseReleased", "isMouseMoved", "isKeyPressed", "isKeyPressedRepeat", "isKeyDown", "isKeyReleased", "isGamepadButtonPressed", "isGamepadButtonDown", "isGamepadButtonReleased", "onResize", "onKeyDown", "key", "onKeyPress", "onKeyPressRepeat", "onKeyRelease", "onMouseDown", "mouse", "onMousePress", "onMouseRelease", "onMouseMove", "onCharInput", "onTouchStart", "onTouchMove", "onTouchEnd", "onScroll", "onGamepadButtonDown", "onGamepadButtonPress", "onGamepadButtonRelease", "onGamepadStick", "stick", "onGamepadConnect", "onGamepadDisconnect", "getGamepadStick", "charInputted", "getGamepads", "processGamepad", "registerGamepad", "browserGamepad", "gamepad", "removeGamepad", "gamepadState", "stickName", "value", "MOUSE_BUTTONS", "PREVENT_DEFAULT_KEYS", "KEY_ALIAS", "touches", "kbGamepad", "entries", "entry", "c2", "c3", "c4", "c5", "easings", "easings_default", "Timer", "Dr", "Ui", "mi", "kn", "pi", "Gr", "Fr", "VERSION", "ASCII_CHARS", "DEF_ANCHOR", "BG_GRID_SIZE", "DEF_FONT", "DBG_FONT", "DEF_TEXT_SIZE", "DEF_TEXT_CACHE_SIZE", "MAX_TEXT_CACHE_SIZE", "FONT_ATLAS_WIDTH", "FONT_ATLAS_HEIGHT", "SPRITE_ATLAS_WIDTH", "SPRITE_ATLAS_HEIGHT", "UV_PAD", "DEF_HASH_GRID_SIZE", "DEF_FONT_FILTER", "LOG_MAX", "VERTEX_FORMAT", "STRIDE", "sum", "MAX_BATCHED_QUAD", "MAX_BATCHED_VERTS", "MAX_BATCHED_INDICES", "VERT_TEMPLATE", "FRAG_TEMPLATE", "DEF_VERT", "DEF_FRAG", "COMP_DESC", "COMP_EVENTS", "anchorPt", "orig", "alignPt", "align", "createEmptyAudioBuffer", "ctx", "kaboom_default", "gopt", "root", "gscale", "fixedSize", "cw", "ch", "pixelDensity", "styles", "fontCacheCanvas", "fontCacheCtx", "app", "gc", "gl", "Texture", "filter", "wrap", "img", "tex", "TexPacker", "FrameBuffer", "gfx", "defShader", "makeShader", "emptyTex", "frameBuffer", "bgColor", "bgAlpha", "vbuf", "offset", "ibuf", "bgTex", "SpriteData", "frames", "anims", "slice9", "src", "assets", "slice", "loadImg", "SoundData", "buf", "resolve", "reject", "audio", "fetchArrayBuffer", "masterNode", "burpSnd", "burp_default", "err", "Asset", "loader", "asset", "AssetBucket", "handle", "loaded", "game", "make", "load", "prom", "loadProgress", "buckets", "bucket", "loadRoot", "path", "fetchURL", "fetchJSON", "fetchText", "loadJSON", "FontData", "face", "loadFont", "font", "loadBitmapFont", "gw", "gh", "makeFont", "qw", "qh", "loadSpriteAtlas", "rej", "json", "atlas", "info", "spr", "createSpriteSheet", "images", "merged", "loadSprite", "loadPedit", "loadAseprite", "imgSrc", "jsonSrc", "resolveJSON", "size", "anim", "loadShader", "vert", "frag", "loadShaderURL", "resolveUrl", "vcode", "fcode", "loadSound", "opts", "loadBean", "bean_default", "getSprite", "getSound", "getFont", "getBitmapFont", "getShader", "getAsset", "resolveSprite", "resolveSound", "snd", "resolveShader", "shader", "resolveFont", "bfont", "volume", "play", "paused", "srcNode", "onEndEvents", "gainNode", "startTime", "stopTime", "started", "getTime", "start", "d", "cloneNode", "oldNode", "newNode", "burp", "vertSrc", "fragSrc", "vertShader", "fragShader", "prog", "formatShaderError", "msg", "FMT", "match", "vertError", "fragError", "uniform", "loc", "chars", "cols", "charMap", "drawRaw", "verts", "indices", "fixed", "shaderSrc", "flush", "transform", "screen2ndc", "frameStart", "drawUnscaled", "drawUVQuad", "usePostEffect", "frameEnd", "ow", "oh", "drawTexture", "pushMatrix", "pushTranslate", "pushScale", "pushRotate", "pushTransform", "popTransform", "color", "opacity", "uvPadX", "uvPadY", "qx", "qy", "scale", "repX", "repY", "drawSprite", "getArcPts", "radiusX", "radiusY", "end", "nverts", "step", "drawRect", "drawPolygon", "drawLine", "drawLines", "minSLen", "drawCircle", "drawTriangle", "drawEllipse", "polyOpt", "npts", "drawStenciled", "content", "mask", "test", "drawMasked", "drawSubtracted", "getViewportScale", "applyCharTransform", "fchar", "TEXT_STYLE_RE", "compileStyledText", "charStyleMap", "renderText", "idxOffset", "origIdx", "fontAtlases", "formatText", "fontName", "c2d", "lineSpacing", "letterSpacing", "curX", "tw", "th", "lines", "curLine", "cursor", "lastSpace", "lastSpaceWidth", "fchars", "line", "ox", "idx", "style", "drawText", "drawFormattedText", "ftext", "windowToContent", "contentToView", "handleErr", "debug", "updateFrame", "camPos", "camScale", "camRot", "shake", "intensity", "toScreen", "toWorld", "calcTransform", "obj", "comps", "compStates", "cleanups", "onCurCompCleanup", "trigger", "tag", "comp", "prop", "func", "checkDeps", "dep", "recurse", "isChild", "onAdd", "onDestroy", "ctrl", "cb", "event", "onUpdate", "add", "onDraw", "onCollide", "col", "onCollideUpdate", "onCollideEnd", "forAllCurrentAndFuture", "get", "onClick", "onHover", "onHoverUpdate", "onHoverEnd", "wait", "actions", "loop", "curTimer", "newAction", "enterDebugMode", "toFixed", "enterBurpMode", "setGravity", "getGravity", "setBackground", "getBackground", "speed", "diff", "rotate", "easeFunc", "tween", "anchor", "z", "follow", "move", "dir", "DEF_OFFSCREEN_DIS", "offscreen", "distance", "isOut", "screenRect", "area", "colliding", "collidingThisFrame", "mpos", "hovering", "localArea", "getRenderProps", "sprite", "spriteData", "curAnim", "spriteLoadedEvent", "calcTexScale", "left", "right", "top", "bottom", "iw", "ih", "w1", "w3", "w2", "h3", "quads", "uv", "setSpriteData", "onLoad", "prevAnim", "update", "rect", "uvquad", "outline", "timer", "from", "to", "duration", "setValue", "curTime", "DEF_JUMP_FORCE", "MAX_VEL", "body", "vel", "curPlatform", "lastPlatformPos", "wantFall", "tmass", "col2", "prevVelY", "force", "doubleJump", "numJumps", "jumpsLeft", "stay", "scenesToStay", "health", "hp", "lifespan", "fade", "initState", "stateList", "transitions", "initStateEvents", "didFirstEnter", "oldState", "available", "fadeIn", "done", "scene", "def", "go", "onSceneLeave", "getData", "setData", "plug", "plugin", "funcs", "EdgeMask", "tile", "tilePos", "isObstacle", "cost", "edges", "getEdgeMask", "loopup", "edgeMask", "level", "is", "addLevel", "numRows", "numColumns", "spatialMap", "costMap", "edgeMap", "connectivityMap", "tile2Hash", "hash2Tile", "hash", "createSpatialMap", "insertIntoSpatialMap", "removeFromSpatialMap", "index", "updateSpatialMap", "spatialMapChanged", "createCostMap", "objects", "createEdgeMap", "createConnectivityMap", "traverse", "frontier", "getNeighbours", "getCost", "node", "neighbour", "getHeuristic", "goal", "diagonals", "levelComp", "hasPos", "hasTile", "cameFrom", "costSoFar", "current", "neighbours", "next", "newCost", "row", "keys", "agent", "target", "navMapChangedEvent", "record", "frameRate", "stream", "audioDest", "recorder", "chunks", "isFocused", "destroy", "readd", "destroyAll", "boom", "kaSprite", "ka_default", "boomSprite", "boom_default", "addKaboom", "kaboom", "ka", "Collision", "source", "resolved", "checkFrame", "grid", "cellSize", "stack", "checkObj", "aobj", "bbox", "xmin", "ymin", "xmax", "ymax", "checked", "cell", "check", "col1", "drawFrame", "cam", "drawLoadScreen", "progress", "drawInspectText", "txt", "pad", "ftxt", "bw", "bh", "drawDebug", "inspecting", "flipped", "onLoading", "onError", "textStyle", "title", "onCleanup", "numTextureUnits", "unit", "isFirstFrame", "updateViewport", "pd", "ww", "wh", "rw", "rc", "sw", "sh", "rg", "textboxComp", "getGameData", "textbox", "namebox", "writePromise", "writeCharacter", "characterToWrite", "addTextbox", "options", "boxDimensions", "textboxWidth", "textboxHeight", "LAYERS", "addChapter", "addCharacter", "createAction", "getCurrentAction", "chapter", "getPreviousAction", "nextAction", "previousAction", "skipAction", "startNovel", "isProcessingAction", "changeChapter", "layerPlugin", "userLayers", "defLayer", "layersArr", "layerZ", "showCharacter", "characterId", "expression", "characters", "character", "expressionSprite", "alignments", "hideCharacter", "showBackground", "background", "bg", "playAudio", "channel", "playingAudios", "audioPlay", "vol", "showTextbox", "hideTextbox", "say", "mandarinaPluginCtx", "hasContextStarted", "mandarinaPlugin", "mandarina", "mo", "extractedPluginCtx"]
}
